var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AESCrypt.html",[0,0.24,1,2.11]],["body/classes/AESCrypt.html",[0,0.251,1,2.768,2,0.128,3,0.109,4,0.109,5,1.398,6,0.091,7,0.457,8,1.001,9,1.371,10,1.485,11,3.876,12,3.876,13,0.474,14,3.107,15,2.69,16,1.175,17,2.309,18,2.69,19,2.69,20,2.69,21,2.69,22,0.744,23,0.739,24,2.69,25,4.229,26,0.453,27,0.031,28,1.327,29,0.739,30,2.69,31,1.9,32,3.561,33,1.669,34,2.69,35,0.58,36,3.124,37,4.536,38,4.25,39,1.337,40,5.656,41,1.669,42,4.135,43,3.321,44,0.67,45,0.67,46,0.48,47,3.379,48,4.971,49,2.277,50,0.75,51,0.521,52,2.69,53,1.669,54,2.69,55,3.876,56,1.669,57,1.105,58,1.087,59,3.379,60,1,61,2.69,62,1.669,63,2.69,64,1.669,65,3.247,66,3.806,67,2.098,68,3.342,69,3.876,70,3.876,71,3.852,72,3.876,73,2.69,74,3.247,75,1.966,76,1.605,77,2.254,78,0.021,79,2.254,80,2.254,81,1.438,82,2.69,83,2.254,84,2.254,85,2.69,86,2.69,87,1.669,88,2.69,89,1.669,90,2.277,91,0.342,92,1.806,93,0.59,94,1.438,95,1.438,96,1.58,97,0.206,98,1.669,99,1.398,100,2.833,101,1.398,102,1.398,103,1.398,104,1.398,105,1.398,106,0.49,107,1.382,108,1.669,109,0.467,110,1.669,111,2.47,112,1.669,113,1.114,114,2.657,115,1.669,116,1.669,117,1.22,118,1.669,119,1.653,120,1.316,121,4.778,122,2.69,123,1.966,124,3.876,125,2.69,126,1.58,127,3.876,128,2.69,129,3.876,130,2.69,131,1.669,132,1.669,133,1.087,134,1.669,135,1.669,136,1.087,137,0.816,138,1.669,139,1.669,140,1.669,141,2.69,142,1.669,143,1.669,144,1.58,145,2.807,146,2.524,147,2.079,148,0.642,149,1.669,150,1.669,151,2.69,152,1.669,153,1.669,154,2.69,155,1.669,156,1.669,157,1.669,158,1.669,159,1.669,160,1.669,161,1.669,162,1.669,163,1.669,164,1.398,165,2.69,166,1.669,167,1.669,168,3.379,169,1.669,170,2.69,171,1.669,172,1.669,173,1.669,174,1.669,175,1.669,176,1.669,177,1.669,178,1.669,179,3.876,180,1.398,181,1.22,182,0.012]],["title/classes/AbstractAhoiApiFactory.html",[0,0.24,183,2.715]],["body/classes/AbstractAhoiApiFactory.html",[0,0.278,2,0.197,3,0.167,4,0.167,6,0.139,7,0.917,8,0.917,13,0.525,16,1.144,17,1.063,22,0.565,23,0.802,26,0.515,27,0.031,35,0.492,36,1.372,44,0.725,45,0.682,46,0.489,50,1.153,51,0.457,57,0.839,60,0.824,76,1.551,78,0.017,91,0.55,93,0.907,97,0.197,107,1.289,109,0.718,120,1.255,148,1.449,182,0.017,183,3.138,184,2.567,185,2.797,186,4.863,187,4.261,188,3.796,189,3.657,190,3.746,191,3.746,192,3.746,193,1.876,194,2.98,195,3.746,196,3.234,197,2.935,198,2.567,199,2.567,200,2.567,201,3.746,202,2.567,203,1.048,204,3.746,205,1.59,206,2.857,207,2.567,208,1.432,209,2.881,210,3.746,211,2.897,212,3.303,213,4.261,214,2.567,215,2.886,216,2.738,217,1.446,218,1.372,219,1.372,220,1.876,221,2.881,222,2.15,223,1.671,224,1.671,225,1.876,226,2.567,227,2.15,228,1.876,229,2.567,230,1.876,231,2.567,232,2.567,233,2.567,234,1.372,235,1.876,236,2.567,237,2.567,238,1.372,239,1.372,240,2.567,241,3.746,242,2.15,243,2.567,244,2.567,245,4.423,246,2.567,247,2.567,248,2.567,249,1.432,250,1.876,251,0.718,252,2.567,253,1.876,254,2.567,255,2.567,256,2.567,257,2.567,258,3.746,259,3.746,260,3.138,261,2.567,262,2.567,263,2.567,264,2.15,265,3.706,266,2.567,267,2.567,268,2.567,269,2.567,270,2.567,271,4.863,272,2.567,273,2.567,274,2.567,275,2.567,276,2.567,277,4.863,278,1.153,279,2.567,280,2.567,281,2.567,282,1.372,283,1.876,284,2.567,285,2.567,286,2.567,287,2.567,288,2.567,289,2.738,290,1.876,291,1.876,292,2.567,293,2.567]],["title/classes/AbstractAhoiAuthenticationService.html",[0,0.24,294,2.11]],["body/classes/AbstractAhoiAuthenticationService.html",[0,0.276,2,0.195,3,0.166,4,0.166,6,0.138,7,0.632,8,1.004,9,1.184,10,1.901,13,0.617,16,1.138,22,0.56,23,0.8,26,0.514,27,0.031,28,0.962,29,0.749,35,0.549,44,0.723,45,0.723,46,0.559,50,1.977,51,0.504,60,0.819,67,0.972,68,1.656,76,1.541,78,0.017,91,0.428,92,2.352,93,0.899,97,0.195,106,0.471,107,1.447,109,1.231,113,1.053,114,1.359,119,1.244,120,1.244,137,1.82,144,1.494,145,2.585,146,2.423,147,1.244,148,1.156,181,1.859,182,0.022,185,2.419,193,1.859,194,2.588,196,2.72,203,1.041,217,1.216,220,1.859,238,1.359,239,1.359,249,0.972,250,1.859,251,1.231,278,1.977,294,2.423,295,2.544,296,3.54,297,3.54,298,3.153,299,2.72,300,2.72,301,2.72,302,2.72,303,3.721,304,2.72,305,2.544,306,2.72,307,2.544,308,2.72,309,2.055,310,2.544,311,4.167,312,2.72,313,2.544,314,2.339,315,2.72,316,2.544,317,2.72,318,3.54,319,3.54,320,2.588,321,2.877,322,2.845,323,2.423,324,2.72,325,2.72,326,1.82,327,3.54,328,2.585,329,3.153,330,2.423,331,2.72,332,2.423,333,2.72,334,2.72,335,2.72,336,2.72,337,2.544,338,2.131,339,1.859,340,2.186,341,2.352,342,1.143,343,2.544,344,3.721,345,3.721,346,2.544,347,2.544,348,2.131,349,2.544,350,2.544,351,1.656,352,1.656,353,1.656,354,1.859,355,1.656,356,1.656,357,2.544,358,1.859,359,2.131,360,2.544,361,1.859,362,1.859,363,1.859,364,2.544,365,2.131,366,2.544,367,1.656,368,2.544,369,2.544,370,2.544,371,2.131,372,2.131,373,2.131,374,2.131,375,2.544,376,2.544,377,2.544,378,2.585,379,2.544,380,2.544,381,2.131,382,2.72,383,1.494,384,2.544]],["title/classes/AbstractHttpFilter.html",[0,0.24,385,1.904]],["body/classes/AbstractHttpFilter.html",[0,0.276,2,0.195,3,0.166,4,0.166,6,0.138,13,0.755,16,1.672,22,0.56,23,0.841,26,0.535,27,0.031,29,0.797,35,0.476,39,1.042,44,0.85,45,0.872,46,0.602,49,2.188,51,0.561,60,1.377,76,1.054,78,0.022,91,0.476,93,0.9,97,0.195,106,0.681,107,0.608,109,1.355,147,1.245,182,0.017,185,2.913,203,1.042,205,0.832,208,1.424,211,2.633,212,2.973,215,2.353,223,1.658,224,1.658,234,1.361,238,1.361,239,1.361,249,0.973,251,1.232,253,1.861,314,1.424,342,1.144,385,2.188,386,2.546,387,1.991,388,2.188,389,2.425,390,2.425,391,2.425,392,2.188,393,2.425,394,2.425,395,2.425,396,2.425,397,2.546,398,2.546,399,1.991,400,2.988,401,2.546,402,2.425,403,2.546,404,2.425,405,2.546,406,2.425,407,2.546,408,2.425,409,2.546,410,2.425,411,2.546,412,2.425,413,2.546,414,1.991,415,2.546,416,2.425,417,2.546,418,2.425,419,2.546,420,1.144,421,1.245,422,1.658,423,2.546,424,1.991,425,2.133,426,2.546,427,3.724,428,2.546,429,4.403,430,1.658,431,2.546,432,2.546,433,2.546,434,1.861,435,4.403,436,2.546,437,4.403,438,1.861,439,4.845,440,3.12,441,1.991,442,2.546,443,2.546,444,2.546,445,2.133,446,2.133]],["title/classes/AhoiBankingTokenService.html",[0,0.24,212,1.732]],["body/classes/AhoiBankingTokenService.html",[0,0.254,1,1.482,2,0.174,3,0.148,4,0.148,6,0.124,7,0.582,8,1.043,9,1.18,10,1.935,13,0.481,16,1.511,17,1.706,22,0.501,23,0.84,26,0.523,27,0.031,28,1.066,29,0.638,35,0.558,37,1.664,44,0.752,45,0.752,46,0.539,49,1.337,50,1.852,51,0.539,57,1.12,60,1.215,78,0.016,81,1.832,90,1.337,91,0.499,93,0.804,95,1.217,96,1.337,97,0.174,106,0.58,107,1.28,109,1.446,113,0.942,114,1.217,119,1.113,123,1.664,126,2.013,137,2.015,148,0.984,164,1.907,182,0.019,185,2.06,193,2.505,194,2.451,196,1.664,203,0.637,205,1.689,206,2.421,211,2.623,212,2.203,217,1.804,220,1.664,251,1.656,278,1.023,294,3.747,296,3.013,297,3.013,298,2.684,299,2.505,300,3.352,301,2.505,302,2.505,304,1.664,306,1.664,308,1.664,309,1.95,311,3.352,312,1.664,314,1.88,315,1.664,317,1.664,318,3.013,319,1.664,320,2.451,321,2.203,322,2.694,323,1.482,324,1.664,325,1.664,326,1.113,327,2.505,328,3.243,329,2.232,330,1.482,331,1.664,332,1.482,333,1.664,334,1.664,335,1.664,336,1.664,365,3.842,420,1.023,424,1.217,438,1.664,441,1.832,447,2.276,448,1.54,449,4.586,450,4.128,451,2.986,452,3.366,453,3.427,454,3.453,455,2.276,456,2.623,457,1.907,458,1.907,459,1.907,460,3.427,461,2.276,462,2.871,463,2.505,464,2.871,465,2.232,466,2.232,467,2.505,468,2.871,469,2.505,470,2.871,471,3.427,472,2.276,473,2.276,474,1.907,475,1.907,476,1.907,477,1.907,478,2.276,479,1.907,480,1.907,481,1.907,482,1.907,483,2.276,484,2.276,485,2.276,486,2.276,487,1.907,488,1.337,489,1.907,490,2.276,491,2.276,492,2.276,493,2.276,494,3.427,495,1.907,496,1.907,497,2.276,498,2.276,499,2.276,500,2.276,501,2.276,502,1.907,503,4.121,504,2.276,505,2.276,506,2.276,507,2.276,508,3.427,509,2.276,510,2.276,511,2.276,512,1.482,513,2.276,514,2.276]],["title/classes/AhoiClientTokenService.html",[0,0.24,211,1.585]],["body/classes/AhoiClientTokenService.html",[0,0.316,2,0.235,3,0.201,4,0.201,6,0.167,7,0.723,8,1.033,9,1.161,10,1.874,13,0.597,16,1.433,23,0.853,26,0.529,27,0.031,28,1.101,29,0.659,35,0.537,44,0.74,45,0.74,46,0.53,50,2.196,51,0.544,57,1.725,60,1.161,78,0.019,81,2.277,91,0.376,97,0.235,106,0.618,109,0.86,119,1.504,137,2.39,148,1.017,182,0.022,185,2.371,203,0.86,211,2.39,217,1.598,251,1.644,278,1.382,282,2.277,294,4.01,296,3.573,297,3.573,298,3.183,299,3.114,300,3.114,301,3.114,302,3.114,304,2.248,306,2.248,308,2.248,309,2.025,311,3.857,312,2.248,314,2.017,315,2.248,317,2.248,318,3.573,319,2.248,320,2.277,321,2.612,322,3.1,323,2.002,324,2.248,325,2.248,326,1.504,327,3.114,328,3.255,329,2.774,330,2.002,331,2.248,332,2.002,333,2.248,334,2.248,335,2.248,336,2.248,448,1.914,451,3.733,456,2.874,457,2.576,458,2.576,459,2.576,462,3.569,463,3.114,464,3.569,469,3.114,470,3.569,474,2.576,475,2.576,476,2.576,477,2.576,482,2.576,512,3.436,515,3.075,516,3.075,517,3.075,518,3.1,519,4.26,520,3.569,521,5.276,522,3.075,523,3.075]],["title/interfaces/AhoiConfig.html",[194,1.732,524,0.838]],["body/interfaces/AhoiConfig.html",[2,0.286,3,0.243,4,0.243,6,0.203,7,0.824,17,2.363,26,0.536,27,0.029,35,0.584,36,3.162,46,0.61,57,1.762,58,2.43,75,3.94,78,0.022,80,3.127,83,3.127,97,0.286,126,3.167,137,1.825,182,0.022,194,2.593,197,1.825,205,1.22,209,3.51,217,2.101,278,2.564,282,3.162,283,4.325,290,4.433,291,4.433,320,1.995,322,2.193,329,3.853,441,1.995,466,3.51,518,2.85,524,1.254,525,3.732,526,2.881,527,3.127,528,3.546,529,4.516,530,4.851,531,2.728,532,3.732,533,3.732,534,3.127,535,3.127,536,3.159,537,3.732,538,3.159,539,3.732,540,4.065,541,4.065,542,3.732,543,3.732,544,3.732,545,3.732,546,3.127,547,3.732,548,3.732,549,3.732,550,2.728,551,3.732,552,2.193,553,3.732,554,3.732,555,3.732,556,3.732,557,1.677,558,3.732,559,3.127,560,3.127,561,3.127,562,3.127,563,3.127]],["title/classes/AhoiHelper.html",[0,0.24,187,2.369]],["body/classes/AhoiHelper.html",[0,0.353,2,0.277,3,0.236,4,0.236,6,0.196,8,0.807,13,0.667,16,1.626,17,1.968,22,0.796,23,0.822,26,0.498,27,0.031,35,0.565,36,2.541,44,0.791,45,0.791,46,0.567,51,0.549,60,1.323,76,1.968,78,0.022,91,0.498,97,0.277,106,0.814,107,0.864,109,1.012,148,1.135,182,0.022,187,3.475,189,3.532,197,2.325,205,1.554,211,2.997,212,3.275,223,2.356,224,2.356,225,2.645,251,1.012,260,3.983,392,2.793,421,1.769,438,2.645,557,2.136,564,3.618,565,3.475,566,3.983,567,5.639,568,3.031,569,3.618,570,3.983,571,3.618,572,2.645,573,3.983,574,3.618,575,4.754,576,3.618,577,3.618,578,2.126,579,3.618,580,3.983,581,3.618,582,3.031,583,3.618,584,3.618]],["title/classes/AhoiPublicKeyService.html",[0,0.24,221,2.11]],["body/classes/AhoiPublicKeyService.html",[0,0.318,2,0.238,3,0.202,4,0.202,6,0.168,7,0.728,8,1.067,9,1.265,10,2.017,13,0.689,16,1.27,22,0.683,23,0.827,25,2.022,26,0.53,27,0.031,28,1.109,29,0.663,35,0.538,39,1.2,44,0.601,45,0.601,46,0.533,51,0.491,60,0.944,67,1.187,76,1.775,78,0.02,91,0.468,92,2.625,93,1.097,97,0.238,106,0.67,107,1.327,109,1.374,113,1.285,120,1.518,133,2.022,144,1.824,145,2.886,146,2.792,147,1.518,148,1.327,181,3.134,182,0.02,188,3.45,216,3.134,217,1.015,218,1.659,219,1.659,221,2.792,227,2.601,249,1.187,278,2.207,298,3.45,314,2.382,339,2.269,340,2.519,341,1.659,342,1.395,348,2.601,352,2.022,355,2.022,356,2.022,358,2.269,359,2.601,361,2.269,362,2.269,363,2.269,371,3.593,372,3.593,373,3.593,374,3.593,381,2.601,538,2.022,578,1.824,585,3.104,586,5.298,587,4.439,588,5.298,589,3.593,590,3.104,591,4.288,592,4.288,593,3.104,594,4.288,595,3.104,596,5.031,597,3.104,598,3.104,599,4.288,600,3.104,601,3.104,602,4.912,603,3.104,604,3.104,605,2.601,606,2.269,607,2.601,608,3.104,609,3.104,610,4.912,611,2.601,612,2.601,613,3.104,614,3.104,615,3.104,616,1.659,617,1.659]],["title/classes/AhoiSessionKeyHeaderService.html",[0,0.24,213,2.369]],["body/classes/AhoiSessionKeyHeaderService.html",[0,0.331,2,0.252,3,0.214,4,0.214,6,0.178,7,0.757,8,0.993,9,1.113,10,1.654,13,0.625,16,1.512,17,1.36,22,0.723,23,0.82,26,0.501,27,0.031,28,0.85,29,0.508,35,0.575,42,3.259,44,0.761,45,0.761,46,0.545,50,1.476,51,0.538,57,1.457,60,1.194,71,3.259,75,3.259,78,0.02,90,1.93,91,0.501,95,1.756,96,1.93,97,0.252,100,2.402,106,0.756,107,1.354,109,1.247,123,2.402,182,0.02,205,1.074,213,3.259,217,1.654,218,1.756,219,1.756,221,3.809,222,2.753,454,3.735,480,2.753,481,2.753,495,2.753,496,2.753,578,1.93,587,4.239,596,5.099,611,3.735,618,3.286,619,5.425,620,4.458,621,4.458,622,5.425,623,3.259,624,3.286,625,4.458,626,3.735,627,4.458,628,5.849,629,3.286,630,4.458,631,5.059,632,3.286,633,5.672,634,3.286,635,4.458,636,3.286,637,2.402,638,3.286,639,3.286,640,3.286,641,3.286,642,3.286,643,3.286,644,3.286,645,3.286,646,3.286,647,3.286,648,3.286,649,3.286,650,3.286,651,3.286,652,3.286,653,3.286]],["title/classes/AuthHeaderFilter.html",[0,0.24,228,2.369]],["body/classes/AuthHeaderFilter.html",[0,0.286,2,0.204,3,0.174,4,0.174,6,0.145,13,0.695,16,1.671,23,0.858,26,0.545,27,0.031,29,0.596,35,0.438,39,0.747,44,0.866,45,0.873,46,0.615,51,0.549,60,1.358,78,0.025,81,1.427,91,0.4,97,0.204,106,0.714,109,1.078,114,1.427,119,1.306,133,1.739,182,0.018,185,2.884,203,0.747,208,1.021,228,3.307,234,1.427,250,2.818,251,1.693,314,1.473,328,1.569,351,1.739,383,2.265,385,3.655,388,2.265,389,3.226,390,2.51,391,2.51,392,2.265,393,2.51,394,2.51,395,2.51,396,2.51,399,1.427,400,2.997,402,2.946,404,1.739,406,1.739,408,1.739,410,1.739,412,1.739,414,2.418,416,1.739,418,1.739,421,1.306,422,1.739,441,2.648,445,2.237,446,2.237,448,1.732,451,3.226,456,2.923,463,2.818,465,2.51,467,2.818,518,2.911,536,1.739,557,2.226,654,2.67,655,2.67,656,4.151,657,3.855,658,2.67,659,1.952,660,1.952,661,1.952,662,1.952,663,1.952,664,1.952,665,1.952,666,1.952,667,1.952,668,1.952,669,2.67,670,1.952,671,2.67,672,2.67,673,4.524,674,2.237,675,1.952,676,2.67,677,2.67,678,2.67,679,2.67]],["title/classes/Base64Util.html",[0,0.24,95,1.732]],["body/classes/Base64Util.html",[0,0.367,2,0.295,3,0.251,4,0.251,6,0.209,9,1.43,13,0.695,23,0.81,25,3.983,26,0.51,27,0.031,35,0.587,43,4.471,44,0.81,45,0.81,46,0.581,51,0.562,78,0.023,95,2.647,97,0.295,106,0.731,111,2.817,147,1.884,182,0.023,680,3.853,681,4.953,682,4.953,683,4.953,684,4.953,685,4.953,686,3.853,687,4.953,688,3.853,689,4.953,690,3.853,691,4.953,692,3.853,693,3.853,694,3.853,695,3.853,696,3.853,697,3.853,698,3.853,699,5.473,700,3.853,701,3.853,702,3.853,703,3.853,704,3.853]],["title/classes/BasicCache.html",[0,0.24,705,1.732]],["body/classes/BasicCache.html",[0,0.283,2,0.201,3,0.172,4,0.172,6,0.143,7,0.647,8,1.061,9,0.579,13,0.535,22,0.579,23,0.807,26,0.496,27,0.031,29,0.991,31,2.241,35,0.533,39,0.736,44,0.764,45,0.764,46,0.547,50,1.182,51,0.533,57,1.466,67,1.996,78,0.017,91,0.396,93,0.929,94,2.038,97,0.377,106,0.689,107,1.247,113,1.089,148,0.91,182,0.017,203,1.61,208,2.199,238,1.405,239,1.405,309,1.845,326,1.865,353,1.712,367,1.712,383,1.545,387,1.405,420,1.182,424,1.405,488,2.89,524,1.16,552,1.545,557,1.713,616,1.405,617,1.405,705,2.397,706,1.922,707,3.068,708,2.635,709,3.279,710,2.787,711,2.787,712,2.203,713,3.199,714,3.075,715,3.29,716,3.445,717,3.813,718,2.483,719,2.24,720,2.63,721,2.63,722,2.24,723,2.63,724,2.193,725,2.24,726,2.63,727,2.24,728,2.63,729,2.24,730,2.63,731,1.922,732,1.922,733,1.922,734,1.712,735,1.712,736,1.922,737,1.922,738,1.922,739,1.712,740,2.787,741,1.922,742,1.922,743,1.922,744,1.922,745,1.922,746,1.922,747,1.922,748,1.922,749,1.922,750,1.922,751,2.787,752,3.596,753,2.787,754,1.712,755,1.712,756,1.922,757,1.922,758,1.922,759,2.483,760,2.787,761,1.922,762,1.922,763,1.922,764,1.922,765,2.787,766,1.922,767,1.922,768,2.787,769,1.922,770,1.922,771,1.922,772,2.787,773,1.922,774,1.922]],["title/interfaces/CacheCleaner.html",[524,0.838,714,1.732]],["body/interfaces/CacheCleaner.html",[0,0.233,2,0.241,3,0.205,4,0.205,6,0.171,7,0.84,8,0.949,9,0.693,27,0.031,29,1.005,31,1.891,35,0.471,39,0.881,51,0.51,57,1.617,67,1.655,78,0.02,91,0.437,93,1.112,94,2.314,97,0.408,106,0.547,107,1.334,113,1.303,148,1.034,182,0.02,203,1.563,208,2.136,238,1.682,239,1.682,309,1.883,326,2.117,353,2.05,367,2.05,383,1.849,387,1.682,420,1.414,424,1.682,488,3.131,524,1.378,552,1.849,616,1.682,617,1.682,705,2.314,706,2.301,707,2.907,708,1.849,713,2.543,714,2.986,715,3.161,716,3.283,718,2.05,719,1.849,722,1.849,724,2.117,725,1.849,727,1.849,729,1.849,731,2.301,732,2.301,733,2.301,734,2.05,735,2.05,736,2.301,737,2.301,738,2.301,739,2.05,740,3.165,741,2.301,742,2.301,743,2.301,744,2.301,745,2.301,746,2.301,747,2.301,748,2.301,749,2.301,750,2.301,751,3.165,752,3.896,753,3.165,754,2.05,755,2.05,756,2.301,757,2.301,758,2.301,759,2.819,760,3.165,761,2.301,762,2.301,763,2.301,764,2.301,765,3.165,766,2.301,767,2.301,768,3.165,769,2.301,770,2.301,771,2.301,772,3.165,773,2.301,774,2.301,775,2.637,776,2.637]],["title/classes/CryptUtil.html",[0,0.24,96,1.904]],["body/classes/CryptUtil.html",[0,0.377,2,0.307,3,0.262,4,0.262,6,0.218,8,0.863,9,1.36,13,0.713,16,1.442,22,1.227,23,0.782,25,2.612,26,0.449,27,0.031,28,1.314,29,0.786,31,2.132,32,4.673,44,0.713,45,0.713,46,0.511,51,0.518,60,1.118,68,2.612,78,0.023,90,3.688,91,0.354,92,2.144,94,2.716,96,2.985,97,0.307,106,0.643,145,2.985,148,0.958,180,4.673,182,0.023,430,2.612,777,4.011,778,5.081,779,5.081,780,4.011,781,5.081,782,4.011,783,4.011,784,5.081,785,4.011,786,4.011,787,4.011,788,4.011,789,5.081,790,4.011,791,4.011,792,4.011,793,4.011,794,4.011,795,4.011]],["title/classes/EncInstallationIdCache.html",[0,0.24,796,2.369]],["body/classes/EncInstallationIdCache.html",[0,0.353,2,0.277,3,0.236,4,0.236,6,0.197,7,0.808,8,1.078,9,1.169,10,1.737,13,0.668,22,1.169,23,0.883,26,0.541,27,0.031,28,0.937,29,0.822,31,2.157,35,0.541,44,0.822,45,0.822,46,0.589,51,0.531,67,2.031,78,0.022,91,0.32,97,0.277,106,0.741,182,0.022,203,1.579,208,2.031,309,1.682,448,2.138,456,2.998,557,2.138,617,2.544,705,3.394,707,3.122,708,2.796,709,3.884,710,3.479,711,3.479,713,2.796,714,2.544,715,3.016,716,2.796,719,2.129,722,2.129,724,1.772,725,2.129,727,2.129,729,2.129,796,3.479,797,3.624,798,5.643,799,4.759,800,3.036,801,3.036,802,3.036,803,3.036,804,3.036,805,3.036,806,3.036,807,3.036,808,3.624]],["title/classes/EncryptInstallationIdFilter.html",[0,0.24,230,2.369]],["body/classes/EncryptInstallationIdFilter.html",[0,0.247,2,0.255,3,0.143,4,0.143,6,0.119,7,0.565,8,0.763,13,0.63,14,2.941,16,1.649,17,2.108,22,0.481,23,0.856,26,0.543,27,0.031,29,0.514,35,0.503,39,1.257,44,0.856,45,0.862,46,0.609,49,1.285,51,0.552,60,1.332,76,1.377,78,0.023,91,0.482,92,1.777,93,0.773,97,0.167,106,0.669,107,0.794,109,0.93,113,1.377,114,1.169,119,1.07,120,1.626,144,1.954,147,1.07,148,0.96,182,0.015,185,2.865,189,2.991,197,1.626,203,0.612,205,1.087,208,0.836,211,2.588,212,2.914,217,1.315,218,1.169,219,1.169,223,1.425,224,1.425,225,1.599,230,2.431,234,1.169,289,2.431,341,1.169,351,1.425,385,3.525,388,1.954,389,2.927,390,3.148,391,2.166,392,1.954,393,2.166,394,2.166,395,2.166,396,2.166,399,1.169,400,2.971,402,2.62,404,2.62,406,1.425,408,1.425,410,1.425,412,1.425,414,2.15,416,1.425,418,1.425,420,0.983,422,2.166,430,1.425,434,1.599,440,3.371,448,1.494,452,2.62,456,2.785,467,2.431,502,1.833,536,2.166,546,2.786,559,3.765,565,2.431,568,1.833,572,2.431,578,1.285,580,1.833,582,1.833,659,1.599,660,1.599,661,1.599,662,1.599,663,1.599,664,1.599,665,1.599,666,1.599,667,1.599,668,1.599,670,2.431,674,1.833,675,1.599,724,1.07,796,3.534,809,2.188,810,4.494,811,3.326,812,3.326,813,2.188,814,2.188,815,2.188,816,2.188,817,3.326,818,2.786,819,2.188,820,2.188,821,2.188,822,2.188,823,2.188,824,2.188,825,4.494,826,4.023,827,2.188,828,3.326,829,2.188,830,2.188,831,1.599,832,2.188,833,2.188,834,4.834,835,2.188,836,2.188,837,2.188]],["title/classes/FetchHttpFactory.html",[0,0.24,188,2.11]],["body/classes/FetchHttpFactory.html",[0,0.359,2,0.168,3,0.143,4,0.143,6,0.119,7,0.566,8,0.998,13,0.632,14,1.606,16,1.37,17,1.864,22,0.887,23,0.743,26,0.45,27,0.031,28,1.043,29,0.516,35,0.504,44,0.766,45,0.632,46,0.549,49,1.29,50,1.499,51,0.504,57,1.667,58,1.43,60,1.066,66,2.795,67,0.839,76,1.381,78,0.015,91,0.428,92,2.155,93,0.776,97,0.255,106,0.645,107,1.075,109,1.482,113,1.381,114,1.783,117,2.438,119,1.631,120,1.074,126,1.96,136,2.172,137,1.074,144,1.29,145,2.369,146,2.172,147,1.074,148,1.075,182,0.015,188,3.154,197,1.631,203,0.933,205,1.732,206,3.113,209,3.45,215,3.359,216,3.991,217,1.864,218,1.174,219,1.174,234,1.174,249,1.721,251,0.933,264,4.439,265,5.153,278,1.499,289,1.606,309,0.776,314,1.541,320,1.783,321,2.407,326,1.631,338,1.84,339,1.606,340,1.96,341,3.238,342,0.987,352,2.172,355,1.43,356,2.172,358,1.606,361,1.606,362,1.606,363,1.606,387,1.783,400,2.64,420,0.987,421,1.074,422,1.43,424,3.047,425,4.272,434,1.606,451,1.43,465,2.172,487,1.84,518,2.995,526,2.155,535,2.795,536,3.977,557,1.812,605,1.84,606,1.606,607,2.795,626,1.84,656,1.84,724,1.972,734,1.43,838,2.196,839,2.172,840,4.503,841,4.503,842,4.503,843,4.503,844,3.335,845,3.335,846,3.335,847,3.335,848,3.335,849,2.196,850,3.335,851,2.196,852,3.335,853,2.196,854,3.335,855,2.196,856,2.795,857,2.795,858,3.335,859,2.196,860,4.503,861,4.842,862,4.033,863,3.335,864,3.335,865,3.335,866,2.196,867,2.438,868,2.196,869,2.196,870,4.033,871,2.196,872,2.196,873,1.84,874,2.196,875,2.196,876,3.335,877,2.196,878,2.196,879,2.196,880,4.033,881,2.196,882,2.196,883,2.196,884,2.196]],["title/interfaces/HttpContext.html",[400,1.456,524,0.838]],["body/interfaces/HttpContext.html",[2,0.318,3,0.271,4,0.271,6,0.226,7,0.883,26,0.565,27,0.031,35,0.551,39,1.586,46,0.66,60,1.144,78,0.024,91,0.459,97,0.398,182,0.024,205,1.942,206,3.49,215,2.223,249,1.59,251,1.77,309,2.004,321,3.175,340,3.49,341,3.175,342,1.869,399,2.223,400,2.669,414,2.223,421,2.034,524,1.466,526,3.175,867,4.343,885,3.485,886,4.343]],["title/interfaces/HttpFilter.html",[215,1.732,524,0.838]],["body/interfaces/HttpFilter.html",[2,0.337,3,0.287,4,0.287,6,0.239,13,0.755,23,0.755,26,0.476,27,0.03,35,0.476,39,1.232,44,0.755,45,0.755,46,0.585,51,0.476,60,1.334,78,0.028,91,0.476,97,0.412,182,0.025,205,1.439,206,2.587,215,2.878,249,1.683,251,1.627,309,1.556,321,2.353,340,3.164,341,2.353,342,1.978,388,3.164,399,2.878,400,2.927,414,2.878,421,2.153,524,1.504,526,2.353,867,3.219,885,3.689,886,3.219,887,4.403,888,4.403]],["title/classes/HttpRequestTimeoutFilter.html",[0,0.24,235,2.369]],["body/classes/HttpRequestTimeoutFilter.html",[0,0.303,2,0.222,3,0.189,4,0.189,6,0.157,13,0.721,16,1.685,23,0.871,26,0.553,27,0.031,29,0.633,35,0.454,39,0.811,44,0.878,45,0.884,46,0.624,51,0.553,60,1.367,78,0.026,91,0.361,97,0.222,106,0.731,148,0.692,182,0.019,185,2.901,203,0.811,208,1.109,217,0.948,234,1.55,235,2.989,249,1.109,314,1.109,332,1.889,351,1.889,352,1.889,355,1.889,385,3.704,388,2.403,389,3.35,390,2.663,391,2.663,392,2.403,393,2.663,394,2.663,395,2.663,396,2.663,399,1.55,400,3.007,402,3.085,404,1.889,406,1.889,408,1.889,410,1.889,412,1.889,414,2.532,416,1.889,418,1.889,441,2.532,448,1.837,456,2.976,466,2.663,526,1.55,528,2.12,557,1.303,616,1.55,659,2.12,660,2.12,661,2.12,662,2.12,663,2.12,664,2.12,665,2.12,666,2.12,667,2.12,668,2.12,675,2.12,839,1.889,856,2.43,889,2.901,890,2.901,891,2.901,892,2.989,893,2.901,894,2.901,895,2.901,896,2.901,897,2.901,898,2.901,899,2.901]],["title/classes/InstallationIdCryptService.html",[0,0.24,189,1.904]],["body/classes/InstallationIdCryptService.html",[0,0.366,1,2.492,2,0.293,3,0.25,4,0.25,6,0.208,7,0.837,8,0.926,9,1.201,10,1.783,13,0.692,16,1.411,22,0.842,23,0.836,26,0.527,27,0.031,28,0.99,29,0.592,35,0.583,36,2.635,39,1.379,44,0.808,45,0.808,46,0.579,51,0.549,60,1.085,78,0.023,91,0.338,97,0.293,106,0.804,107,0.914,109,1.071,182,0.023,189,2.897,205,1.612,479,3.206,565,3.605,566,4.131,570,4.131,572,3.605,573,4.131,578,2.248,900,3.827,901,5.762,902,4.931,903,3.827,904,4.931,905,4.931,906,3.827,907,3.827,908,4.931,909,3.827,910,3.827,911,3.827,912,4.931,913,3.827,914,3.827,915,3.827,916,3.827,917,3.827]],["title/classes/RSACrypt.html",[0,0.24,637,2.369]],["body/classes/RSACrypt.html",[0,0.386,2,0.266,3,0.227,4,0.227,6,0.189,7,0.787,8,1.047,9,1.417,10,1.944,13,0.73,22,1.146,23,0.811,26,0.49,27,0.031,28,1.347,29,0.806,31,1.99,35,0.578,43,2.543,44,0.65,45,0.65,46,0.466,51,0.49,67,2.461,76,1.44,78,0.021,84,4.652,91,0.46,94,2.476,95,2.476,97,0.266,104,2.914,105,2.914,106,0.78,107,1.106,111,2.543,148,0.83,182,0.021,320,1.859,430,2.265,637,3.386,918,3.478,919,5.552,920,5.552,921,4.632,922,4.632,923,4.632,924,4.632,925,4.632,926,3.478,927,4.632,928,3.478,929,4.632,930,4.632,931,3.478,932,4.632,933,4.632,934,3.478,935,3.478,936,3.478,937,3.478,938,3.478,939,4.632,940,3.478,941,3.478,942,3.478,943,3.478,944,3.478,945,3.478,946,3.478]],["title/interfaces/SimpleCacheCleaner.html",[524,0.838,715,1.732]],["body/interfaces/SimpleCacheCleaner.html",[0,0.221,2,0.228,3,0.194,4,0.194,6,0.162,7,0.816,8,0.964,9,0.917,27,0.031,29,1.014,31,1.837,35,0.46,39,1.166,51,0.534,57,1.702,58,1.941,67,1.593,78,0.019,91,0.425,93,1.053,94,2.228,97,0.399,106,0.527,107,1.308,113,1.726,148,1.148,182,0.019,203,1.456,208,2.17,238,1.593,239,1.593,309,1.699,326,2.546,353,2.715,367,1.941,383,1.751,387,2.228,420,1.339,424,1.593,488,3.335,524,1.346,552,1.751,616,1.593,617,1.593,705,2.228,706,2.179,707,2.449,708,2.449,713,2.449,714,2.782,715,3.229,716,3.219,718,1.941,719,1.751,722,1.751,724,2.039,725,1.751,727,1.751,729,1.751,731,3.047,732,3.047,733,3.047,734,2.715,735,1.941,736,3.047,737,3.047,738,3.047,739,1.941,740,3.047,741,2.179,742,2.179,743,2.179,744,2.179,745,2.179,746,2.179,747,2.179,748,2.179,749,2.179,750,2.179,751,3.047,752,3.806,753,3.047,754,1.941,755,1.941,756,2.179,757,2.179,758,2.179,759,2.715,760,3.047,761,2.179,762,2.179,763,2.179,764,2.179,765,3.047,766,2.179,767,2.179,768,3.047,769,2.179,770,2.179,771,2.179,772,3.047,773,2.179,774,2.179,775,2.498,776,2.498]],["title/classes/Token.html",[0,0.24,251,0.907]],["body/classes/Token.html",[0,0.298,2,0.216,3,0.184,4,0.184,6,0.153,7,0.681,8,0.996,9,1.313,10,2.087,13,0.563,22,0.621,23,0.886,26,0.507,27,0.031,28,1.314,29,0.786,31,2.28,35,0.572,39,1.422,44,0.655,45,0.655,46,0.469,51,0.569,78,0.018,91,0.249,97,0.216,106,0.835,182,0.018,251,1.123,282,2.495,314,1.784,354,2.933,382,2.933,452,3.31,512,3.496,524,0.73,589,3.362,623,3.715,947,2.366,948,4.258,949,4.258,950,4.258,951,4.518,952,4.013,953,4.258,954,4.258,955,4.258,956,4.258,957,4.258,958,4.258,959,3.362,960,4.013,961,2.824,962,3.911,963,3.911,964,3.911,965,3.911,966,3.911,967,2.824,968,3.362,969,2.824,970,2.824,971,2.824,972,2.824,973,2.824,974,2.824,975,2.824,976,2.824,977,2.824,978,2.824,979,3.362,980,2.824,981,3.362,982,3.362,983,2.824,984,2.366,985,2.064,986,2.366,987,2.366,988,2.366,989,2.366,990,2.366,991,2.366,992,2.366,993,2.366,994,2.366,995,2.366,996,2.366,997,2.366]],["title/classes/TokenCache.html",[0,0.24,450,2.369]],["body/classes/TokenCache.html",[0,0.323,2,0.243,3,0.207,4,0.207,6,0.173,7,0.74,8,1.096,9,1.348,10,1.893,13,0.611,22,0.7,23,0.878,26,0.541,27,0.031,28,1.127,29,0.828,31,2.369,35,0.524,44,0.812,45,0.812,46,0.582,51,0.541,67,1.901,78,0.02,91,0.385,97,0.243,106,0.709,182,0.02,203,1.497,208,1.901,251,1.391,309,1.54,421,1.555,448,1.958,450,3.186,456,2.9,489,2.663,557,1.958,612,2.663,616,2.329,617,2.329,705,3.313,707,2.922,708,3.402,709,3.636,710,3.186,711,3.186,712,3.652,713,2.561,714,2.329,715,3.17,716,3.402,718,2.07,719,1.868,722,1.868,724,1.555,725,1.868,727,1.868,729,1.868,739,3.239,800,2.663,801,2.663,802,2.663,803,2.663,804,2.663,805,2.663,806,2.663,807,2.663,998,3.179,999,5.351,1000,5.351,1001,4.358,1002,3.179,1003,4.358,1004,3.179,1005,3.179,1006,3.179,1007,3.179,1008,3.179]],["title/interfaces/TokenData.html",[524,0.838,951,2.369]],["body/interfaces/TokenData.html",[0,0.262,2,0.27,3,0.23,4,0.23,6,0.192,7,0.795,8,0.795,9,1.155,10,2.083,26,0.546,27,0.031,31,2.283,35,0.585,39,1.309,51,0.553,78,0.021,91,0.312,97,0.27,106,0.806,182,0.021,251,0.988,282,3.106,314,2.222,354,2.583,382,2.583,452,2.301,512,3.785,524,1.21,623,2.583,947,2.96,948,2.96,949,2.96,950,2.96,951,4.249,953,2.96,954,2.96,955,2.96,956,2.96,957,2.96,958,2.96,959,2.96,962,4.87,963,4.87,964,4.87,965,4.87,966,4.87,968,2.96,979,2.96,981,2.96,982,2.96,984,2.96,985,2.583,986,2.96,987,2.96,988,2.96,989,2.96,990,2.96,991,2.96,992,2.96,993,2.96,994,2.96,995,2.96,996,2.96,997,2.96]],["title/dependencies.html",[1009,2.71,1010,3.264]],["body/dependencies.html",[27,0.029,78,0.027,182,0.027,217,1.656,218,3.129,219,3.129,249,1.937,342,2.277,985,3.704,1010,4.245,1011,5.067,1012,4.245,1013,5.067,1014,5.067]],["title/miscellaneous/enumerations.html",[1015,2.27,1016,3.264]],["body/miscellaneous/enumerations.html",[5,4.161,6,0.27,27,0.029,28,1.284,29,0.947,37,4.23,42,4.476,65,4.848,71,3.63,78,0.026,99,4.161,100,4.23,101,4.161,102,4.161,182,0.026,1015,4.161,1016,4.161,1017,4.966]],["title/index.html",[6,0.147,378,1.592,1018,1.765]],["body/index.html",[3,0.147,17,1.405,26,0.198,27,0.03,28,0.581,36,2.185,46,0.226,57,1.797,68,1.463,74,3.817,78,0.016,81,3.299,90,1.32,91,0.198,103,1.882,107,1.44,109,1.604,117,2.989,120,1.099,126,1.994,133,2.21,136,1.463,137,1.659,148,0.976,182,0.016,194,1.201,197,1.659,205,1.93,209,3.794,217,2.131,242,1.882,249,1.563,278,1.009,282,1.814,283,2.48,290,2.48,291,2.48,322,1.32,323,1.463,330,1.463,342,1.525,378,1.994,387,1.201,441,3.447,448,1.009,465,1.463,466,4.087,468,4.804,469,2.48,518,3.137,520,1.882,526,2.854,527,4.309,528,4.715,529,3.817,531,2.48,534,4.606,540,3.426,550,2.989,552,1.32,560,1.882,562,2.843,563,1.882,606,1.642,670,1.642,735,1.463,754,2.663,759,2.21,818,1.882,831,2.989,839,3.477,857,1.882,873,1.882,892,3.575,1012,1.882,1018,1.463,1019,5.627,1020,2.247,1021,2.247,1022,4.089,1023,3.393,1024,2.247,1025,4.556,1026,3.393,1027,4.089,1028,2.247,1029,2.247,1030,2.247,1031,2.247,1032,3.393,1033,3.393,1034,5.627,1035,3.575,1036,2.247,1037,2.247,1038,3.393,1039,2.247,1040,2.247,1041,2.247,1042,1.882,1043,2.247,1044,2.247,1045,2.247,1046,2.247,1047,2.247,1048,2.247,1049,2.247,1050,3.393,1051,2.247,1052,2.247,1053,2.247,1054,2.247,1055,2.247,1056,2.247,1057,2.247,1058,2.247,1059,2.247,1060,2.247,1061,2.247,1062,3.426,1063,3.393,1064,2.247,1065,2.247,1066,2.247,1067,2.247,1068,4.089,1069,3.426,1070,2.247,1071,4.089,1072,5.34,1073,5.34,1074,3.393,1075,4.891,1076,2.247,1077,2.843,1078,3.393,1079,2.247,1080,1.882,1081,3.393,1082,2.247,1083,2.247,1084,2.247,1085,3.393,1086,2.247,1087,2.247,1088,2.247,1089,2.247,1090,2.247,1091,2.247,1092,2.247,1093,2.843,1094,3.393,1095,2.247,1096,2.247,1097,2.247,1098,3.393,1099,2.247,1100,2.247,1101,4.556,1102,2.247,1103,4.089,1104,2.247,1105,2.247,1106,2.247,1107,2.247,1108,2.247,1109,2.247,1110,2.247,1111,3.393,1112,2.247,1113,2.247,1114,2.247,1115,2.247,1116,2.247,1117,2.247,1118,2.247,1119,2.247,1120,2.247,1121,2.247,1122,2.247,1123,2.247,1124,2.247,1125,2.247,1126,2.247,1127,2.247,1128,2.247,1129,2.247,1130,2.247,1131,2.247,1132,2.247,1133,2.247,1134,2.247,1135,2.247,1136,3.393,1137,2.247,1138,2.247,1139,2.247,1140,2.247,1141,2.247,1142,2.247,1143,1.882,1144,3.393,1145,4.089,1146,3.393,1147,2.247,1148,2.247,1149,2.247,1150,1.642,1151,2.247,1152,1.882]],["title/license.html",[378,1.592,1018,1.765,1150,1.981]],["body/license.html",[4,0.281,27,0.024,57,1.737,78,0.024,79,3.611,182,0.024,253,4.212,328,2.532,538,2.807,561,4.453,839,2.807,892,3.151,1042,3.611,1077,3.611,1080,4.828,1143,3.611,1150,3.151,1152,3.611,1153,5.763,1154,4.31,1155,4.31,1156,4.31,1157,5.315,1158,4.31,1159,5.315,1160,4.31,1161,4.31,1162,4.31,1163,5.315,1164,4.31,1165,6.016,1166,6.491,1167,4.31,1168,5.315,1169,4.31,1170,4.31,1171,4.31,1172,4.31,1173,4.31,1174,4.31,1175,4.31,1176,4.31,1177,4.31,1178,4.31,1179,4.31,1180,4.31,1181,5.315,1182,5.315,1183,4.31,1184,4.31,1185,5.315,1186,4.31,1187,4.31,1188,4.31,1189,4.31,1190,4.31,1191,4.31,1192,4.31,1193,4.31,1194,4.31,1195,4.31,1196,4.31,1197,4.31,1198,4.31,1199,4.31,1200,4.31,1201,4.31,1202,4.31,1203,4.31,1204,4.31,1205,4.31]],["title/modules.html",[1035,3.228]],["body/modules.html",[27,0.027,78,0.027,182,0.027,1035,3.833]],["title/overview.html",[1206,3.7]],["body/overview.html",[0,0.385,27,0.027,78,0.027,182,0.027,524,1.343,1206,4.353,1207,5.195,1208,5.195]],["title/todo.html",[378,1.592,1018,1.765,1209,2.27]],["body/todo.html",[0,0.358,27,0.028,51,0.426,77,4.045,78,0.026,81,2.58,136,3.144,182,0.026,197,2.361,356,3.144,420,2.169,488,3.672,531,3.529,538,3.144,541,4.045,550,3.529,755,3.144,831,3.529,886,3.529,1062,4.045,1069,4.045,1093,4.045,1209,4.045,1210,4.828,1211,4.828,1212,4.828,1213,4.828,1214,4.828,1215,4.828,1216,5.691,1217,4.828,1218,4.828,1219,4.828,1220,4.828,1221,4.828,1222,4.828]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["0",{"_index":382,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["1",{"_index":381,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["10",{"_index":354,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["10.0.0",{"_index":1047,"title":{},"body":{"index.html":{}}}],["1000",{"_index":617,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["10000",{"_index":353,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["100000",{"_index":1003,"title":{},"body":{"classes/TokenCache.html":{}}}],["128",{"_index":69,"title":{},"body":{"classes/AESCrypt.html":{}}}],["16",{"_index":32,"title":{},"body":{"classes/AESCrypt.html":{},"classes/CryptUtil.html":{}}}],["192",{"_index":70,"title":{},"body":{"classes/AESCrypt.html":{}}}],["2",{"_index":383,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["2.0",{"_index":464,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["2.2.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":428,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["23",{"_index":1207,"title":{},"body":{"overview.html":{}}}],["24",{"_index":180,"title":{},"body":{"classes/AESCrypt.html":{},"classes/CryptUtil.html":{}}}],["256",{"_index":71,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["2e066yxxxlxa3zn",{"_index":1087,"title":{},"body":{"index.html":{}}}],["30",{"_index":739,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["30);configur",{"_index":1123,"title":{},"body":{"index.html":{}}}],["32",{"_index":90,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{},"index.html":{}}}],["36)).tostring(36)).join",{"_index":795,"title":{},"body":{"classes/CryptUtil.html":{}}}],["5",{"_index":606,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["5000",{"_index":605,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["6",{"_index":1208,"title":{},"body":{"overview.html":{}}}],["60",{"_index":616,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["60000",{"_index":899,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["8",{"_index":181,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["8.3.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["_').replac",{"_index":698,"title":{},"body":{"classes/Base64Util.html":{}}}],["abhängigkeit",{"_index":1059,"title":{},"body":{"index.html":{}}}],["abov",{"_index":1180,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":238,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["abstractahoiapifactori",{"_index":183,"title":{"classes/AbstractAhoiApiFactory.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["abstractahoiauthenticationservic",{"_index":294,"title":{"classes/AbstractAhoiAuthenticationService.html":{}},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:10",{"_index":458,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:11",{"_index":457,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:13",{"_index":459,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:21",{"_index":474,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:44",{"_index":477,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:52",{"_index":475,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:78",{"_index":476,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractauth",{"_index":482,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstracthttpfilt",{"_index":385,"title":{"classes/AbstractHttpFilter.html":{}},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:15",{"_index":666,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:19",{"_index":659,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:35",{"_index":660,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:37",{"_index":661,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:39",{"_index":668,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:46",{"_index":664,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:51",{"_index":667,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:59",{"_index":662,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:66",{"_index":663,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:78",{"_index":665,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["accept",{"_index":371,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["access",{"_index":466,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["access#id",{"_index":1115,"title":{},"body":{"index.html":{}}}],["accessapi",{"_index":1101,"title":{},"body":{"index.html":{}}}],["accessapi.listassets(accessid",{"_index":1121,"title":{},"body":{"index.html":{}}}],["accessapi.postaccess(access);",{"_index":1110,"title":{},"body":{"index.html":{}}}],["accessfield",{"_index":1108,"title":{},"body":{"index.html":{}}}],["accessid",{"_index":1113,"title":{},"body":{"index.html":{}}}],["accesstoken",{"_index":512,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["accesstoken.useencrypt",{"_index":513,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["account",{"_index":528,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["accountapi",{"_index":1111,"title":{},"body":{"index.html":{}}}],["accountapi.deleteaccount(allowedaccess.id",{"_index":1117,"title":{},"body":{"index.html":{}}}],["accountapi.getaccounts(allowedaccess.id",{"_index":1116,"title":{},"body":{"index.html":{}}}],["accountid",{"_index":1122,"title":{},"body":{"index.html":{}}}],["accounts[0].id);f",{"_index":1118,"title":{},"body":{"index.html":{}}}],["action",{"_index":1201,"title":{},"body":{"license.html":{}}}],["activ",{"_index":546,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["add",{"_index":133,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"index.html":{}}}],["addition",{"_index":1104,"title":{},"body":{"index.html":{}}}],["addiv",{"_index":55,"title":{},"body":{"classes/AESCrypt.html":{}}}],["addiv=fals",{"_index":118,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ae",{"_index":42,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["aes/cbc/pkcs5pad",{"_index":651,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["aes_cbc",{"_index":99,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["aes_ctr",{"_index":101,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["aescrypt",{"_index":1,"title":{"classes/AESCrypt.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/InstallationIdCryptService.html":{}}}],["aescrypt.decrypt(enctext",{"_index":149,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.decryptrandomiv(idwithoutprefix",{"_index":916,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["aescrypt.default_iv",{"_index":59,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.encrypt(text",{"_index":112,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.encrypt(xauthhead",{"_index":505,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["aescrypt.encryptrandomiv(installationid",{"_index":911,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["aescrypt.getencryptionstrength(cryptkey).tostr",{"_index":125,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.iv_length",{"_index":154,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.ivtobuffer(iv",{"_index":122,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.keytobuffer(cryptkey",{"_index":130,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aeskeyleninbyt",{"_index":124,"title":{},"body":{"classes/AESCrypt.html":{}}}],["against",{"_index":462,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["ahoi",{"_index":217,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"dependencies.html":{},"index.html":{}}}],["ahoi/api/v2",{"_index":335,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["ahoiapi",{"_index":1091,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccessapi(installationid",{"_index":1102,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccessapi(server.installation_id",{"_index":1119,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccountapi(installationid",{"_index":1112,"title":{},"body":{"index.html":{}}}],["ahoiapi.getproviderapi(installationid",{"_index":1099,"title":{},"body":{"index.html":{}}}],["ahoiapi.getregistrationapi",{"_index":1095,"title":{},"body":{"index.html":{}}}],["ahoiapifactori",{"_index":1081,"title":{},"body":{"index.html":{}}}],["ahoiapifactory(ahoiconfig);c",{"_index":1092,"title":{},"body":{"index.html":{}}}],["ahoiauthenticationservic",{"_index":377,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["ahoibankingtokenservic",{"_index":212,"title":{"classes/AhoiBankingTokenService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ahoibankingtokenservice(config",{"_index":248,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiclienttokenservic",{"_index":211,"title":{"classes/AhoiClientTokenService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ahoiclienttokenservice(config",{"_index":247,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiclienttokenservice.authent",{"_index":256,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiconfig",{"_index":194,"title":{"interfaces/AhoiConfig.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["ahoiconfig.encryptinstallationid",{"_index":817,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["ahoiconfigur",{"_index":186,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoihelp",{"_index":187,"title":{"classes/AhoiHelper.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{}}}],["ahoihelper(this.installationidcryptservic",{"_index":263,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoipublickeyservic",{"_index":221,"title":{"classes/AhoiPublicKeyService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["ahoipublickeyservice(this.fetchhttpfactori",{"_index":244,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoipublickeyservice.head",{"_index":604,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["ahoisessionkeyheaderservic",{"_index":213,"title":{"classes/AhoiSessionKeyHeaderService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["ahoisessionkeyheaderservice(ahoipublickeyservic",{"_index":246,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["al",{"_index":1058,"title":{},"body":{"index.html":{}}}],["allow",{"_index":66,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{}}}],["allowedaccess",{"_index":1109,"title":{},"body":{"index.html":{}}}],["alway",{"_index":103,"title":{},"body":{"classes/AESCrypt.html":{},"index.html":{}}}],["and/or",{"_index":1174,"title":{},"body":{"license.html":{}}}],["anwendung",{"_index":1056,"title":{},"body":{"index.html":{}}}],["api",{"_index":209,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["api(this.ahoiconfigur",{"_index":268,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["appli",{"_index":860,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applic",{"_index":540,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["application/json",{"_index":372,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["application/json;charset=utf",{"_index":374,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["applyfilt",{"_index":845,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilterandexecuterequest",{"_index":844,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilterandexecuterequest(httpcontext",{"_index":850,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilters(httpcontext",{"_index":852,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["appsecretiv",{"_index":291,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["appsecretkey",{"_index":290,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["appservic",{"_index":1044,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1205,"title":{},"body":{"license.html":{}}}],["array(length)].map(i",{"_index":793,"title":{},"body":{"classes/CryptUtil.html":{}}}],["asset",{"_index":1120,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1167,"title":{},"body":{"license.html":{}}}],["assumed_max_request_tim",{"_index":948,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["assumedrequesttim",{"_index":981,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["async",{"_index":16,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["auth",{"_index":250,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{}}}],["auth/ahoipublickey",{"_index":222,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["auth/bankingtokenauth",{"_index":223,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["auth/clienttokenauth",{"_index":224,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["auth/token",{"_index":421,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/TokenCache.html":{}}}],["auth/v1",{"_index":333,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth/v1/oauth/token",{"_index":306,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth_bankingtoken_head",{"_index":449,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["auth_credentials_paramet",{"_index":296,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth_uri",{"_index":297,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["authent",{"_index":451,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["authenticate(installationid",{"_index":460,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["authhead",{"_index":365,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["authheaderfilt",{"_index":228,"title":{"classes/AuthHeaderFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AuthHeaderFilter.html":{}}}],["authheaderfilter(ahoiclienttokenservic",{"_index":274,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["authheaders.set(ahoibankingtokenservice.auth_bankingtoken_head",{"_index":509,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["author",{"_index":328,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"license.html":{}}}],["authtoken",{"_index":886,"title":{},"body":{"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"todo.html":{}}}],["auto",{"_index":1221,"title":{},"body":{"todo.html":{}}}],["automat",{"_index":560,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["avail",{"_index":289,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["await",{"_index":109,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["bank",{"_index":441,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["bankaccess",{"_index":1105,"title":{},"body":{"index.html":{}}}],["bankingtoken",{"_index":206,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["base",{"_index":327,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["base64",{"_index":111,"title":{},"body":{"classes/AESCrypt.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["base64text",{"_index":699,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64tourlsafebase64",{"_index":681,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64tourlsafebase64(text",{"_index":685,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64util",{"_index":95,"title":{"classes/Base64Util.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["base64util.base64tourlsafebase64(base64text",{"_index":702,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64util.base64tourlsafebase64(encxauthhead",{"_index":510,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64decode(iv",{"_index":174,"title":{},"body":{"classes/AESCrypt.html":{}}}],["base64util.urlsafebase64decode(this.config.appsecretkey",{"_index":506,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64encod",{"_index":936,"title":{},"body":{"classes/RSACrypt.html":{}}}],["base64util.urlsafebase64encode(sessionsechead",{"_index":653,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["base64util.urlsafebase64encode(xauthhead",{"_index":511,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64tobase64(key",{"_index":940,"title":{},"body":{"classes/RSACrypt.html":{}}}],["basepath",{"_index":258,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["baseurl",{"_index":278,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["baseurl.search",{"_index":379,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl.substring(0",{"_index":380,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl.substring(protocol.length).match",{"_index":384,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl}${abstractahoiauthenticationservice.auth_uri}?${abstractahoiauthenticationservice.auth_credentials_paramet",{"_index":349,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl}${ahoipublickeyservice.public_key_uri",{"_index":601,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["basic",{"_index":368,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["basiccach",{"_index":705,"title":{"classes/BasicCache.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["basiccache:32",{"_index":800,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:43",{"_index":805,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:48",{"_index":803,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:61",{"_index":804,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:66",{"_index":802,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:76",{"_index":806,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:85",{"_index":801,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["bearer",{"_index":656,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["bearertoken",{"_index":673,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["bearertoken.getaccesstoken",{"_index":678,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["befor",{"_index":529,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["begin",{"_index":925,"title":{},"body":{"classes/RSACrypt.html":{}}}],["below",{"_index":1085,"title":{},"body":{"index.html":{}}}],["beschrieben",{"_index":1053,"title":{},"body":{"index.html":{}}}],["between",{"_index":539,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["binari",{"_index":160,"title":{},"body":{"classes/AESCrypt.html":{}}}],["bit",{"_index":72,"title":{},"body":{"classes/AESCrypt.html":{}}}],["block",{"_index":254,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["bottom",{"_index":758,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["break",{"_index":766,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["buf",{"_index":789,"title":{},"body":{"classes/CryptUtil.html":{}}}],["buffer",{"_index":25,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiPublicKeyService.html":{},"classes/Base64Util.html":{},"classes/CryptUtil.html":{}}}],["buffer.alloc(0",{"_index":703,"title":{},"body":{"classes/Base64Util.html":{}}}],["buffer.alloc(aescrypt.iv_length",{"_index":30,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.alloc(aescrypt.iv_length)]).slice(0",{"_index":176,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.alloc(len",{"_index":170,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([buffer.from(cryptkey",{"_index":171,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([bufiv",{"_index":139,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([cipheriv.update(text",{"_index":142,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([cryptkey",{"_index":169,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([deciv",{"_index":175,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from",{"_index":108,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(`${this.config.clientid}:${this.config.clientsecret",{"_index":369,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["buffer.from(base64util.urlsafebase64tobase64(enctext",{"_index":152,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(base64util.urlsafebase64tobase64(text",{"_index":704,"title":{},"body":{"classes/Base64Util.html":{}}}],["buffer.from(key",{"_index":178,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(text",{"_index":938,"title":{},"body":{"classes/RSACrypt.html":{}}}],["buffer.from(text).tostring('base64",{"_index":701,"title":{},"body":{"classes/Base64Util.html":{}}}],["bufiv",{"_index":121,"title":{},"body":{"classes/AESCrypt.html":{}}}],["build",{"_index":1145,"title":{},"body":{"index.html":{}}}],["byte",{"_index":123,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["c",{"_index":1154,"title":{},"body":{"license.html":{}}}],["cach",{"_index":488,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["cache/encinstallationidcach",{"_index":819,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["cache/tokencach",{"_index":478,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["cacheclean",{"_index":714,"title":{"interfaces/CacheCleaner.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cachemap",{"_index":707,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["call",{"_index":465,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["callahoioauthserv",{"_index":299,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["callahoioauthserver(headermap",{"_index":308,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["can't",{"_index":553,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["case",{"_index":83,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{}}}],["catch",{"_index":144,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["cbc",{"_index":100,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["certif",{"_index":541,"title":{},"body":{"interfaces/AhoiConfig.html":{},"todo.html":{}}}],["chang",{"_index":840,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["char",{"_index":1130,"title":{},"body":{"index.html":{}}}],["charg",{"_index":1162,"title":{},"body":{"license.html":{}}}],["checkconfig",{"_index":190,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["checkconfig(config",{"_index":201,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["choos",{"_index":1128,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":1142,"title":{},"body":{"index.html":{}}}],["cipher",{"_index":37,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"miscellaneous/enumerations.html":{}}}],["cipher.aes_cbc",{"_index":507,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["cipher.default",{"_index":48,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher.replace(/\\$\\{strength",{"_index":128,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher=aescrypt.ahoi_default_ciph",{"_index":150,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher=cipher.aes_ctr",{"_index":115,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv",{"_index":131,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv.fin",{"_index":141,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv.update(text",{"_index":140,"title":{},"body":{"classes/AESCrypt.html":{}}}],["claim",{"_index":1197,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"overview.html":{},"todo.html":{}}}],["clean",{"_index":732,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["clean_interv",{"_index":999,"title":{},"body":{"classes/TokenCache.html":{}}}],["cleancach",{"_index":708,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cleancache(tidyfunct",{"_index":719,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cleaninterv",{"_index":716,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["client",{"_index":518,"title":{},"body":{"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["client.gitcr",{"_index":1066,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":282,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["clientsecret",{"_index":283,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["clienttokenauth",{"_index":483,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["code",{"_index":1078,"title":{},"body":{"index.html":{}}}],["cofigur",{"_index":558,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["come",{"_index":1114,"title":{},"body":{"index.html":{}}}],["complet",{"_index":897,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["compress",{"_index":356,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"todo.html":{}}}],["condit",{"_index":1179,"title":{},"body":{"license.html":{}}}],["config",{"_index":196,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["config.appsecretiv",{"_index":284,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.appsecretkey",{"_index":285,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.baseurl",{"_index":245,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.clientid",{"_index":279,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.clientsecret",{"_index":280,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.cryptkey",{"_index":259,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config/ahoiconfig",{"_index":220,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["configur",{"_index":197,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{},"todo.html":{}}}],["connect",{"_index":538,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"license.html":{},"todo.html":{}}}],["consol",{"_index":93,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["console.log(err",{"_index":790,"title":{},"body":{"classes/CryptUtil.html":{}}}],["const",{"_index":107,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["constant",{"_index":932,"title":{},"body":{"classes/RSACrypt.html":{}}}],["constants.rsa_pkcs1_oaep_pad",{"_index":929,"title":{},"body":{"classes/RSACrypt.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["constructor(accesstoken",{"_index":959,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["constructor(ahoiclienttokenservic",{"_index":397,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["constructor(ahoipublickeyservic",{"_index":624,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["constructor(config",{"_index":193,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["constructor(cryptkey",{"_index":903,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["constructor(httpclientfactori",{"_index":590,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["constructor(installationidcryptservic",{"_index":568,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["constructor(maxentri",{"_index":712,"title":{},"body":{"classes/BasicCache.html":{},"classes/TokenCache.html":{}}}],["constructor(priv",{"_index":578,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["constructor(protect",{"_index":239,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["containsiv",{"_index":38,"title":{},"body":{"classes/AESCrypt.html":{}}}],["content",{"_index":373,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["contextid",{"_index":962,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["contract",{"_index":1202,"title":{},"body":{"license.html":{}}}],["convert",{"_index":944,"title":{},"body":{"classes/RSACrypt.html":{}}}],["cookbook",{"_index":1032,"title":{},"body":{"index.html":{}}}],["copi",{"_index":1165,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1153,"title":{},"body":{"license.html":{}}}],["corpor",{"_index":1156,"title":{},"body":{"license.html":{}}}],["creat",{"_index":527,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["createauthhead",{"_index":300,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["createauthheader(installationid",{"_index":471,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["createauthheaders(headermap",{"_index":312,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["createrandomkey",{"_index":778,"title":{},"body":{"classes/CryptUtil.html":{}}}],["createrandomkey(keylen",{"_index":781,"title":{},"body":{"classes/CryptUtil.html":{}}}],["createsessionkeyhead",{"_index":620,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["createsessionkeyheader(publickey",{"_index":627,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["cryptkey",{"_index":36,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["crypto",{"_index":94,"title":{},"body":{"classes/AESCrypt.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["crypto.createcipheriv(useciph",{"_index":132,"title":{},"body":{"classes/AESCrypt.html":{}}}],["crypto.createdecipheriv(useciph",{"_index":158,"title":{},"body":{"classes/AESCrypt.html":{}}}],["crypto.publicencrypt",{"_index":937,"title":{},"body":{"classes/RSACrypt.html":{}}}],["crypto.randombytes(keylen",{"_index":788,"title":{},"body":{"classes/CryptUtil.html":{}}}],["cryptservice/installationidcryptservic",{"_index":225,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["cryptservice/sessionkeyheaderservic",{"_index":226,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["cryptsupport",{"_index":293,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["cryptutil",{"_index":96,"title":{"classes/CryptUtil.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{}}}],["cryptutil.createrandomkey(32",{"_index":644,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["cryptutil.createrandomkey(aescrypt.iv_length",{"_index":110,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cryptutil.generatenonce(32",{"_index":498,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["ctr",{"_index":102,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["current",{"_index":332,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["customernumb",{"_index":1103,"title":{},"body":{"index.html":{}}}],["da",{"_index":1057,"title":{},"body":{"index.html":{}}}],["damag",{"_index":1198,"title":{},"body":{"license.html":{}}}],["data",{"_index":526,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["databas",{"_index":551,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["date().gettim",{"_index":737,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["date().toisostr",{"_index":500,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["date(key.validuntil).gettim",{"_index":615,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["deal",{"_index":561,"title":{},"body":{"interfaces/AhoiConfig.html":{},"license.html":{}}}],["debug",{"_index":420,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["debug('aft",{"_index":884,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('appli",{"_index":870,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('authhead",{"_index":491,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["debug('befor",{"_index":882,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('context",{"_index":879,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('dofilt",{"_index":423,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug('fetch",{"_index":442,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug('get",{"_index":487,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/FetchHttpFactory.html":{}}}],["debug('head",{"_index":504,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["debug('installationid",{"_index":832,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["debug('remov",{"_index":774,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["debug('token",{"_index":444,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug(await",{"_index":877,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug(httpcontext.opt",{"_index":872,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug(httpcontext.options.head",{"_index":679,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["debug(xauthhead",{"_index":501,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["decinstallationid",{"_index":834,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["deciph",{"_index":157,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decipher.final().tostring('utf8",{"_index":162,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decipher.update(encryptedtext",{"_index":159,"title":{},"body":{"classes/AESCrypt.html":{}}}],["deciv",{"_index":173,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decod",{"_index":952,"title":{},"body":{"classes/Token.html":{}}}],["decode(accesstoken",{"_index":970,"title":{},"body":{"classes/Token.html":{}}}],["decrypt",{"_index":14,"title":{},"body":{"classes/AESCrypt.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["decrypt(enctext",{"_index":34,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decrypted_installationid_cache_s",{"_index":798,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["decryptinstallationid",{"_index":565,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["decryptinstallationid(encinstallationid",{"_index":812,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["decryptinstallationid(encryptedinstallationid",{"_index":570,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["decryptrandomiv",{"_index":15,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decryptrandomiv(enctext",{"_index":52,"title":{},"body":{"classes/AESCrypt.html":{}}}],["default",{"_index":28,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["default_iv",{"_index":11,"title":{},"body":{"classes/AESCrypt.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["delet",{"_index":759,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["deletet",{"_index":757,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["demo",{"_index":1034,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1010,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depepend",{"_index":657,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["deposit",{"_index":1026,"title":{},"body":{"index.html":{}}}],["descript",{"_index":58,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["design",{"_index":1037,"title":{},"body":{"index.html":{}}}],["determin",{"_index":1029,"title":{},"body":{"index.html":{}}}],["dgw6xxtcyrykqxeehgqptg",{"_index":1089,"title":{},"body":{"index.html":{}}}],["die",{"_index":1050,"title":{},"body":{"index.html":{}}}],["differ",{"_index":330,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["disk",{"_index":1219,"title":{},"body":{"todo.html":{}}}],["distribut",{"_index":1172,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1144,"title":{},"body":{"index.html":{}}}],["doclicens",{"_index":1149,"title":{},"body":{"index.html":{}}}],["document",{"_index":1143,"title":{},"body":{"index.html":{},"license.html":{}}}],["dofilt",{"_index":388,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["dofilter(httpcontext",{"_index":399,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["domain",{"_index":319,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["don't",{"_index":1132,"title":{},"body":{"index.html":{}}}],["done",{"_index":547,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["download",{"_index":1054,"title":{},"body":{"index.html":{}}}],["e",{"_index":825,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["e.g",{"_index":126,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["easi",{"_index":1023,"title":{},"body":{"index.html":{}}}],["ein",{"_index":1055,"title":{},"body":{"index.html":{}}}],["eingebunden",{"_index":1060,"title":{},"body":{"index.html":{}}}],["empti",{"_index":833,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["empty_token",{"_index":949,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["enc",{"_index":905,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["enc_di",{"_index":968,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["encinstallationid",{"_index":582,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encinstallationidcach",{"_index":796,"title":{"classes/EncInstallationIdCache.html":{}},"body":{"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encrypt",{"_index":17,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["encrypt(text",{"_index":54,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encrypted.tostring('base64",{"_index":143,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptedinstallationid",{"_index":572,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptedinstallationid.substring(installationidcryptservice.prefix.length",{"_index":915,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["encryptedsessionkey",{"_index":628,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptedtext",{"_index":155,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptinstallationid",{"_index":566,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptinstallationid(installationid",{"_index":573,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptinstallationidfilt",{"_index":230,"title":{"classes/EncryptInstallationIdFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encryptinstallationidfilter(installationidcryptservic",{"_index":272,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptrandomiv",{"_index":18,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptrandomiv(text",{"_index":61,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptsessionfilt",{"_index":232,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptsessionfilter(ahoisessionkeyheaderservic",{"_index":273,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptsessionkey",{"_index":621,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptsessionkey(sessionkey",{"_index":630,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptwithrsapublickey",{"_index":921,"title":{},"body":{"classes/RSACrypt.html":{}}}],["encryptwithrsapublickey(text",{"_index":927,"title":{},"body":{"classes/RSACrypt.html":{}}}],["enctext",{"_index":47,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuff",{"_index":151,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuffer.slice(0",{"_index":153,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuffer.slice(aescrypt.iv_length",{"_index":156,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encxauthhead",{"_index":503,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["end",{"_index":924,"title":{},"body":{"classes/RSACrypt.html":{}}}],["endpoint",{"_index":467,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ensur",{"_index":552,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["ensurecapac",{"_index":709,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["enum",{"_index":98,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enumer",{"_index":1016,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":145,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/CryptUtil.html":{},"classes/FetchHttpFactory.html":{}}}],["error",{"_index":92,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["error(",{"_index":826,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["error('credenti",{"_index":281,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["error('error",{"_index":163,"title":{},"body":{"classes/AESCrypt.html":{}}}],["error('installationid",{"_index":580,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["error('un",{"_index":943,"title":{},"body":{"classes/RSACrypt.html":{}}}],["error('url",{"_index":276,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["error(err",{"_index":146,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["errormsg",{"_index":361,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["event",{"_index":1194,"title":{},"body":{"license.html":{}}}],["exactli",{"_index":1135,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":734,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["exce",{"_index":756,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["except",{"_index":77,"title":{},"body":{"classes/AESCrypt.html":{},"todo.html":{}}}],["execut",{"_index":873,"title":{},"body":{"classes/FetchHttpFactory.html":{},"index.html":{}}}],["exist",{"_index":1039,"title":{},"body":{"index.html":{}}}],["expir",{"_index":965,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["explor",{"_index":1033,"title":{},"body":{"index.html":{}}}],["export",{"_index":97,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["express",{"_index":1187,"title":{},"body":{"license.html":{}}}],["extend",{"_index":448,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{},"index.html":{}}}],["extract",{"_index":317,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["fail",{"_index":1215,"title":{},"body":{"todo.html":{}}}],["fals",{"_index":49,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["featur",{"_index":563,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["fetch",{"_index":249,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"dependencies.html":{},"index.html":{}}}],["fetchapi",{"_index":216,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchclient",{"_index":219,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"dependencies.html":{}}}],["fetcherror",{"_index":339,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetcherror(errormsg",{"_index":363,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchhttpfactori",{"_index":188,"title":{"classes/FetchHttpFactory.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchhttpfilt",{"_index":841,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["filter",{"_index":265,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/FetchHttpFactory.html":{}}}],["filter.constructor.nam",{"_index":880,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filter.dofilter(httpcontext",{"_index":883,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filter.matches(httpcontext",{"_index":881,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filterrequest",{"_index":389,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterrequest(httpcontext",{"_index":402,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterrespons",{"_index":390,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterresponse(httpcontext",{"_index":404,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filters.push(new",{"_index":271,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["find",{"_index":1139,"title":{},"body":{"index.html":{}}}],["first",{"_index":760,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["fit",{"_index":1190,"title":{},"body":{"license.html":{}}}],["five",{"_index":1070,"title":{},"body":{"index.html":{}}}],["fixm",{"_index":669,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["follow",{"_index":1077,"title":{},"body":{"index.html":{},"license.html":{}}}],["forecast",{"_index":1030,"title":{},"body":{"index.html":{}}}],["found",{"_index":1124,"title":{},"body":{"index.html":{}}}],["free",{"_index":1161,"title":{},"body":{"license.html":{}}}],["friendli",{"_index":82,"title":{},"body":{"classes/AESCrypt.html":{}}}],["function",{"_index":326,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["furnish",{"_index":1177,"title":{},"body":{"license.html":{}}}],["g",{"_index":694,"title":{},"body":{"classes/Base64Util.html":{}}}],["gener",{"_index":136,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{},"index.html":{},"todo.html":{}}}],["generatenonc",{"_index":779,"title":{},"body":{"classes/CryptUtil.html":{}}}],["generatenonce(length",{"_index":784,"title":{},"body":{"classes/CryptUtil.html":{}}}],["generatesessionkey",{"_index":622,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["get",{"_index":1018,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["get(key",{"_index":722,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["getaccesstoken",{"_index":953,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getapiinst",{"_index":191,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["getapiinstance(api",{"_index":204,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["getauthtoken",{"_index":391,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getauthtoken(httpcontext",{"_index":406,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken",{"_index":392,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken(httpcontext",{"_index":408,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken(installationid",{"_index":575,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["getbaseurl",{"_index":301,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["getbaseurl(baseurl",{"_index":315,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["getclientauthtoken",{"_index":567,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["getclientid",{"_index":954,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getcontextid",{"_index":955,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getencryptionstrength",{"_index":19,"title":{},"body":{"classes/AESCrypt.html":{}}}],["getencryptionstrength(key",{"_index":63,"title":{},"body":{"classes/AESCrypt.html":{}}}],["getexpir",{"_index":956,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["gethead",{"_index":623,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getheader(sessionkey",{"_index":635,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["gethttpclient",{"_index":846,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["gethttpclient(installationid",{"_index":854,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["getjti",{"_index":957,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getpayload",{"_index":958,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getpublickey",{"_index":588,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["getrespons",{"_index":393,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getresponse(httpcontext",{"_index":410,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["gettoken",{"_index":394,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["gettoken(httpcontext",{"_index":412,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["git+ssh://git@github.com:sparkassen",{"_index":1064,"title":{},"body":{"index.html":{}}}],["github",{"_index":1021,"title":{},"body":{"index.html":{}}}],["given",{"_index":320,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{}}}],["go",{"_index":1067,"title":{},"body":{"index.html":{}}}],["grant",{"_index":892,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{},"index.html":{},"license.html":{}}}],["grant_type=client_credenti",{"_index":304,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["guidelin",{"_index":548,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["hack",{"_index":556,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["hand",{"_index":80,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{}}}],["handl",{"_index":1213,"title":{},"body":{"todo.html":{}}}],["hashedkey",{"_index":744,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["hashkey",{"_index":710,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["hashkey(key",{"_index":725,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["header",{"_index":314,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["headermap",{"_index":311,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["headers(authhead",{"_index":375,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["headers.set(key",{"_index":364,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["helper",{"_index":325,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["here",{"_index":1031,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":1160,"title":{},"body":{"license.html":{}}}],["hier",{"_index":1052,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1195,"title":{},"body":{"license.html":{}}}],["http",{"_index":264,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/FetchHttpFactory.html":{}}}],["httpclient",{"_index":607,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["httpclient(this.uri",{"_index":609,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["httpclient/fetchhttpfactori",{"_index":227,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{}}}],["httpclientfactori",{"_index":592,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["httpcontext",{"_index":400,"title":{"interfaces/HttpContext.html":{}},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.authtoken",{"_index":437,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.bankingtoken",{"_index":439,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.installationid",{"_index":440,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["httpcontext.isrequest",{"_index":422,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.opt",{"_index":875,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httpcontext.options.head",{"_index":435,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.headers.set(nam",{"_index":436,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.method",{"_index":431,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.method.tolowercas",{"_index":432,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.timeout",{"_index":898,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.respons",{"_index":876,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httpcontext.response.json",{"_index":434,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.response.statu",{"_index":427,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.url",{"_index":425,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.url.endswith('/access",{"_index":893,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.url.endswith('/registr",{"_index":674,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["httpcontext.url.endswith('/registration/key",{"_index":676,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["httpfilter",{"_index":215,"title":{"interfaces/HttpFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["httpfilter/authheaderfilt",{"_index":229,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/encryptinstallationidfilt",{"_index":231,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/encryptsessionfilt",{"_index":233,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/httprequesttimeoutfilt",{"_index":236,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilters].revers",{"_index":866,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httprequestfilt",{"_index":842,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httprequesttimeoutfilt",{"_index":235,"title":{"classes/HttpRequestTimeoutFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["httprequesttimeoutfilter(ahoiclienttokenservic",{"_index":275,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpresponsefilt",{"_index":843,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["https://bank",{"_index":322,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["https://github.com/cayasso/cacheman",{"_index":1210,"title":{},"body":{"todo.html":{}}}],["https://github.com/kesla/nod",{"_index":1217,"title":{},"body":{"todo.html":{}}}],["https://github.com/sparkassen",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["hub/ahoi",{"_index":1012,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["höher",{"_index":1049,"title":{},"body":{"index.html":{}}}],["idcach",{"_index":810,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["idwithoutprefix",{"_index":914,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["implement",{"_index":387,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["impli",{"_index":1188,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["includ",{"_index":1080,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["inform",{"_index":1027,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":456,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{}}}],["init",{"_index":241,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["inithttpfilt",{"_index":192,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["inithttpfilters(ahoiclienttokenservic",{"_index":210,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["initi",{"_index":857,"title":{},"body":{"classes/FetchHttpFactory.html":{},"index.html":{}}}],["instal",{"_index":831,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{},"index.html":{},"todo.html":{}}}],["installationid",{"_index":205,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["installationid'",{"_index":559,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["installationid.startswith(installationidcryptservice.prefix",{"_index":917,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["installationidcryptfilt",{"_index":822,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["installationidcryptservic",{"_index":189,"title":{"classes/InstallationIdCryptService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["installationidcryptservice(config.cryptkey",{"_index":261,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["installationidcryptservice.prefix",{"_index":910,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["instanceof",{"_index":147,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/Base64Util.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["instanti",{"_index":104,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["interfac",{"_index":524,"title":{"interfaces/AhoiConfig.html":{},"interfaces/CacheCleaner.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"interfaces/TokenData.html":{}},"body":{"interfaces/AhoiConfig.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["intern",{"_index":1125,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":827,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["isencrypt",{"_index":902,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["isencrypted(installationid",{"_index":908,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["isexpir",{"_index":589,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/Token.html":{}}}],["isexpired(assumedrequesttim",{"_index":979,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["isexpired(key",{"_index":599,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["isrequest",{"_index":867,"title":{},"body":{"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["ist",{"_index":1051,"title":{},"body":{"index.html":{}}}],["it'",{"_index":134,"title":{},"body":{"classes/AESCrypt.html":{}}}],["item",{"_index":752,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["iv",{"_index":40,"title":{},"body":{"classes/AESCrypt.html":{}}}],["iv=aescrypt.default_iv",{"_index":116,"title":{},"body":{"classes/AESCrypt.html":{}}}],["iv_length",{"_index":12,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ivtobuff",{"_index":20,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ivtobuffer(iv",{"_index":86,"title":{},"body":{"classes/AESCrypt.html":{}}}],["javascript",{"_index":1082,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":495,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["jsonwebtoken",{"_index":985,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["jti",{"_index":963,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["jwt",{"_index":984,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["jwt_prop_encryption_dis",{"_index":950,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["key",{"_index":67,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["key.length",{"_index":763,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["key.startswith(rsacrypt.pem_key_start",{"_index":934,"title":{},"body":{"classes/RSACrypt.html":{}}}],["keybuf",{"_index":177,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keybuf.length",{"_index":179,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keylen",{"_index":783,"title":{},"body":{"classes/CryptUtil.html":{}}}],["keyspecif",{"_index":650,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["keytobuff",{"_index":21,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keytobuffer(cryptkey",{"_index":88,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keytopemkey",{"_index":922,"title":{},"body":{"classes/RSACrypt.html":{}}}],["keytopemkey(key",{"_index":930,"title":{},"body":{"classes/RSACrypt.html":{}}}],["kind",{"_index":1186,"title":{},"body":{"license.html":{}}}],["known",{"_index":544,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["last",{"_index":748,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["len",{"_index":165,"title":{},"body":{"classes/AESCrypt.html":{}}}],["length",{"_index":68,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/CryptUtil.html":{},"index.html":{}}}],["length.includes('256",{"_index":167,"title":{},"body":{"classes/AESCrypt.html":{}}}],["level",{"_index":1220,"title":{},"body":{"todo.html":{}}}],["liabil",{"_index":1199,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1196,"title":{},"body":{"license.html":{}}}],["lib/cache/basiccach",{"_index":807,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["lib/crypt/aescrypt",{"_index":479,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/InstallationIdCryptService.html":{}}}],["lib/crypt/base64util",{"_index":480,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/crypt/cryptutil",{"_index":481,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/crypt/rsacrypt",{"_index":638,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/httpfilter/httpfilt",{"_index":234,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["licens",{"_index":1150,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1168,"title":{},"body":{"license.html":{}}}],["line",{"_index":347,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["line:max",{"_index":346,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["line:pref",{"_index":366,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["link",{"_index":117,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["list",{"_index":754,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["log",{"_index":1211,"title":{},"body":{"todo.html":{}}}],["lost",{"_index":554,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["manag",{"_index":1069,"title":{},"body":{"index.html":{},"todo.html":{}}}],["mangement",{"_index":1126,"title":{},"body":{"index.html":{}}}],["map",{"_index":309,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["match",{"_index":78,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["match(/.{1,64}/g",{"_index":941,"title":{},"body":{"classes/RSACrypt.html":{}}}],["matches(httpcontext",{"_index":414,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["math.random",{"_index":794,"title":{},"body":{"classes/CryptUtil.html":{}}}],["max_entri",{"_index":1000,"title":{},"body":{"classes/TokenCache.html":{}}}],["maxentri",{"_index":718,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["memberof",{"_index":119,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["merchant",{"_index":1189,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1170,"title":{},"body":{"license.html":{}}}],["mergehead",{"_index":302,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["mergeheaders(head",{"_index":336,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["method",{"_index":13,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["method.tolowercas",{"_index":433,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["microsoft",{"_index":1155,"title":{},"body":{"license.html":{}}}],["min",{"_index":612,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/TokenCache.html":{}}}],["miscellan",{"_index":1015,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":277,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["mit",{"_index":1152,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":1169,"title":{},"body":{"license.html":{}}}],["modul",{"_index":1035,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["more",{"_index":74,"title":{},"body":{"classes/AESCrypt.html":{},"index.html":{}}}],["move",{"_index":747,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["mp3idookxvzoqzx22iuexg",{"_index":1088,"title":{},"body":{"index.html":{}}}],["mytyp",{"_index":736,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["need",{"_index":137,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["never",{"_index":750,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["new",{"_index":148,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["newbuff",{"_index":168,"title":{},"body":{"classes/AESCrypt.html":{}}}],["newbuffer.slice(0",{"_index":172,"title":{},"body":{"classes/AESCrypt.html":{}}}],["next",{"_index":345,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["node",{"_index":342,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"dependencies.html":{},"index.html":{}}}],["node');b",{"_index":1084,"title":{},"body":{"index.html":{}}}],["node.j",{"_index":1019,"title":{},"body":{"index.html":{}}}],["nodefetch",{"_index":338,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/FetchHttpFactory.html":{}}}],["nodefetch(httpcontext.url",{"_index":874,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["nodefetch(this.uri",{"_index":357,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["nodej",{"_index":1065,"title":{},"body":{"index.html":{}}}],["nonc",{"_index":497,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["noninfring",{"_index":1193,"title":{},"body":{"license.html":{}}}],["note",{"_index":73,"title":{},"body":{"classes/AESCrypt.html":{}}}],["notic",{"_index":1181,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1062,"title":{},"body":{"index.html":{},"todo.html":{}}}],["null",{"_index":430,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/RSACrypt.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/AESCrypt.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["o",{"_index":164,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{}}}],["oauth",{"_index":463,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{}}}],["obtain",{"_index":1164,"title":{},"body":{"license.html":{}}}],["oder",{"_index":1048,"title":{},"body":{"index.html":{}}}],["of(bank",{"_index":1097,"title":{},"body":{"index.html":{}}}],["on",{"_index":1074,"title":{},"body":{"index.html":{}}}],["open",{"_index":1022,"title":{},"body":{"index.html":{}}}],["option",{"_index":46,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"index.html":{}}}],["order",{"_index":861,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["otherwis",{"_index":1204,"title":{},"body":{"license.html":{}}}],["out",{"_index":1042,"title":{},"body":{"index.html":{},"license.html":{}}}],["over",{"_index":542,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["overview",{"_index":1206,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1009,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":84,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["param",{"_index":114,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["paramet",{"_index":44,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["part",{"_index":138,"title":{},"body":{"classes/AESCrypt.html":{}}}],["particular",{"_index":1191,"title":{},"body":{"license.html":{}}}],["password",{"_index":1129,"title":{},"body":{"index.html":{}}}],["payload",{"_index":966,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["payment",{"_index":1024,"title":{},"body":{"index.html":{}}}],["pem",{"_index":945,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pem_key_end",{"_index":919,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pem_key_start",{"_index":920,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pemkey",{"_index":933,"title":{},"body":{"classes/RSACrypt.html":{}}}],["permiss",{"_index":1159,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1176,"title":{},"body":{"license.html":{}}}],["person",{"_index":1163,"title":{},"body":{"license.html":{}}}],["pin",{"_index":534,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["point",{"_index":1043,"title":{},"body":{"index.html":{}}}],["portion",{"_index":1184,"title":{},"body":{"license.html":{}}}],["posit",{"_index":749,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["possibl",{"_index":105,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["post",{"_index":351,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["prefix",{"_index":901,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["prerequisit",{"_index":1045,"title":{},"body":{"index.html":{}}}],["privat",{"_index":8,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["procedur",{"_index":1141,"title":{},"body":{"index.html":{}}}],["process",{"_index":895,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["promis",{"_index":60,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["promise((resolv",{"_index":786,"title":{},"body":{"classes/CryptUtil.html":{}}}],["properti",{"_index":7,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["protect",{"_index":185,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["protocol",{"_index":318,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["provid",{"_index":839,"title":{},"body":{"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{},"license.html":{}}}],["provider[0].id",{"_index":1107,"title":{},"body":{"index.html":{}}}],["providerapi",{"_index":1098,"title":{},"body":{"index.html":{}}}],["providerapi.getproviders();",{"_index":1100,"title":{},"body":{"index.html":{}}}],["providerid",{"_index":1106,"title":{},"body":{"index.html":{}}}],["pubkey",{"_index":611,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["public",{"_index":106,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["public_key_uri",{"_index":586,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["publicahoikey",{"_index":631,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publicahoikey.publickey.valu",{"_index":645,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickey",{"_index":587,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickey.keyid",{"_index":649,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickeyid",{"_index":648,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publish",{"_index":1171,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1192,"title":{},"body":{"license.html":{}}}],["put",{"_index":672,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["quickstart",{"_index":1076,"title":{},"body":{"index.html":{}}}],["random",{"_index":496,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["randomli",{"_index":135,"title":{},"body":{"classes/AESCrypt.html":{}}}],["rare",{"_index":751,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["readonli",{"_index":10,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncInstallationIdCache.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["real",{"_index":1134,"title":{},"body":{"index.html":{}}}],["recommend",{"_index":562,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["regist",{"_index":520,"title":{},"body":{"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["registr",{"_index":670,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"index.html":{}}}],["registration/key",{"_index":594,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["registrationapi",{"_index":1094,"title":{},"body":{"index.html":{}}}],["registrationapi.register();d",{"_index":1096,"title":{},"body":{"index.html":{}}}],["registrationpublickey",{"_index":596,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["registrationrespons",{"_index":818,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{},"index.html":{}}}],["regpublickey",{"_index":610,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["reject",{"_index":787,"title":{},"body":{"classes/CryptUtil.html":{}}}],["reject(err",{"_index":791,"title":{},"body":{"classes/CryptUtil.html":{}}}],["remov",{"_index":733,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["replace(/\\//g",{"_index":697,"title":{},"body":{"classes/Base64Util.html":{}}}],["replace(/_/g",{"_index":695,"title":{},"body":{"classes/Base64Util.html":{}}}],["request",{"_index":536,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["requestinit",{"_index":340,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["requir",{"_index":549,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["require('ahoi",{"_index":1083,"title":{},"body":{"index.html":{}}}],["reserv",{"_index":1158,"title":{},"body":{"license.html":{}}}],["resolve(buf.tostring('base64",{"_index":792,"title":{},"body":{"classes/CryptUtil.html":{}}}],["resourc",{"_index":331,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["respons",{"_index":341,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["response.instal",{"_index":828,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["response.json",{"_index":359,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["response.ok",{"_index":358,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["response.text",{"_index":362,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["responsedata",{"_index":429,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["restrict",{"_index":79,"title":{},"body":{"classes/AESCrypt.html":{},"license.html":{}}}],["result",{"_index":182,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["retri",{"_index":1214,"title":{},"body":{"todo.html":{}}}],["retriev",{"_index":1025,"title":{},"body":{"index.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"todo.html":{}}}],["revers",{"_index":862,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["right",{"_index":1157,"title":{},"body":{"license.html":{}}}],["rsacrypt",{"_index":637,"title":{"classes/RSACrypt.html":{}},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/RSACrypt.html":{}}}],["rsacrypt.encryptwithrsapublickey(sessionkey",{"_index":646,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["rsacrypt.keytopemkey(key",{"_index":935,"title":{},"body":{"classes/RSACrypt.html":{}}}],["rsacrypt.pem_key_start}\\n${splitted.join('\\n')}\\n${this.pem_key_end",{"_index":942,"title":{},"body":{"classes/RSACrypt.html":{}}}],["run",{"_index":1146,"title":{},"body":{"index.html":{}}}],["s",{"_index":424,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["safe",{"_index":613,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["same",{"_index":863,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["sandbank",{"_index":1136,"title":{},"body":{"index.html":{}}}],["sandbox",{"_index":530,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["sandbox.starfinanz.d",{"_index":324,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["sandbox.starfinanz.de/ahoi/api/v2",{"_index":323,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authent",{"_index":470,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["sandbox.starfinanz.de/sandboxmanag",{"_index":532,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["save",{"_index":1063,"title":{},"body":{"index.html":{}}}],["sbm_xxqaex30t2d",{"_index":1086,"title":{},"body":{"index.html":{}}}],["scl&afpazdw6s#k3",{"_index":1090,"title":{},"body":{"index.html":{}}}],["scope",{"_index":964,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["sec",{"_index":355,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["second",{"_index":986,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["secreiv",{"_index":287,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["secret",{"_index":519,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["secur",{"_index":75,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["see",{"_index":469,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["select",{"_index":1072,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1175,"title":{},"body":{"license.html":{}}}],["send",{"_index":535,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{}}}],["sensit",{"_index":533,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["separ",{"_index":1148,"title":{},"body":{"index.html":{}}}],["server",{"_index":329,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{}}}],["servic",{"_index":242,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"index.html":{}}}],["session",{"_index":626,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/FetchHttpFactory.html":{}}}],["sessionkey",{"_index":633,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["sessionkey_header_nam",{"_index":619,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["sessionsechead",{"_index":647,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["set",{"_index":557,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{}}}],["set(key",{"_index":727,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["sethead",{"_index":395,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["setheader(httpcontext",{"_index":416,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["sethttpfilt",{"_index":847,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["sethttpfilter(httpfilt",{"_index":858,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["setinterv",{"_index":768,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["sha",{"_index":652,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["shall",{"_index":1182,"title":{},"body":{"license.html":{}}}],["short",{"_index":946,"title":{},"body":{"classes/RSACrypt.html":{}}}],["shouldremov",{"_index":772,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["show",{"_index":1075,"title":{},"body":{"index.html":{}}}],["signatur",{"_index":776,"title":{},"body":{"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["simpl",{"_index":731,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["simplecacheclean",{"_index":715,"title":{"interfaces/SimpleCacheCleaner.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["simpli",{"_index":1041,"title":{},"body":{"index.html":{}}}],["size",{"_index":755,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["slow",{"_index":614,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["snappi",{"_index":1216,"title":{},"body":{"todo.html":{}}}],["snippet",{"_index":1079,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":1166,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["split",{"_index":939,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/.../aescrypt.t",{"_index":1017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.t",{"_index":184,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:20",{"_index":199,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:21",{"_index":200,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:22",{"_index":198,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:23",{"_index":195,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:54",{"_index":207,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:62",{"_index":214,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:80",{"_index":202,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/ahoihelper.t",{"_index":564,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:12",{"_index":574,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:19",{"_index":571,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:26",{"_index":576,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:31",{"_index":577,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:6",{"_index":569,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.t",{"_index":295,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:10",{"_index":307,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:11",{"_index":305,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:13",{"_index":303,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:21",{"_index":310,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:44",{"_index":337,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:52",{"_index":313,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:78",{"_index":316,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.t",{"_index":585,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:10",{"_index":595,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:11",{"_index":593,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:16",{"_index":597,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:17",{"_index":591,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:23",{"_index":598,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:51",{"_index":600,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.t",{"_index":447,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:14",{"_index":455,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:16",{"_index":453,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:34",{"_index":461,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:48",{"_index":472,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:75",{"_index":473,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.t",{"_index":515,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.ts:17",{"_index":517,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.ts:6",{"_index":516,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/token.t",{"_index":947,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:16",{"_index":961,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:17",{"_index":969,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:19",{"_index":967,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:30",{"_index":960,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:36",{"_index":972,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:40",{"_index":973,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:44",{"_index":974,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:48",{"_index":977,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:52",{"_index":975,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:56",{"_index":978,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:60",{"_index":976,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:64",{"_index":983,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:68",{"_index":980,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:72",{"_index":971,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/cache/encinstallationidcache.t",{"_index":797,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["src/starfinanz/ahoi/cache/encinstallationidcache.ts:5",{"_index":799,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.t",{"_index":998,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:14",{"_index":1004,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:6",{"_index":1002,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:7",{"_index":1001,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/config/ahoiconfig.t",{"_index":525,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.t",{"_index":900,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:14",{"_index":906,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:22",{"_index":909,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5",{"_index":904,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:9",{"_index":907,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.t",{"_index":618,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10",{"_index":625,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:14",{"_index":636,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:21",{"_index":634,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:26",{"_index":632,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:31",{"_index":629,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.t",{"_index":838,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:18",{"_index":849,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20",{"_index":848,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:31",{"_index":859,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:46",{"_index":855,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:67",{"_index":851,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:98",{"_index":853,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.t",{"_index":386,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:10",{"_index":398,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:15",{"_index":415,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:19",{"_index":401,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:35",{"_index":403,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:37",{"_index":405,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:39",{"_index":419,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:46",{"_index":411,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:51",{"_index":417,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:59",{"_index":407,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:66",{"_index":409,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:78",{"_index":413,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.t",{"_index":654,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:22",{"_index":655,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:7",{"_index":658,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.t",{"_index":809,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14",{"_index":811,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:33",{"_index":816,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:45",{"_index":814,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:57",{"_index":815,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:71",{"_index":813,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.t",{"_index":889,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:11",{"_index":890,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:6",{"_index":891,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.t",{"_index":706,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:32",{"_index":717,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:43",{"_index":728,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:48",{"_index":723,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:61",{"_index":726,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:66",{"_index":721,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:76",{"_index":730,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:85",{"_index":720,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.t",{"_index":5,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:108",{"_index":89,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:119",{"_index":87,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:136",{"_index":64,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:14",{"_index":33,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16",{"_index":24,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:21",{"_index":62,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:40",{"_index":56,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:64",{"_index":53,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:78",{"_index":41,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.t",{"_index":680,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:12",{"_index":690,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:22",{"_index":688,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:4",{"_index":692,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:8",{"_index":686,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.t",{"_index":777,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:20",{"_index":785,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:3",{"_index":780,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:7",{"_index":782,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.t",{"_index":918,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:14",{"_index":928,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:23",{"_index":931,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:8",{"_index":926,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9",{"_index":923,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.t",{"_index":885,"title":{},"body":{"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:6",{"_index":888,"title":{},"body":{"interfaces/HttpFilter.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:7",{"_index":887,"title":{},"body":{"interfaces/HttpFilter.html":{}}}],["ssl",{"_index":545,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["start",{"_index":378,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"index.html":{}}}],["startcleanerjob",{"_index":711,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["startcleanerjob(tidyfunct",{"_index":729,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["startup",{"_index":252,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["static",{"_index":9,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["step",{"_index":1068,"title":{},"body":{"index.html":{}}}],["stolen",{"_index":555,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["store",{"_index":550,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{},"todo.html":{}}}],["strength",{"_index":65,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["string",{"_index":35,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["strip",{"_index":85,"title":{},"body":{"classes/AESCrypt.html":{}}}],["subject",{"_index":1178,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1173,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":1183,"title":{},"body":{"license.html":{}}}],["such",{"_index":1040,"title":{},"body":{"index.html":{}}}],["super(ahoiclienttokenservic",{"_index":820,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["super(config",{"_index":484,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["super(encinstallationidcache.decrypted_installationid_cache_s",{"_index":808,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["super(maxentri",{"_index":1007,"title":{},"body":{"classes/TokenCache.html":{}}}],["support",{"_index":288,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["sure",{"_index":1131,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":218,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"dependencies.html":{}}}],["synchron",{"_index":894,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["system",{"_index":1093,"title":{},"body":{"index.html":{},"todo.html":{}}}],["t",{"_index":208,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["take",{"_index":856,"title":{},"body":{"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["technic",{"_index":1071,"title":{},"body":{"index.html":{}}}],["templat",{"_index":367,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["test",{"_index":531,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":43,"title":{},"body":{"classes/AESCrypt.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["text.replac",{"_index":693,"title":{},"body":{"classes/Base64Util.html":{}}}],["text.replace(/\\+/g",{"_index":696,"title":{},"body":{"classes/Base64Util.html":{}}}],["text.tostring('base64",{"_index":700,"title":{},"body":{"classes/Base64Util.html":{}}}],["therefor",{"_index":1140,"title":{},"body":{"index.html":{}}}],["this.accesstoken",{"_index":521,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.accesstoken.isexpir",{"_index":522,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.ahoibankingtokenservice.authenticate(encinstallationid",{"_index":584,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.ahoibankingtokenservice.authenticate(httpcontext.installationid",{"_index":443,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["this.ahoiclienttokenservice.authent",{"_index":438,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{}}}],["this.ahoiconfigur",{"_index":257,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoiconfiguration.basepath",{"_index":269,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoihelp",{"_index":262,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoipublickeyservice.getpublickey",{"_index":639,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.applyfilt",{"_index":878,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.applyfilterandexecuterequest(httpcontext",{"_index":869,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.applyfilters(httpcontext",{"_index":871,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.cachemap",{"_index":740,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.delete(hashedkey",{"_index":761,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.delete(key",{"_index":765,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.entri",{"_index":771,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.get(hashedkey",{"_index":746,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.set(hashedkey",{"_index":762,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.set(this.hashkey(key",{"_index":742,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.callahoioauthserv",{"_index":523,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.callahoioauthserver(authhead",{"_index":492,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.checkconfig(config",{"_index":240,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.cleancache(tidyfunct",{"_index":770,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.config.appsecretiv",{"_index":508,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.config.appsecretkey",{"_index":514,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.createauthheader(installationid",{"_index":490,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.createauthheaders(headermap",{"_index":350,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.createsessionkeyheader(publickey",{"_index":643,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.cryptkey",{"_index":912,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["this.decode(accesstoken",{"_index":988,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.decryptinstallationid(httpcontext.installationid",{"_index":824,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.encryptinstallationid(installationid",{"_index":583,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.encryptsessionkey(usesessionkey",{"_index":642,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.ensurecapac",{"_index":743,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.fetchhttpfactori",{"_index":243,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.fetchhttpfactory.gethttpclient(installationid",{"_index":270,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.fetchhttpfactory.sethttpfilter(httpfilt",{"_index":267,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.filterrequest(httpcontext",{"_index":426,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["this.generatesessionkey",{"_index":641,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.getauthtoken(httpcontext",{"_index":446,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{}}}],["this.getbankingtoken(httpcontext",{"_index":445,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{}}}],["this.getbaseurl(config.baseurl",{"_index":343,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.getexpir",{"_index":997,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.hashkey(key",{"_index":745,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.httpclientfactory.gethttpcli",{"_index":608,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.httprequestfilt",{"_index":864,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.httpresponsefilt",{"_index":865,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.idcach",{"_index":821,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.get(encinstallationid",{"_index":835,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.set(encinstallationid",{"_index":837,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.set(encryptedinstallationid",{"_index":830,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.inithttpfilters(ahoiclienttokenservic",{"_index":266,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.installationidcryptservic",{"_index":260,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.decryptinstallationid(encinstallationid",{"_index":836,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.installationidcryptservice.decryptinstallationid(encryptedinstallationid",{"_index":581,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.encryptinstallationid(installationid",{"_index":579,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.encryptinstallationid(response.instal",{"_index":829,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.installationidcryptservice.isencrypted(httpcontext.installationid",{"_index":823,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.isencrypted(encryptedinstallationid",{"_index":913,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["this.isexpired(this.publickey",{"_index":603,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.maxentri",{"_index":764,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.mergeheaders(head",{"_index":376,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.publickey",{"_index":602,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.setheader(httpcontext",{"_index":677,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["this.startcleanerjob(tidyfunct",{"_index":741,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.tokencach",{"_index":485,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokencache.get(installationid",{"_index":486,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokencache.set(installationid",{"_index":493,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokendata",{"_index":987,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.accesstoken",{"_index":989,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.clientid",{"_index":990,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.contextid",{"_index":991,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.expir",{"_index":993,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.head",{"_index":995,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.jti",{"_index":992,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload",{"_index":994,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.scope.includes(token.jwt_prop_encryption_dis",{"_index":996,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.uri",{"_index":348,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["this.useencrypt",{"_index":502,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["this.usesmethod(httpcontext",{"_index":675,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["thread",{"_index":255,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["throw",{"_index":76,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{}}}],["tidyfunct",{"_index":713,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["tidyfunction.apply(nul",{"_index":773,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tidyfunction.call(this.cachemap",{"_index":769,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tidyfunction.length",{"_index":767,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["time",{"_index":896,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["timeout",{"_index":352,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["timestamp",{"_index":499,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["todo",{"_index":1209,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":251,"title":{"classes/Token.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["token(bankingtoken",{"_index":868,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["token(token.access_token",{"_index":360,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["token.assumed_max_request_tim",{"_index":982,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["token.isexpir",{"_index":489,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/TokenCache.html":{}}}],["tokencach",{"_index":450,"title":{"classes/TokenCache.html":{}},"body":{"classes/AhoiBankingTokenService.html":{},"classes/TokenCache.html":{}}}],["tokencache.clean_interv",{"_index":1006,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokencache.cleancach",{"_index":1008,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokencache.max_entri",{"_index":1005,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokendata",{"_index":951,"title":{"interfaces/TokenData.html":{}},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["top",{"_index":753,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tort",{"_index":1203,"title":{},"body":{"license.html":{}}}],["tostring('base64",{"_index":370,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["transact",{"_index":468,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"index.html":{}}}],["transfer",{"_index":1028,"title":{},"body":{"index.html":{}}}],["tri",{"_index":120,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["true",{"_index":113,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["ts",{"_index":1147,"title":{},"body":{"index.html":{}}}],["tsdoc",{"_index":1212,"title":{},"body":{"todo.html":{}}}],["tslint:dis",{"_index":344,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["two",{"_index":1137,"title":{},"body":{"index.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["typeof",{"_index":166,"title":{},"body":{"classes/AESCrypt.html":{}}}],["typescript",{"_index":735,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["unam",{"_index":775,"title":{},"body":{"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["undefin",{"_index":724,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["under",{"_index":1151,"title":{},"body":{"index.html":{}}}],["updat",{"_index":671,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["uri",{"_index":298,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["url",{"_index":321,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["urlsafebase64decod",{"_index":682,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64decode(text",{"_index":687,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64encod",{"_index":683,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64encode(text",{"_index":689,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64tobase64",{"_index":684,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64tobase64(text",{"_index":691,"title":{},"body":{"classes/Base64Util.html":{}}}],["us",{"_index":57,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{},"license.html":{}}}],["useciph",{"_index":127,"title":{},"body":{"classes/AESCrypt.html":{}}}],["usecryptkey",{"_index":129,"title":{},"body":{"classes/AESCrypt.html":{}}}],["useencrypt",{"_index":452,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["user",{"_index":81,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"index.html":{},"todo.html":{}}}],["usernam",{"_index":1073,"title":{},"body":{"index.html":{}}}],["usesessionkey",{"_index":640,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["usesmethod",{"_index":396,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["usesmethod(httpcontext",{"_index":418,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["usual",{"_index":537,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["utf8",{"_index":161,"title":{},"body":{"classes/AESCrypt.html":{}}}],["valu",{"_index":29,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"miscellaneous/enumerations.html":{}}}],["value.ag",{"_index":738,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["verifi",{"_index":543,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["version",{"_index":1046,"title":{},"body":{"index.html":{}}}],["via",{"_index":1036,"title":{},"body":{"index.html":{}}}],["void",{"_index":203,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["vs",{"_index":334,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["want",{"_index":1133,"title":{},"body":{"index.html":{}}}],["warn",{"_index":237,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warn('cryptkey",{"_index":292,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warn('secret",{"_index":286,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warranti",{"_index":1185,"title":{},"body":{"license.html":{}}}],["way",{"_index":1127,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1200,"title":{},"body":{"license.html":{}}}],["wird",{"_index":1061,"title":{},"body":{"index.html":{}}}],["within",{"_index":1038,"title":{},"body":{"index.html":{}}}],["without",{"_index":253,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"license.html":{}}}],["wrapper",{"_index":1222,"title":{},"body":{"todo.html":{}}}],["write",{"_index":1218,"title":{},"body":{"todo.html":{}}}],["x",{"_index":454,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["xauthhead",{"_index":494,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["ye",{"_index":50,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"classes/FetchHttpFactory.html":{}}}],["you'll",{"_index":1138,"title":{},"body":{"index.html":{}}}],["zu",{"_index":1020,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AESCrypt.html":{"url":"classes/AESCrypt.html","title":"class - AESCrypt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AESCrypt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/aescrypt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                DEFAULT_IV\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                IV_LENGTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decrypt\n                            \n                            \n                                    Static\n                                decryptRandomIV\n                            \n                            \n                                    Static\n                                    Async\n                                encrypt\n                            \n                            \n                                    Static\n                                    Async\n                                encryptRandomIV\n                            \n                            \n                                    Private\n                                    Static\n                                getEncryptionStrength\n                            \n                            \n                                    Private\n                                    Static\n                                iVToBuffer\n                            \n                            \n                                    Private\n                                    Static\n                                keyToBuffer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            DEFAULT_IV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_IV:     Buffer\n\n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Default value : Buffer.alloc(AESCrypt.IV_LENGTH)\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            IV_LENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IV_LENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decrypt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decrypt(enctext: string, cryptkey: string | Buffer, cipher: Cipher, containsIV: boolean, iv?: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:78\n                            \n                        \n\n\n                \n                    \n                            Decrypts an AES encrypted text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        enctext\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                                \n                                                        containsIV\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decryptRandomIV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptRandomIV(enctext: string, cryptkey: string | Buffer, cipher: Cipher)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        enctext\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            encrypt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encrypt(text: string, cryptkey: string | Buffer, cipher: Cipher, iv: string | Buffer, addIV: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:40\n                            \n                        \n\n\n                \n                    \n                            Encrypts a string using AES.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AESCrypt.DEFAULT_IV\n                                                        \n\n                                                        \n                                                                A {\n\n                                                        \n                                                \n                                                \n                                                        addIV\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            encryptRandomIV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptRandomIV(text: string, cryptkey: string | Buffer, cipher: Cipher)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getEncryptionStrength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEncryptionStrength(key: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:136\n                            \n                        \n\n\n                \n                    \n                            Get the AES encryption strength. For AES encryption allowed are only key with length 128, 192\nor 256 bit.\nNote: it would be more secure to throw an exception if key length does not match these\nrestrictions. On the other hand it is more user friendly to allow keys too, that do not match.\nIn this case other keys are allowed and padded or stripped to 256 bit.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            iVToBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        iVToBuffer(iv: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            keyToBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyToBuffer(cryptKey: string | Buffer, length: number | string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        cryptKey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        length\n                                                        \n                                                                    number | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\nimport * as crypto from 'crypto';\n\nimport { Base64Util } from './base64util';\nimport { CryptUtil } from './cryptutil';\n\nexport enum Cipher {\n  AES_CBC = 'aes-${strength}-cbc',\n  AES_CTR = 'aes-${strength}-ctr',\n  DEFAULT = 'aes-256-cbc',\n}\nexport class AESCrypt {\n\n  private static readonly IV_LENGTH = 16; // For AES, this is always 16\n\n  private static readonly DEFAULT_IV: Buffer = Buffer.alloc(AESCrypt.IV_LENGTH);\n\n  // Class has only static methods, instantiation should not be possible\n  private constructor() { }\n\n  public static async encryptRandomIV(text: string,\n                                      cryptkey: string | Buffer,\n                                      cipher: Cipher = Cipher.DEFAULT): Promise {\n    const iv: Buffer = Buffer.from(\n      await CryptUtil.createRandomKey(AESCrypt.IV_LENGTH), 'base64');\n    return AESCrypt.encrypt(text, cryptkey, cipher, iv, true);\n  }\n\n  /**\n   * Encrypts a string using AES.\n   *\n   * @param {string} text\n   * @param {(string | Buffer)} cryptkey\n   * @param {string} [cipher=Cipher.AES_CTR]\n   * @param {(string | Buffer)} [iv=AESCrypt.DEFAULT_IV]  A {@link Buffer} or an base64 encrypted string\n   * @param {boolean} [addIV=false]\n   * @returns {Promise}\n   * @memberof AESCrypt\n   */\n  public static async encrypt(text: string,\n                              cryptkey: string | Buffer,\n                              cipher: Cipher = Cipher.DEFAULT,\n                              iv: string | Buffer = AESCrypt.DEFAULT_IV,\n                              addIV: boolean = false): Promise {\n    try {\n      const bufIV = AESCrypt.iVToBuffer(iv);\n      // 128, 192 or 256 bytes\n      const aesKeyLenInBytes = AESCrypt.getEncryptionStrength(cryptkey).toString();\n      // e.g. aes-256-cbc\n      const useCipher = cipher.replace(/\\$\\{strength\\}/, aesKeyLenInBytes);\n      const useCryptKey = AESCrypt.keyToBuffer(cryptkey, useCipher);\n      const cipheriv = crypto.createCipheriv(useCipher, useCryptKey, bufIV);\n      // Add IV only, if it's randomly generated. IV is needed for decryption and must be part of the\n      // encrypted text if no default is used.\n      const encrypted = addIV ? Buffer.concat([bufIV, cipheriv.update(text), cipheriv.final()])\n        : Buffer.concat([cipheriv.update(text), cipheriv.final()]);\n      return encrypted.toString('base64');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  public static decryptRandomIV(enctext: string,\n                                cryptkey: string | Buffer,\n                                cipher: Cipher = Cipher.DEFAULT): string {\n    return AESCrypt.decrypt(enctext, cryptkey, cipher, true);\n  }\n\n  /**\n   * Decrypts an AES encrypted text\n   *\n   * @param {string} enctext\n   * @param {string} [cipher=AESCrypt.AHOI_DEFAULT_CIPHER]\n   * @returns {Promise}\n   * @memberof AESCrypt\n   */\n  public static decrypt(enctext: string,\n                        cryptkey: string | Buffer,\n                        cipher: Cipher = Cipher.DEFAULT,\n                        containsIV: boolean = false,\n                        iv?: string | Buffer): string {\n    try {\n      const encTextBuffer = Buffer.from(Base64Util.urlSafeBase64ToBase64(enctext), 'base64');\n      let bufIV: Buffer;\n      if (containsIV) {\n        bufIV = encTextBuffer.slice(0, AESCrypt.IV_LENGTH);\n      } else if (iv) {\n        bufIV = AESCrypt.iVToBuffer(iv);\n      } else {\n        bufIV = AESCrypt.DEFAULT_IV;\n      }\n      const encryptedText: Buffer = containsIV ? encTextBuffer.slice(AESCrypt.IV_LENGTH) : encTextBuffer;\n      // 128, 192 or 256 bytes\n      const aesKeyLenInBytes = AESCrypt.getEncryptionStrength(cryptkey).toString();\n      // e.g. aes-256-cbc\n      const useCipher = cipher.replace(/\\$\\{strength\\}/, aesKeyLenInBytes);\n      const useCryptKey = AESCrypt.keyToBuffer(cryptkey, useCipher);\n      const decipher = crypto.createDecipheriv(useCipher, useCryptKey, bufIV);\n      return decipher.update(encryptedText, 'binary', 'utf8') + decipher.final().toString('utf8');\n    } catch (err) {\n      error(err);\n      error('Error: %o', err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private static keyToBuffer(cryptKey: string | Buffer, length: number | string = 32): Buffer {\n    const len = typeof length === 'string' ? length.includes('256') ? 32 : 16 : length;\n    let newBuffer: Buffer;\n    if (cryptKey instanceof Buffer) {\n      newBuffer = Buffer.concat([cryptKey, Buffer.alloc(len)]);\n    } else {\n      newBuffer = Buffer.concat([Buffer.from(cryptKey as string), Buffer.alloc(len)]);\n    }\n    return newBuffer.slice(0, len);\n  }\n\n  private static iVToBuffer(iv: string | Buffer): Buffer {\n    const decIV: Buffer = iv instanceof Buffer ? iv : Base64Util.urlSafeBase64Decode(iv);\n    return Buffer.concat([decIV, Buffer.alloc(AESCrypt.IV_LENGTH)]).slice(0, AESCrypt.IV_LENGTH);\n  }\n\n  /**\n   * Get the AES encryption strength. For AES encryption allowed are only key with length 128, 192\n   * or 256 bit.\n   * Note: it would be more secure to throw an exception if key length does not match these\n   * restrictions. On the other hand it is more user friendly to allow keys too, that do not match.\n   * In this case other keys are allowed and padded or stripped to 256 bit.\n   *\n   * @private\n   * @param {(string | Buffer)} key\n   * @returns {number}\n   * @memberof AESCrypt\n   */\n  private static getEncryptionStrength(key: string | Buffer): number {\n    const keyBuf: Buffer = key instanceof Buffer ? key : Buffer.from(key);\n    if (keyBuf.length === 16 || keyBuf.length === 24 || keyBuf.length === 32) {\n      return keyBuf.length * 8;\n    }\n    return 256;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractAhoiApiFactory.html":{"url":"classes/AbstractAhoiApiFactory.html","title":"class - AbstractAhoiApiFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractAhoiApiFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/abstractahoiapifactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ahoiConfiguration\n                            \n                            \n                                    Protected\n                                ahoiHelper\n                            \n                            \n                                    Protected\n                                fetchHttpFactory\n                            \n                            \n                                    Protected\n                                installationIdCryptService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkConfig\n                            \n                            \n                                    Protected\n                                    Async\n                                getApiInstance\n                            \n                            \n                                    Private\n                                initHttpFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ahoiConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ahoiConfiguration:     Configuration\n\n                    \n                \n                    \n                        \n                            Type :     Configuration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ahoiHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ahoiHelper:     AhoiHelper\n\n                    \n                \n                    \n                        \n                            Type :     AhoiHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fetchHttpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fetchHttpFactory:     FetchHttpFactory\n\n                    \n                \n                    \n                        \n                            Type :     FetchHttpFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            installationIdCryptService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        installationIdCryptService:     InstallationIdCryptService\n\n                    \n                \n                    \n                        \n                            Type :     InstallationIdCryptService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkConfig(config: AhoiConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getApiInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getApiInstance(api, installationId: string, bankingToken?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:54\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bankingToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initHttpFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initHttpFilters(ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService, ahoiSessionKeyHeaderService: AhoiSessionKeyHeaderService, installationIdCryptService: InstallationIdCryptService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiClientTokenService\n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ahoiSessionKeyHeaderService\n                                                        \n                                                                    AhoiSessionKeyHeaderService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        installationIdCryptService\n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpFilter[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration, FetchAPI } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiConfig } from './config/ahoiconfig';\nimport { AhoiHelper } from './ahoihelper';\nimport { AhoiPublicKeyService } from './auth/ahoipublickey';\nimport { AhoiBankingTokenService } from './auth/bankingtokenauth';\nimport { AhoiClientTokenService } from './auth/clienttokenauth';\nimport { InstallationIdCryptService } from './cryptservice/installationidcryptservice';\nimport { AhoiSessionKeyHeaderService } from './cryptservice/sessionkeyheaderservice';\nimport { FetchHttpFactory } from './httpclient/fetchhttpfactory';\nimport { AuthHeaderFilter } from './httpfilter/authheaderfilter';\nimport { EncryptInstallationIdFilter } from './httpfilter/encryptinstallationidfilter';\nimport { EncryptSessionFilter } from './httpfilter/encryptsessionfilter';\nimport { HttpFilter } from './lib/httpfilter/httpfilter';\nimport { HttpRequestTimeoutFilter } from './httpfilter/httprequesttimeoutfilter';\nimport { warn } from 'console';\n\nexport abstract class AbstractAhoiApiFactory {\n\n  protected fetchHttpFactory: FetchHttpFactory;\n  protected installationIdCryptService!: InstallationIdCryptService;\n  protected ahoiHelper: AhoiHelper;\n  protected ahoiConfiguration: Configuration;\n\n  constructor(protected config: AhoiConfig) {\n\n    this.checkConfig(config);\n\n    /* init services */\n    this.fetchHttpFactory = new FetchHttpFactory();\n    const ahoiPublicKeyService: AhoiPublicKeyService = new AhoiPublicKeyService(this.fetchHttpFactory, config.baseurl);\n    const ahoiSessionKeyHeaderService = new AhoiSessionKeyHeaderService(ahoiPublicKeyService);\n    const ahoiClientTokenService = new AhoiClientTokenService(config);\n    const ahoiBankingTokenService = new AhoiBankingTokenService(config, ahoiClientTokenService);\n\n    // Try to fetch auth token on startup without blocking the thread by using await\n    ahoiClientTokenService.authenticate();\n\n    this.ahoiConfiguration = new Configuration({ basePath: config.baseurl });\n    if (config.cryptKey) {\n      this.installationIdCryptService = new InstallationIdCryptService(config.cryptKey);\n    }\n    this.ahoiHelper = new AhoiHelper(this.installationIdCryptService, ahoiClientTokenService, ahoiBankingTokenService);\n\n    /* init http filters */\n    const httpfilter: HttpFilter[] =\n      this.initHttpFilters(ahoiClientTokenService,\n                           ahoiBankingTokenService,\n                           ahoiSessionKeyHeaderService,\n                           this.installationIdCryptService);\n    this.fetchHttpFactory.setHttpFilter(httpfilter);\n  }\n\n  protected async getApiInstance(api: (new (configuration: Configuration,\n                                               basePath: string, fetch: FetchAPI) => T),\n                                    installationId: string,\n                                    bankingToken?: string): Promise {\n    return new api(this.ahoiConfiguration, this.ahoiConfiguration.basePath || '',\n                   this.fetchHttpFactory.getHttpClient(installationId, bankingToken));\n  }\n\n  private initHttpFilters(ahoiClientTokenService: AhoiClientTokenService,\n                          ahoiBankingTokenService: AhoiBankingTokenService,\n                          ahoiSessionKeyHeaderService: AhoiSessionKeyHeaderService,\n                          installationIdCryptService: InstallationIdCryptService): HttpFilter[] {\n    const filters: HttpFilter[] = [];\n    if (installationIdCryptService) {\n      filters.push(new EncryptInstallationIdFilter(installationIdCryptService,\n                                                   ahoiClientTokenService,\n                                                   ahoiBankingTokenService));\n    }\n    filters.push(new EncryptSessionFilter(ahoiSessionKeyHeaderService,\n                                          ahoiClientTokenService,\n                                          ahoiBankingTokenService));\n    filters.push(new AuthHeaderFilter(ahoiClientTokenService, ahoiBankingTokenService));\n    filters.push(new HttpRequestTimeoutFilter(ahoiClientTokenService, ahoiBankingTokenService));\n    return filters;\n  }\n\n  private checkConfig(config: AhoiConfig): void {\n    if (!config.baseurl) {\n      throw new Error('URL to AHOI API is missing in configuration (property: baseurl');\n    }\n    if (!config.clientId || !config.clientSecret) {\n      throw new Error('Credentials for the AHOI API are missing in configuration (properties: clientId, clientSecret)');\n    }\n    if (!config.appSecretIv || !config.appSecretKey) {\n      warn('Secret or SecreIV are missing in configuration. \\\n      Encryption support is not available (properties appSecretKey, appSecretIv)');\n    }\n    if (!config.cryptKey) {\n      warn('CryptKey is missing in configuration. CryptSupport for InstallationId is not \\\n      available (property: cryptKey)');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractAhoiAuthenticationService.html":{"url":"classes/AbstractAhoiAuthenticationService.html","title":"class - AbstractAhoiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractAhoiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/abstractauth.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/abstractauth.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\n\nimport nodeFetch, { FetchError, Headers, RequestInit, Response } from 'node-fetch';\n\nimport { AhoiConfig } from '../config/ahoiconfig';\nimport { Token } from './token';\n\nexport abstract class AbstractAhoiAuthenticationService {\n\n  public static readonly AUTH_URI: string = '/auth/v1/oauth/token';\n  public static readonly AUTH_CREDENTIALS_PARAMETER = 'grant_type=client_credentials';\n\n  protected readonly uri: string;\n\n  constructor(protected config: AhoiConfig) {\n    const baseUrl = this.getBaseUrl(config.baseurl);\n    // tslint:disable-next-line:max-line-length\n    this.uri = `${baseUrl}${AbstractAhoiAuthenticationService.AUTH_URI}?${AbstractAhoiAuthenticationService.AUTH_CREDENTIALS_PARAMETER}`;\n  }\n\n  protected async callAhoiOAuthServer(headerMap?: Map): Promise {\n    const headers: Headers = this.createAuthHeaders(headerMap);\n    const options: RequestInit = {\n      headers,\n      method: 'POST',\n      timeout: 10000, // 10 sec,\n      compress: true,\n    };\n\n    try {\n      const response: Response = await nodeFetch(this.uri, options);\n      if (response.ok) {\n        const token: any = await response.json();\n        return new Token(token.access_token);\n      }\n      const errorMsg = await response.text();\n      throw new FetchError(errorMsg, 'auth-error', '');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private mergeHeaders(headers: Headers, headerMap?: Map): void {\n    if (headerMap) {\n      for (const [key, value] of headerMap) {\n        headers.set(key, value);\n      }\n    }\n  }\n\n  private createAuthHeaders(headerMap?: Map): Headers {\n    const authHeaders: any = {\n      // tslint:disable-next-line:prefer-template\n      Authorization: 'Basic ' + Buffer.from(`${this.config.clientId}:${this.config.clientSecret}`)\n        .toString('base64'),\n      accept: 'application/json',\n      'content-type': 'application/json;charset=UTF-8',\n    };\n\n    const headers: Headers = new Headers(authHeaders);\n    this.mergeHeaders(headers, headerMap);\n    return headers;\n  }\n\n  /**\n   * Extracts protocol and domain from given url\n   * Given 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n   * 'https://banking-sandbox.starfinanz.de'\n   * This helper function is needed as the base url for the AHOI authorization server may have a\n   * different base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n   *\n   * @private\n   * @param {string} baseUrl\n   * @returns {string}\n   * @memberof AhoiAuthenticationService\n   */\n  private getBaseUrl(baseUrl: string): string {\n    const start = baseUrl.search(/\\/\\//);\n    const protocol = baseUrl.substring(0, start === -1 ? 0 : start + 2);\n    const domain = (baseUrl.substring(protocol.length).match(/[^\\/]+/) || [''])[0];\n    return protocol + domain;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpFilter.html":{"url":"classes/AbstractHttpFilter.html","title":"class - AbstractHttpFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { Headers } from 'node-fetch';\n\nimport { AhoiBankingTokenService } from '../auth/bankingtokenauth';\nimport { AhoiClientTokenService } from '../auth/clienttokenauth';\nimport { Token } from '../auth/token';\nimport { HttpContext, HttpFilter } from '../lib/httpfilter/httpfilter';\n\nexport abstract class AbstractHttpFilter implements HttpFilter {\n\n  constructor(protected ahoiClientTokenService: AhoiClientTokenService,\n              protected ahoiBankingTokenService: AhoiBankingTokenService) { }\n\n  public async matches(httpContext: HttpContext): Promise {\n    return false;\n  }\n\n  public async doFilter(httpContext: HttpContext): Promise {\n    if (httpContext.isrequest) {\n      debug('doFilter %s', httpContext.url);\n      await this.filterRequest(httpContext);\n    } else {\n      if (httpContext.response.status >= 200 && httpContext.response.status  {\n            return responseData;\n          };\n        }\n      }\n    }\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise { }\n\n  protected async filterResponse(httpContext: HttpContext): Promise { return null; }\n\n  protected usesMethod(httpContext: HttpContext, method: string): boolean {\n    if (httpContext.options.method && method) {\n      return httpContext.options.method.toLowerCase() === method.toLowerCase();\n    }\n    return false;\n  }\n\n  protected async getResponse(httpContext: HttpContext): Promise {\n    const responseData = await httpContext.response.json();\n    return responseData as T;\n  }\n\n  protected setHeader(httpContext: HttpContext, name: string, value: any): void {\n    if (httpContext.options.headers instanceof Headers) {\n      httpContext.options.headers.set(name, value);\n    } else {\n      httpContext.options.headers = { ...httpContext.options.headers, [name]: value };\n    }\n  }\n\n  protected async getAuthToken(httpContext: HttpContext): Promise {\n    if (!httpContext.authToken) {\n      httpContext.authToken = await this.ahoiClientTokenService.authenticate();\n    }\n    return httpContext.authToken;\n  }\n\n  protected async getBankingToken(httpContext: HttpContext): Promise {\n    if (!httpContext.bankingToken) {\n      if (!httpContext.installationid) {\n        throw ('Can not get banking token without installationId.');\n      }\n      debug('fetch banking token');\n      httpContext.bankingToken = await this.ahoiBankingTokenService.authenticate(httpContext.installationid);\n      debug('token is %s', httpContext.bankingToken);\n    }\n    return httpContext.bankingToken;\n  }\n\n  protected async getToken(httpContext: HttpContext): Promise {\n    return httpContext.installationid ? this.getBankingToken(httpContext) : this.getAuthToken(httpContext);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiBankingTokenService.html":{"url":"classes/AhoiBankingTokenService.html","title":"class - AhoiBankingTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiBankingTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/bankingtokenauth.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractAhoiAuthenticationService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AUTH_BANKINGTOKEN_HEADER\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokencache\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Private\n                                    Async\n                                createAuthHeader\n                            \n                            \n                                    Private\n                                    Async\n                                useEncryption\n                            \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig, ahoiClientTokenService: AhoiClientTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_BANKINGTOKEN_HEADER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_BANKINGTOKEN_HEADER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Authorization-Ahoi'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tokencache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokencache:     TokenCache\n\n                    \n                \n                    \n                        \n                            Type :     TokenCache\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:34\n                            \n                        \n\n\n                \n                    \n                            Authenticate and authorize the user with the given installationId against AHOI using OAuth 2.0\nprotocol. The returned authorization token called 'banking token' is needed to access the AHOI\nendpoints e.g. to get transactions.\nsee: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            createAuthHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeader(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            useEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        useEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { AhoiConfig } from '../config/ahoiconfig';\nimport { TokenCache } from '../cache/tokencache';\nimport { AESCrypt, Cipher } from '../lib/crypt/aescrypt';\nimport { Base64Util } from '../lib/crypt/base64util';\nimport { CryptUtil } from '../lib/crypt/cryptutil';\nimport { AbstractAhoiAuthenticationService } from './abstractauth';\nimport { AhoiClientTokenService } from './clienttokenauth';\nimport { Token } from './token';\n\nexport class AhoiBankingTokenService extends AbstractAhoiAuthenticationService {\n\n  public static readonly AUTH_BANKINGTOKEN_HEADER = 'X-Authorization-Ahoi';\n\n  private readonly tokencache: TokenCache;\n\n  constructor(config: AhoiConfig,\n              private ahoiClientTokenService: AhoiClientTokenService) {\n    super(config);\n    this.tokencache = new TokenCache();\n  }\n\n  /**\n   * Authenticate and authorize the user with the given installationId against AHOI using OAuth 2.0\n   * protocol. The returned authorization token called 'banking token' is needed to access the AHOI\n   * endpoints e.g. to get transactions.\n   * see: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n   *\n   * @param {string} installationid\n   * @returns {Promise}\n   * @memberof AhoiBankingTokenService\n   */\n  public async authenticate(installationId: string): Promise {\n    const token = this.tokencache.get(installationId);\n    debug('Get token from cache %s', token);\n    if (token && !token.isExpired()) {\n      return token;\n    }\n\n    const authHeader: Map = await this.createAuthHeader(installationId);\n    debug('AuthHeader %o', authHeader);\n    const bankingtoken = await this.callAhoiOAuthServer(authHeader);\n    this.tokencache.set(installationId, bankingtoken);\n    return bankingtoken;\n  }\n\n  private async createAuthHeader(installationId: string): Promise> {\n    const authHeaders = new Map();\n    const xAuthHeader: string = JSON.stringify({\n      installationId,\n      // 32 byte random string\n      nonce: await CryptUtil.generateNonce(32),\n      timestamp: new Date().toISOString(),\n    });\n    debug(xAuthHeader);\n\n    const useEncryption = await this.useEncryption();\n    let encXAuthHeader: string = '';\n    if (useEncryption) {\n      debug('Header must be encrypted, encrypt header...');\n      // encrypt xAuthHeader (X-Authorization - Ahoi)\n      encXAuthHeader = await AESCrypt.encrypt(xAuthHeader,\n                                              Base64Util.urlSafeBase64Decode(this.config.appSecretKey!),\n                                              Cipher.AES_CBC,\n                                              this.config.appSecretIv!);\n    }\n\n    authHeaders.set(AhoiBankingTokenService.AUTH_BANKINGTOKEN_HEADER,\n                    encXAuthHeader ? Base64Util.base64ToUrlSafeBase64(encXAuthHeader)\n        : Base64Util.urlSafeBase64Encode(xAuthHeader));\n    return authHeaders;\n  }\n\n  private async useEncryption(): Promise {\n    const accessToken: Token = await this.ahoiClientTokenService.authenticate();\n    if (accessToken.useEncryption() && this.config.appSecretKey && this.config.appSecretIv) {\n      return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiClientTokenService.html":{"url":"classes/AhoiClientTokenService.html","title":"class - AhoiClientTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiClientTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/clienttokenauth.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractAhoiAuthenticationService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accesstoken\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            accesstoken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accesstoken:     Token\n\n                    \n                \n                    \n                        \n                            Type :     Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/clienttokenauth.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/clienttokenauth.ts:17\n                            \n                        \n\n\n                \n                    \n                            Authenticate and authorize the client using clientId and client-Secret against AHOI using the\nOAuth 2.0 protocol.\nThe returned authorization token is needed to register new users.\nsee: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractAhoiAuthenticationService } from './abstractauth';\nimport { Token } from './token';\n\nexport class AhoiClientTokenService extends AbstractAhoiAuthenticationService {\n\n  private accesstoken!: Token;\n\n  /**\n   * Authenticate and authorize the client using clientId and client-Secret against AHOI using the\n   * OAuth 2.0 protocol.\n   * The returned authorization token is needed to register new users.\n   * see: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n   *\n   * @returns {Promise}\n   * @memberof AhoiClientTokenService\n   */\n  public async authenticate(): Promise {\n    if (this.accesstoken && !this.accesstoken.isExpired()) {\n      return this.accesstoken;\n    }\n\n    this.accesstoken = await this.callAhoiOAuthServer();\n    return this.accesstoken;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AhoiConfig.html":{"url":"interfaces/AhoiConfig.html","title":"interface - AhoiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AhoiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/config/ahoiconfig.ts\n        \n\n            \n                Description\n            \n            \n                Configuration data that is needed to access the AHOI API. To get the access data for the AHOI API\n(clientId, clientSecret, appSecretIv, appSecretKey) you have to create an account before, e.g. at\nAHOI sandbox to test the API (https://banking-sandbox.starfinanz.de/sandboxmanager/).\nappSecretIv and appSecretKey must only be given, if sensitive data like bank access PIN must be\nencrypted before sending a request to AHOI. Usually connections between application server and\nAHOI are secured using client certificate (handed over to AHOI before so AHOI can verify the\nrequest is from a known server) and SSL secured connection to AHOI server. If AHOI does not have\na client certificate from your application server, encryption must be activated. This can be done\nin your AHOI (sandbox) account.\nThe security guidelines from AHOI require that every installationid must be stored e.g. in a\ndatabase encrypted to ensure, they can't be used in case they are lost or stolen (e.g. your\nserver have been hacked). If you set an cryptKey in cofiguration, all installationid's will be\nautomatically encrypt so you do not have to deal with that. It is recommended, to use this\nfeature.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        appSecretIv\n                                \n                                \n                                            Optional\n                                        appSecretKey\n                                \n                                \n                                        baseurl\n                                \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                            Optional\n                                        cryptKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appSecretIv\n                                    \n                                \n                                \n                                    \n                                        appSecretIv:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appSecretKey\n                                    \n                                \n                                \n                                    \n                                        appSecretKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseurl\n                                    \n                                \n                                \n                                    \n                                        baseurl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cryptKey\n                                    \n                                \n                                \n                                    \n                                        cryptKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AhoiConfig {\n  clientId: string;\n  clientSecret: string;\n  appSecretIv?: string;\n  appSecretKey?: string;\n  baseurl: string;\n  cryptKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiHelper.html":{"url":"classes/AhoiHelper.html","title":"class - AhoiHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/ahoihelper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                encryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Public\n                                    Async\n                                getClientAuthToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(installationIdCryptService: InstallationIdCryptService, ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/ahoihelper.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationIdCryptService\n                                                  \n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encryptedInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encryptedInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            encryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptInstallationId(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getClientAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getClientAuthToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AhoiBankingTokenService } from './auth/bankingtokenauth';\nimport { AhoiClientTokenService } from './auth/clienttokenauth';\nimport { Token } from './auth/token';\nimport { InstallationIdCryptService } from './cryptservice/installationidcryptservice';\n\nexport class AhoiHelper {\n\n  constructor(private installationIdCryptService: InstallationIdCryptService,\n              private ahoiClientTokenService: AhoiClientTokenService,\n              private ahoiBankingTokenService: AhoiBankingTokenService) { }\n\n  public async encryptInstallationId(installationId: string): Promise {\n    if (this.installationIdCryptService) {\n      return this.installationIdCryptService.encryptInstallationId(installationId);\n    }\n    throw new Error('InstallationId can not be encrypted. No cryptKey is set in configuration');\n  }\n\n  public decryptInstallationId(encryptedInstallationId: string): string {\n    if (this.installationIdCryptService) {\n      return this.installationIdCryptService.decryptInstallationId(encryptedInstallationId);\n    }\n    throw new Error('InstallationId can not be encrypted. No cryptKey is set in configuration');\n  }\n\n  public async getBankingToken(installationId: string): Promise {\n    const encInstallationId = await this.encryptInstallationId(installationId);\n    return this.ahoiBankingTokenService.authenticate(encInstallationId);\n  }\n\n  public async getClientAuthToken(): Promise {\n    return this.ahoiClientTokenService.authenticate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiPublicKeyService.html":{"url":"classes/AhoiPublicKeyService.html","title":"class - AhoiPublicKeyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiPublicKeyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/ahoipublickey.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                headers\n                            \n                            \n                                    Static\n                                    Readonly\n                                PUBLIC_KEY_URI\n                            \n                            \n                                    Private\n                                publicKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getPublicKey\n                            \n                            \n                                    Private\n                                isExpired\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientFactory: FetchHttpFactory, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientFactory\n                                                  \n                                                        \n                                                                    FetchHttpFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     Headers\n\n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n                    \n                        \n                            Default value : new Headers({\n    accept: 'application/json',\n    'content-type': 'application/json;charset=UTF-8',\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PUBLIC_KEY_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PUBLIC_KEY_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/registration/keys'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            publicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        publicKey:     RegistrationPublicKey\n\n                    \n                \n                    \n                        \n                            Type :     RegistrationPublicKey\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getPublicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPublicKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExpired(key: RegistrationPublicKey)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\n\nimport { FetchAPI, RegistrationPublicKey } from 'ahoi-swagger-fetchclient';\nimport { FetchError, Headers, RequestInit } from 'node-fetch';\n\nimport { FetchHttpFactory } from '../httpclient/fetchhttpfactory';\n\nexport class AhoiPublicKeyService {\n\n  public static readonly PUBLIC_KEY_URI: string = '/registration/keys';\n  private static readonly headers: Headers = new Headers({\n    accept: 'application/json',\n    'content-type': 'application/json;charset=UTF-8',\n  });\n\n  private publicKey!: RegistrationPublicKey;\n  private readonly uri: string;\n\n  constructor(private readonly httpClientFactory: FetchHttpFactory, baseUrl: string) {\n    this.uri = `${baseUrl}${AhoiPublicKeyService.PUBLIC_KEY_URI}`;\n  }\n\n  public async getPublicKey(): Promise {\n    if (this.publicKey && !this.isExpired(this.publicKey)) {\n      return this.publicKey;\n    }\n\n    const options: RequestInit = {\n      headers: AhoiPublicKeyService.headers,\n      method: 'GET',\n      timeout: 5000, // 5 sec,\n      compress: true,\n    };\n\n    try {\n      const httpClient: FetchAPI = this.httpClientFactory.getHttpClient();\n      const response = await httpClient(this.uri, options);\n      if (response.ok) {\n        const regPublicKey: RegistrationPublicKey = await response.json();\n        this.publicKey = regPublicKey;\n        return regPublicKey;\n      }\n      const errorMsg = await response.text();\n      throw new FetchError(errorMsg, 'pubkey-error', '');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private isExpired(key: RegistrationPublicKey): boolean {\n    // add 1 min. as buffer to be safe if connection is slow\n    return new Date(key.validUntil).getTime() + 60 * 1000 \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiSessionKeyHeaderService.html":{"url":"classes/AhoiSessionKeyHeaderService.html","title":"class - AhoiSessionKeyHeaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiSessionKeyHeaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                SESSIONKEY_HEADER_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSessionKeyHeader\n                            \n                            \n                                    Private\n                                encryptSessionKey\n                            \n                            \n                                    Public\n                                    Async\n                                generateSessionKey\n                            \n                            \n                                    Public\n                                    Async\n                                getHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ahoiPublicKeyService: AhoiPublicKeyService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiPublicKeyService\n                                                  \n                                                        \n                                                                    AhoiPublicKeyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSIONKEY_HEADER_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SESSIONKEY_HEADER_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Ahoi-Session-Security'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createSessionKeyHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createSessionKeyHeader(publicKey: RegistrationPublicKey, encryptedSessionKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publicKey\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        encryptedSessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            encryptSessionKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptSessionKey(sessionKey: string, publicAhoiKey: RegistrationPublicKey)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        publicAhoiKey\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            generateSessionKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateSessionKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader(sessionKey?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegistrationPublicKey } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiPublicKeyService } from '../auth/ahoipublickey';\nimport { Base64Util } from '../lib/crypt/base64util';\nimport { CryptUtil } from '../lib/crypt/cryptutil';\nimport { RSACrypt } from '../lib/crypt/rsacrypt';\n\nexport class AhoiSessionKeyHeaderService {\n\n  public static readonly SESSIONKEY_HEADER_NAME = 'X-Ahoi-Session-Security';\n\n  constructor(private ahoiPublicKeyService: AhoiPublicKeyService) { }\n\n  public async getHeader(sessionKey?: string): Promise {\n    const publicKey: RegistrationPublicKey = await this.ahoiPublicKeyService.getPublicKey();\n    const useSessionKey = sessionKey ? sessionKey : await this.generateSessionKey();\n    const encryptedSessionKey: string = this.encryptSessionKey(useSessionKey, publicKey);\n    return this.createSessionKeyHeader(publicKey, encryptedSessionKey);\n  }\n\n  public async generateSessionKey(): Promise {\n    // 32 byte random string that is used to encrypt the installationid using AES 256 CBC\n    return CryptUtil.createRandomKey(32);\n  }\n\n  private encryptSessionKey(sessionKey: string, publicAhoiKey: RegistrationPublicKey): string {\n    const pubKey = publicAhoiKey.publicKey.value;\n    return RSACrypt.encryptWithRsaPublicKey(sessionKey, pubKey);\n  }\n\n  private createSessionKeyHeader(publicKey: RegistrationPublicKey,\n                                 encryptedSessionKey: string): string {\n    const sessionSecHeader = JSON.stringify({\n      publicKeyId: publicKey.keyId,\n      sessionKey: encryptedSessionKey,\n      keySpecification: 'AES', // AES/CBC/PKCS5Padding, SHA-256\n    });\n    return Base64Util.urlSafeBase64Encode(sessionSecHeader);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthHeaderFilter.html":{"url":"classes/AuthHeaderFilter.html","title":"class - AuthHeaderFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthHeaderFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/authheaderfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:22\n                            \n                        \n\n\n                \n                    \n                            Set the OAuth 2 authentication header (Bearer token). Depepending on called endpoint, the\nclient auth token or the banking token will be set.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from '../auth/token';\nimport { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class AuthHeaderFilter extends AbstractHttpFilter {\n\n  public async matches(httpContext: HttpContext): Promise {\n    // add bearer token from client authentication or user authentication (banking token) to all\n    // requests\n    return httpContext.isrequest;\n  }\n\n  /**\n   * Set the OAuth 2 authentication header (Bearer token). Depepending on called endpoint, the\n   * client auth token or the banking token will be set.\n   *\n   * @protected\n   * @param {HttpContext} httpContext\n   * @returns {Promise}\n   * @memberof AuthHeaderFilter\n   */\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    // FIXME: registration update (PUT) -> client or banking token?\n    let bearerToken: Token;\n    if (httpContext.url.endsWith('/registration') && this.usesMethod(httpContext, 'POST')\n      || httpContext.url.endsWith('/registration/keys')) {\n      bearerToken = await this.getAuthToken(httpContext);\n    } else {\n      bearerToken = await this.getBankingToken(httpContext);\n    }\n    this.setHeader(httpContext, 'Authorization', `Bearer ${bearerToken.getAccessToken()}`);\n    // debug(httpContext.options.headers);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64Util.html":{"url":"classes/Base64Util.html","title":"class - Base64Util","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64Util\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/base64util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                base64ToUrlSafeBase64\n                            \n                            \n                                    Static\n                                urlSafeBase64Decode\n                            \n                            \n                                    Static\n                                urlSafeBase64Encode\n                            \n                            \n                                    Static\n                                urlSafeBase64ToBase64\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            base64ToUrlSafeBase64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        base64ToUrlSafeBase64(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64Decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64Decode(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64Encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64Encode(text: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64ToBase64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64ToBase64(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Base64Util {\n\n  public static urlSafeBase64ToBase64(text: string): string {\n    return text.replace(/-/g, '+').replace(/_/g, '/');\n  }\n\n  public static base64ToUrlSafeBase64(text: string): string {\n    return text.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n\n  public static urlSafeBase64Encode(text: string | Buffer): string {\n    let base64Text: string;\n    if (text instanceof Buffer) {\n      base64Text = text.toString('base64');\n    } else {\n      base64Text = Buffer.from(text).toString('base64');\n    }\n    return Base64Util.base64ToUrlSafeBase64(base64Text);\n  }\n\n  public static urlSafeBase64Decode(text: string): Buffer {\n    if (!text) {\n      return Buffer.alloc(0);\n    }\n    return Buffer.from(Base64Util.urlSafeBase64ToBase64(text), 'base64');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicCache.html":{"url":"classes/BasicCache.html","title":"class - BasicCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxEntries: number, tidyFunction?: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxEntries\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tidyFunction\n                                                  \n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cleanInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheCleaner.html":{"url":"interfaces/CacheCleaner.html","title":"interface - CacheCleaner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheCleaner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [cacheMap: Map]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     void\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptUtil.html":{"url":"classes/CryptUtil.html","title":"class - CryptUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/cryptutil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                createRandomKey\n                            \n                            \n                                    Static\n                                generateNonce\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            createRandomKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRandomKey(keyLen: \"16\" | \"24\" | \"32\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        keyLen\n                                                        \n                                                                    \"16\" | \"24\" | \"32\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNonce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNonce(length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\n\nexport class CryptUtil {\n\n  private constructor() { }\n\n  public static async createRandomKey(keyLen: 16 | 24 | 32 = 32): Promise {\n    return new Promise((resolve, reject) => {\n      crypto.randomBytes(keyLen, (err: Error | null, buf: Buffer) => {\n        if (err || !buf) {\n          console.log(err);\n          reject(err);\n        } else {\n          resolve(buf.toString('base64'));\n        }\n      });\n    });\n  }\n\n  public static generateNonce(length: number = 32) {\n    return [...Array(length)].map(i => (~~(Math.random() * 36)).toString(36)).join('');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncInstallationIdCache.html":{"url":"classes/EncInstallationIdCache.html","title":"class - EncInstallationIdCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncInstallationIdCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cache/encinstallationidcache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DECRYPTED_INSTALLATIONID_CACHE_SIZE\n                            \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cache/encinstallationidcache.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DECRYPTED_INSTALLATIONID_CACHE_SIZE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DECRYPTED_INSTALLATIONID_CACHE_SIZE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/encinstallationidcache.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BasicCache } from '../lib/cache/basiccache';\n\nexport class EncInstallationIdCache extends BasicCache {\n\n  public static readonly DECRYPTED_INSTALLATIONID_CACHE_SIZE = 1000;\n\n  constructor() {\n    super(EncInstallationIdCache.DECRYPTED_INSTALLATIONID_CACHE_SIZE);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptInstallationIdFilter.html":{"url":"classes/EncryptInstallationIdFilter.html","title":"class - EncryptInstallationIdFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptInstallationIdFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                idCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                decryptInstallationId\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(installationIdCryptService: InstallationIdCryptService, ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService, useEncryption: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationIdCryptService\n                                                  \n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        useEncryption\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            idCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        idCache:     EncInstallationIdCache\n\n                    \n                \n                    \n                        \n                            Type :     EncInstallationIdCache\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:33\n                            \n                        \n\n\n                \n                    \n                            Decrypts installationid if it is available and encrypted. Encrypts installationid's that are\nrequested from AHOI Registration endpoint if encryption of installationid's is activated in\nconfiguration ({AhoiConfig.encryptInstallationId).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error, info } from 'console';\n\nimport { RegistrationResponse } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiBankingTokenService } from '../auth/bankingtokenauth';\nimport { AhoiClientTokenService } from '../auth/clienttokenauth';\nimport { EncInstallationIdCache } from '../cache/encinstallationidcache';\nimport { InstallationIdCryptService } from '../cryptservice/installationidcryptservice';\nimport { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class EncryptInstallationIdFilter extends AbstractHttpFilter {\n\n  private idCache: EncInstallationIdCache;\n\n  constructor(private installationIdCryptService: InstallationIdCryptService,\n              ahoiClientTokenService: AhoiClientTokenService,\n              ahoiBankingTokenService: AhoiBankingTokenService,\n              private useEncryption: boolean = true) {\n    super(ahoiClientTokenService, ahoiBankingTokenService);\n    this.idCache = new EncInstallationIdCache();\n  }\n\n  /**\n   * Decrypts installationid if it is available and encrypted. Encrypts installationid's that are\n   * requested from AHOI Registration endpoint if encryption of installationid's is activated in\n   * configuration ({AhoiConfig.encryptInstallationId).\n   *\n   * @param {HttpContext} httpContext\n   * @returns {Promise}\n   * @memberof InstallationIdCryptFilter\n   */\n  public async matches(httpContext: HttpContext): Promise {\n    if (httpContext.installationid\n      && httpContext.isrequest\n      || !httpContext.isrequest\n      && this.useEncryption\n      && httpContext.url.endsWith('/registration')\n      && this.usesMethod(httpContext, 'POST')) {\n      return true;\n    }\n    return false;\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    if (httpContext.installationid\n      && this.installationIdCryptService.isEncrypted(httpContext.installationid)) {\n      try {\n        httpContext.installationid = this.decryptInstallationId(httpContext.installationid);\n      } catch (e) {\n        error(e);\n        throw new Error('InstallationId is invalid and can not be decrypted');\n      }\n    }\n  }\n\n  protected async filterResponse(httpContext: HttpContext): Promise {\n    const response: RegistrationResponse = await httpContext.response.json();\n    if (response.installation) {\n      const encryptedInstallationId =\n        await this.installationIdCryptService.encryptInstallationId(response.installation);\n      this.idCache.set(encryptedInstallationId, response.installation);\n      return {\n        installation: encryptedInstallationId,\n      };\n    }\n    debug('Installationid is empty in filterResponse');\n    return null;\n  }\n\n  protected decryptInstallationId(encInstallationId: string): string {\n    let decInstallationId: string | undefined = this.idCache.get(encInstallationId);\n    if (!decInstallationId) {\n      try {\n        decInstallationId = this.installationIdCryptService.decryptInstallationId(encInstallationId);\n      } catch (e) {\n        error(e);\n        throw e instanceof Error ? e : new Error(e);\n      }\n      this.idCache.set(encInstallationId, decInstallationId);\n    }\n    return decInstallationId;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchHttpFactory.html":{"url":"classes/FetchHttpFactory.html","title":"class - FetchHttpFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchHttpFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts\n        \n\n            \n                Description\n            \n            \n                This class provides an fetch http client to send requests the AHOI API. Request parameter, header\nand data and the response from AHOI can be changed using filters FetchHttpFilter.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpRequestFilters\n                            \n                            \n                                    Private\n                                httpResponseFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                applyFilterAndExecuteRequest\n                            \n                            \n                                    Private\n                                    Async\n                                applyFilters\n                            \n                            \n                                    Public\n                                getHttpClient\n                            \n                            \n                                    Public\n                                setHttpFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpRequestFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpRequestFilters:     HttpFilter[]\n\n                    \n                \n                    \n                        \n                            Type :     HttpFilter[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpResponseFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpResponseFilters:     HttpFilter[]\n\n                    \n                \n                    \n                        \n                            Type :     HttpFilter[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            applyFilterAndExecuteRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilterAndExecuteRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            applyFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilters(httpContext: HttpContext, httpFilters: HttpFilter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpFilters\n                                                        \n                                                                    HttpFilter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHttpClient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHttpClient(installationId?: string, bankingToken?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:46\n                            \n                        \n\n\n                \n                    \n                            The generated AHOI API client takes as initialization parameters a configuration, a baseurl and\nan httpclient {FetchAPI}. This method returns a function as an implementation of the FetchAPI\nthat allows to change request to the AHOI API and the response using filters\nFetchHttpFilter.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bankingToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FetchAPI\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setHttpFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHttpFilter(httpFilters: HttpFilter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:31\n                            \n                        \n\n\n                \n                    \n                            Set http filters that will be applied to every request and response. The filters will be called\nin given order for requests and in reverse order for responses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpFilters\n                                                        \n                                                                    HttpFilter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error } from 'console';\n\nimport { FetchAPI } from 'ahoi-swagger-fetchclient';\nimport nodeFetch, { FetchError, RequestInit, Response } from 'node-fetch';\n\nimport { Token } from '../auth/token';\nimport { HttpContext, HttpFilter } from '../lib/httpfilter/httpfilter';\n\n/**\n * This class provides an fetch http client to send requests the AHOI API. Request parameter, header\n * and data and the response from AHOI can be changed using filters {@link FetchHttpFilter}.\n *\n * @export\n * @class FetchHttpFactory\n */\nexport class FetchHttpFactory {\n\n  private httpRequestFilters: HttpFilter[] = [];\n  // same as request filters but in reverse order\n  private httpResponseFilters: HttpFilter[] = [];\n\n  constructor() { }\n\n  /**\n   * Set http filters that will be applied to every request and response. The filters will be called\n   * in given order for requests and in reverse order for responses.\n   *\n   * @param {HttpFilter[]} httpFilters\n   * @memberof FetchHttpFactory\n   */\n  public setHttpFilter(httpFilters: HttpFilter[]): void {\n    this.httpRequestFilters = [...httpFilters];\n    this.httpResponseFilters = [...httpFilters].reverse();\n  }\n\n  /**\n   * The generated AHOI API client takes as initialization parameters a configuration, a baseurl and\n   * an httpclient {FetchAPI}. This method returns a function as an implementation of the FetchAPI\n   * that allows to change request to the AHOI API and the response using filters\n   * {@link FetchHttpFilter}.\n   *\n   * @param {string} [installationId='']\n   * @returns {FetchAPI}\n   * @memberof FetchHttpFactory\n   */\n  public getHttpClient(installationId?: string, bankingToken?: string): FetchAPI {\n    return async (url: string,\n                  options: RequestInit,\n                  installationid: string | undefined = installationId,\n                  bankingtoken: string | undefined = bankingToken): Promise => {\n\n      const httpContext: HttpContext = {\n        url,\n        installationid,\n        // default http options: timeout 5 sec and use compression if available\n        options: { compress: true, timeout: 5000, ...options },\n        data: new Map(),\n        isrequest: true,\n        bankingToken: bankingtoken ? new Token(bankingtoken) : undefined,\n      };\n\n      debug('get http client for %s', httpContext.url);\n      return this.applyFilterAndExecuteRequest(httpContext);\n    };\n  }\n\n  private async applyFilterAndExecuteRequest(httpContext: HttpContext): Promise {\n    // apply request filters, e.g. to set authentication header (Bearer token) or encrypted\n    // session key and encrypted installationid if encryption is needed\n    debug('apply filters request for %s', httpContext.url);\n    //\n    await this.applyFilters(httpContext, this.httpRequestFilters);\n\n    // debug(httpContext.options);\n    try {\n      // execute request using fetch http client\n      const response: Response = await nodeFetch(httpContext.url, httpContext.options);\n      if (response.ok) {\n        httpContext.response = response;\n      } else {\n        const errorMsg = await response.text();\n        throw new FetchError(errorMsg, 'ahoi-api-error', '');\n      }\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n\n      // debug(await httpContext.response.json());\n\n      // apply response filters (same as for request) e.g. to decrypt encrypted\n      // installationid\n    debug('Apply filters response for %s', httpContext.url);\n    await this.applyFilters({ ...httpContext, isrequest: false }, this.httpResponseFilters);\n    return httpContext.response;\n  }\n\n  private async applyFilters(httpContext: HttpContext, httpFilters: HttpFilter[]): Promise {\n    debug('Context is %s', httpContext.isrequest ? 'request' : 'response');\n    for await (const filter of httpFilters) {\n      debug('Apply filter %s for %s', filter.constructor.name, httpContext.url);\n      if (await filter.matches(httpContext)) {\n        debug('Before do filter %s for url %s', filter.constructor.name, httpContext.url);\n        await filter.doFilter(httpContext);\n        debug('After do filter %s for url %s', filter.constructor.name, httpContext.url);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpContext.html":{"url":"interfaces/HttpContext.html","title":"interface - HttpContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        authToken\n                                \n                                \n                                            Optional\n                                        bankingToken\n                                \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        installationid\n                                \n                                \n                                        isrequest\n                                \n                                \n                                        options\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authToken\n                                    \n                                \n                                \n                                    \n                                        authToken:     Token\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Token\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bankingToken\n                                    \n                                \n                                \n                                    \n                                        bankingToken:     Token\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Token\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        installationid\n                                    \n                                \n                                \n                                    \n                                        installationid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrequest\n                                    \n                                \n                                \n                                    \n                                        isrequest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     RequestInit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestInit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestInit } from 'node-fetch';\n\nimport { Token } from '../../auth/token';\n\nexport interface HttpFilter {\n  matches(httpContext: HttpContext): Promise;\n  doFilter(httpContext: HttpContext): Promise;\n}\n\nexport interface HttpContext {\n  url: string;\n  options: RequestInit;\n  isrequest: boolean;\n  data: Map;\n  installationid?: string;\n  response?: any;\n  authToken?: Token;\n  bankingToken?: Token;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpFilter.html":{"url":"interfaces/HttpFilter.html","title":"interface - HttpFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    doFilter\n                                \n                                \n                                    matches\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoFilter(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { RequestInit } from 'node-fetch';\n\nimport { Token } from '../../auth/token';\n\nexport interface HttpFilter {\n  matches(httpContext: HttpContext): Promise;\n  doFilter(httpContext: HttpContext): Promise;\n}\n\nexport interface HttpContext {\n  url: string;\n  options: RequestInit;\n  isrequest: boolean;\n  data: Map;\n  installationid?: string;\n  response?: any;\n  authToken?: Token;\n  bankingToken?: Token;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpRequestTimeoutFilter.html":{"url":"classes/HttpRequestTimeoutFilter.html","title":"class - HttpRequestTimeoutFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpRequestTimeoutFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class HttpRequestTimeoutFilter extends AbstractHttpFilter {\n\n  public async matches(httpContext: HttpContext): Promise {\n    // set timeout header if granting new bank access\n    return httpContext.url.endsWith('/accesses') && this.usesMethod(httpContext, 'POST');\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    // currently granting bank access in AHOI is an synchronous process that can take some time\n    // to complete as all account data will be fetched from the banking provider\n    httpContext.options.timeout = 60000; // 60 sec\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InstallationIdCryptService.html":{"url":"classes/InstallationIdCryptService.html","title":"class - InstallationIdCryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InstallationIdCryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                encryptInstallationId\n                            \n                            \n                                    Public\n                                isEncrypted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptKey: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptKey\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PREFIX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PREFIX:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'enc-'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encryptedInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encryptedInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            encryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptInstallationId(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEncrypted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEncrypted(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AESCrypt } from '../lib/crypt/aescrypt';\n\nexport class InstallationIdCryptService {\n\n  private static readonly PREFIX = 'enc-';\n\n  constructor(private cryptKey: string) { }\n\n  public async encryptInstallationId(installationId: string): Promise {\n    return InstallationIdCryptService.PREFIX +\n      await AESCrypt.encryptRandomIV(installationId, this.cryptKey);\n  }\n\n  public decryptInstallationId(encryptedInstallationId: string): string {\n    if (this.isEncrypted(encryptedInstallationId)) {\n      const idWithoutPrefix = encryptedInstallationId.substring(InstallationIdCryptService.PREFIX.length);\n      return AESCrypt.decryptRandomIV(idWithoutPrefix, this.cryptKey);\n    }\n    return encryptedInstallationId;\n  }\n\n  public isEncrypted(installationId: string): boolean {\n    return installationId.startsWith(InstallationIdCryptService.PREFIX);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RSACrypt.html":{"url":"classes/RSACrypt.html","title":"class - RSACrypt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RSACrypt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/rsacrypt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PEM_KEY_END\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PEM_KEY_START\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                encryptWithRsaPublicKey\n                            \n                            \n                                    Static\n                                keyToPEMKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PEM_KEY_END\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PEM_KEY_END:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-----END PUBLIC KEY-----'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PEM_KEY_START\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PEM_KEY_START:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-----BEGIN PUBLIC KEY-----'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encryptWithRsaPublicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptWithRsaPublicKey(text: string, key: string, padding: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        padding\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                constants.RSA_PKCS1_OAEP_PADDING\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            keyToPEMKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyToPEMKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as constants from 'constants';\nimport * as crypto from 'crypto';\n\nimport { Base64Util } from './base64util';\n\nexport class RSACrypt {\n\n  private static readonly PEM_KEY_START = '-----BEGIN PUBLIC KEY-----';\n  private static readonly PEM_KEY_END = '-----END PUBLIC KEY-----';\n\n  // Class has only static methods, instantiation should not be possible\n  private constructor() {}\n\n  public static encryptWithRsaPublicKey(text: string,\n                                        key: string,\n                                        padding: number = constants.RSA_PKCS1_OAEP_PADDING): string {\n    const pemKey = key.startsWith(RSACrypt.PEM_KEY_START) ? key : RSACrypt.keyToPEMKey(key);\n    return Base64Util.urlSafeBase64Encode(\n      crypto.publicEncrypt({ padding, key: pemKey }, Buffer.from(text, 'base64')),\n    );\n  }\n\n  public static keyToPEMKey(key: string): string {\n    const splitted = (Base64Util.urlSafeBase64ToBase64(key || '').match(/.{1,64}/g));\n    if (splitted) {\n      return `${RSACrypt.PEM_KEY_START}\\n${splitted.join('\\n')}\\n${this.PEM_KEY_END}`;\n    }\n    throw new Error('Unable to convert public key into PEM key. \\\n                        Given public key is null or too short.');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleCacheCleaner.html":{"url":"interfaces/SimpleCacheCleaner.html","title":"interface - SimpleCacheCleaner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleCacheCleaner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n            \n                Description\n            \n            \n                Simple function used to clean cache value for value. Function should return true, if value should\nremoved from cache.\nExample implementation:\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n *\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [value: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     boolean\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/token.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                EMPTY_TOKEN\n                            \n                            \n                                    Static\n                                    Readonly\n                                JWT_PROP_ENCRYPTION_DISABLED\n                            \n                            \n                                    Private\n                                tokendata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                    Public\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getClientId\n                            \n                            \n                                    Public\n                                getContextId\n                            \n                            \n                                    Public\n                                getExpiration\n                            \n                            \n                                    Public\n                                getHeader\n                            \n                            \n                                    Public\n                                getJti\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                isExpired\n                            \n                            \n                                    Public\n                                useEncryption\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accesstoken: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/token.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accesstoken\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ASSUMED_MAX_REQUEST_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            EMPTY_TOKEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EMPTY_TOKEN:     TokenData\n\n                    \n                \n                    \n                        \n                            Type :     TokenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            JWT_PROP_ENCRYPTION_DISABLED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JWT_PROP_ENCRYPTION_DISABLED:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ENC_DIS'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokendata\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokendata:     TokenData\n\n                    \n                \n                    \n                        \n                            Type :     TokenData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decode(accesstoken: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accesstoken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TokenData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccessToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getClientId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getClientId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getContextId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getContextId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getExpiration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getExpiration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getJti\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getJti()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExpired(assumedRequestTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        assumedRequestTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Token.ASSUMED_MAX_REQUEST_TIME\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        useEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\n\ninterface TokenData {\n  readonly accesstoken: string;\n  readonly clientid: string;\n  readonly contextid: string;\n  readonly jti: string;\n  readonly scope: string[];\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  public static readonly ASSUMED_MAX_REQUEST_TIME: number = 10; // seconds\n  public static readonly JWT_PROP_ENCRYPTION_DISABLED: string = 'ENC_DIS';\n\n  private static readonly EMPTY_TOKEN: TokenData = {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  };\n\n  private tokendata: TokenData;\n\n  constructor(accesstoken: string) {\n    this.tokendata = this.decode(accesstoken);\n  }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getClientId(): string {\n    return this.tokendata.clientid;\n  }\n\n  public getContextId(): string {\n    return this.tokendata.contextid;\n  }\n\n  public getJti(): string {\n    return this.tokendata.jti;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public useEncryption(): boolean {\n    return !this.tokendata.scope.includes(Token.JWT_PROP_ENCRYPTION_DISABLED);\n  }\n\n  public isExpired(assumedRequestTime: number = Token.ASSUMED_MAX_REQUEST_TIME): boolean {\n    return this.getExpiration() - assumedRequestTime \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenCache.html":{"url":"classes/TokenCache.html","title":"class - TokenCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cache/tokencache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CLEAN_INTERVAL\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_ENTRIES\n                            \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                cleanCache\n                            \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxEntries, cleanInterval: number)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cache/tokencache.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxEntries\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cleanInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CLEAN_INTERVAL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CLEAN_INTERVAL:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000 * 60 * 30\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_ENTRIES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAX_ENTRIES:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100000\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SimpleCacheCleaner\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from '../auth/token';\nimport { BasicCache, SimpleCacheCleaner } from '../lib/cache/basiccache';\n\nexport class TokenCache extends BasicCache {\n\n  private static readonly CLEAN_INTERVAL: number = 1000 * 60 * 30; // 30 min.\n  public static readonly MAX_ENTRIES = 100000;\n\n  constructor(maxEntries = TokenCache.MAX_ENTRIES,\n              cleanInterval: number = TokenCache.CLEAN_INTERVAL) {\n    super(maxEntries, TokenCache.cleanCache(), cleanInterval);\n  }\n\n  private static cleanCache(): SimpleCacheCleaner {\n    return (token: Token) => {\n      return token.isExpired();\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accesstoken\n                                \n                                \n                                        clientid\n                                \n                                \n                                        contextid\n                                \n                                \n                                        expires\n                                \n                                \n                                        header\n                                \n                                \n                                        jti\n                                \n                                \n                                        payload\n                                \n                                \n                                        scope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesstoken\n                                    \n                                \n                                \n                                    \n                                        accesstoken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientid\n                                    \n                                \n                                \n                                    \n                                        clientid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contextid\n                                    \n                                \n                                \n                                    \n                                        contextid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\n\ninterface TokenData {\n  readonly accesstoken: string;\n  readonly clientid: string;\n  readonly contextid: string;\n  readonly jti: string;\n  readonly scope: string[];\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  public static readonly ASSUMED_MAX_REQUEST_TIME: number = 10; // seconds\n  public static readonly JWT_PROP_ENCRYPTION_DISABLED: string = 'ENC_DIS';\n\n  private static readonly EMPTY_TOKEN: TokenData = {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  };\n\n  private tokendata: TokenData;\n\n  constructor(accesstoken: string) {\n    this.tokendata = this.decode(accesstoken);\n  }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getClientId(): string {\n    return this.tokendata.clientid;\n  }\n\n  public getContextId(): string {\n    return this.tokendata.contextid;\n  }\n\n  public getJti(): string {\n    return this.tokendata.jti;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public useEncryption(): boolean {\n    return !this.tokendata.scope.includes(Token.JWT_PROP_ENCRYPTION_DISABLED);\n  }\n\n  public isExpired(assumedRequestTime: number = Token.ASSUMED_MAX_REQUEST_TIME): boolean {\n    return this.getExpiration() - assumedRequestTime \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ahoi-swagger-fetchclient : https://github.com/sparkassen-hub/ahoi-swagger-fetchclient\n        \n            jsonwebtoken : ^8.3.0\n        \n            node-fetch : ^2.2.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Cipher   (src/.../aescrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/starfinanz/ahoi/lib/crypt/aescrypt.ts\n    \n        \n            \n                \n                    \n                        \n                        Cipher\n                    \n                \n                        \n                            \n                                 AES_CBC\n                            \n                        \n                        \n                            \n                                Value : aes-${strength}-cbc\n                            \n                        \n                        \n                            \n                                 AES_CTR\n                            \n                        \n                        \n                            \n                                Value : aes-${strength}-ctr\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : aes-256-cbc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAHOI API Node.js Client\n\n→ Zu GitHub\nAHOI - Open Banking API\nThe AHOI Open Banking API provides easy access to banks and payment service providers.\nThe API can be used to retrieve account and deposit account information, execute transfers,\ndetermine forecasts, and more.\nGet more information about the AHOI API here:\n\nAHOI Cookbook\nAHOI Explorer\nAHOI Demo-Account\n\nAHOI Node.js Client\nThis Node.js module provides easy access to banks via the AHOI Open Banking API. The client module is designed to be used within an existing Node.js application. It extends it with the feature  to get accesses to bank data such as account transactions or deposit data.\nTo simply try out the client or as a starting point for your own application, we recommend\nour demo application which uses this client: AHOI Node.js Appservice\nGetting Started\nPrerequisites\n\nNode.js in Version 10.0.0 oder höher. Die Installation ist hier beschrieben : Node.js download.\nEine Node.js-Anwendung, in die das Modul als Abhängigkeit eingebunden wird.\n\nInstall the node module\nnpm install --save git+ssh://git@github.com:sparkassen-hub/ahoi-nodejs-client.gitCreate an AHOI demo account\nGo to AHOI Demo-Account and register for a\ndemo account.\nGet bank account transactions in 5 steps\nTo get account transactions for an user you have to manage five steps:\n\nCreate a new user in AHOI (technically: retrieve an installationId)\nLet the user select a bank\nCreate bank access with PIN and username\n(Optional) Select one or more accounts (default is all)\nShow the transactions for the selected accounts\n\nQuickstart\nThe following code snippets show how to technical implement the steps from creating a user in AHOI\nto retrieving account transactions.\nA) Include the module in your code\n// Typescript\nimport { AhoiApiFactory } from 'ahoi-api-node';\n\n// JavaScript\nconst { AhoiApiFactory } = require('ahoi-api-node');B) Add the configuration to access the AHOI API\n// Configuration: see information below\nconst ahoiConfig = {\n  clientId: 'SBM_XXqaeX30T2D',\n  clientSecret: '2e066yXXXLxa3zn',\n  appSecretIv: 'mP3IdoOKxVzOQzX22IueXg',\n  appSecretKey: 'dGw6XXtcyryKqXeeHgqPTg',\n  cryptKey: 'ScL&aFPazDw6S#k3',\n  baseurl: 'https://banking-sandbox.starfinanz.de/ahoi/api/v2',\n};\n\nconst ahoiApi = new AhoiApiFactory(ahoiConfig);C) Create a new user in AHOI\n// Get an installationid (and store it in your user management system)\nconst registrationApi: RegistrationApi = await ahoiApi.getRegistrationApi();\nconst installationId: RegistrationResponse = await registrationApi.register();D) Let the use select a bank, get a list of banks before\n// Get a list of(banking) providers\nconst providerApi: ProviderApi = await ahoiApi.getProviderApi(installationId);\nconst providers: Provider[] = await providerApi.getProviders();E) Create bank access with PIN and username\nThe bank access is linked with the installationId\n// Grant banking access by a user\nconst accessApi: AccessApi = await ahoiApi.getAccessApi(installationId);\n// To grant banking access the user must provide the pin and username or customernumber. It differs\n// from bank to to bank which data additionally to the pin are needed.\nconst access: Access = {  \n                          type: 'BankAccess',\n                          providerId: provider[0].id,\n                          accessFields: {\n                                          USERNAME: username,\n                                          CUSTOMERNUMBER: customernumber,\n                                          PIN: pin,\n                                        },\n                        };\nconst allowedAccess: Access = await accessApi.postAccess(access);E) Select accounts.\nAs AHOI initially fetches all accounts from a bank access, the accounts not\nselected by user must be deleted from AHOI.\n// Delete banking accounts from AHOI or show as list\nconst accountApi: AccountApi = await ahoiApi.getAccountApi(installationId);\n// accessid comes from banking access granted before: Access#id\nconst accounts: Account[] = await accountApi.getAccounts(allowedAccess.id);\nawait accountApi.deleteAccount(allowedAccess.id, accounts[0].id);F) Show account transactions\n// Show transactions for a bank account\nconst accessApi: AccessApi = await ahoiApi.getAccessApi(Server.INSTALLATION_ID);\n        const transactions: Asset[] = accessApi.listAssets(accessId, accountId, 30);Configuration\nThe AHOI access data (clientId, clientSecret, appSecretIv, appSecretKey) can be found in your AHOI\n(demo) account.\n\nThe cryptKey is used to encrypt the installationId internally before it is stored e.g. in a user\nmangement system. This way it is ensured, that the installationId for an user is always stored\nencrypted.\nYou can choose any password as cryptKey, but the recommended length is 32 chars.\nTest it with your demo account\nTo get transactions for a bank account, you have to grant access before. But for sure you don't want\nto use your real bank access data.\nExactly for this AHOI has (technically) created a demo bank called Sandbank. After registration at\nAHOI you have automatically two demo accounts at this bank. You'll find your access\ndata (PIN and username) in your AHOI account.\nWhen testing the client you should select as bank the 'Sandbank'. To grant access to the bank use\nthe PIN and username from your AHOI account (see below).\n\nInstallationId\nAn installationId is needed to fetch account data for an user. In AHOI it is not linked with a user\nbut only with one or more accounts. Therefore the following procedure should be chosen:\n\nFetch installationId from AHOI\nSave installationId for an user e.g. within your user management\nAdd bank accesses to this installationId\nRetrieve transactions for an user using the installationId linked to the user\n\nAHOI API Documentation\n\nAHOI API Docs\nAHOI Cookbook\nAHOI Explorer\nAHOI Node.js Client\n\nBuild from source\n# Build\nnpm run build\n\n# Generate TS doc separate\nnpm run docLicense\nLicensed under MIT.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODO\n\n Certificate?\n Tests\n Cache: https://github.com/cayasso/cacheman?\n Debug Logging\n TSDoc\n Exception-Handling\n Retry if connection failed?\n configure cache size?\n return authtoken so it may be stored in user management system?\n Compress cache with Snappy (https://github.com/kesla/node-snappy) ?\n Write cache to disk: npm install level\n Auto generation of wrapper class?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
