var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AESCrypt.html",[0,0.24,1,2.11]],["body/classes/AESCrypt.html",[0,0.251,1,2.771,2,0.128,3,0.109,4,0.109,5,1.402,6,0.091,7,0.458,8,1.002,9,1.371,10,1.487,11,3.881,12,3.881,13,0.475,14,3.111,15,2.695,16,1.176,17,2.31,18,2.695,19,2.695,20,2.695,21,2.695,22,0.745,23,0.74,24,2.695,25,4.23,26,0.454,27,0.031,28,1.328,29,0.74,30,2.695,31,1.902,32,3.565,33,1.673,34,2.695,35,0.581,36,3.126,37,4.538,38,4.255,39,1.338,40,5.659,41,1.673,42,4.137,43,3.324,44,0.671,45,0.671,46,0.481,47,3.384,48,4.975,49,2.28,50,0.752,51,0.521,52,2.695,53,1.673,54,2.695,55,3.881,56,1.673,57,1.106,58,1.089,59,3.384,60,1.001,61,2.695,62,1.673,63,2.695,64,1.673,65,3.251,66,3.81,67,2.099,68,3.345,69,3.881,70,3.881,71,3.854,72,3.881,73,2.695,74,3.251,75,1.97,76,1.607,77,2.258,78,0.021,79,2.258,80,2.258,81,1.44,82,2.695,83,2.258,84,2.258,85,2.695,86,2.695,87,1.673,88,2.695,89,1.673,90,2.28,91,0.343,92,1.809,93,0.547,94,1.44,95,1.44,96,1.583,97,0.206,98,1.673,99,1.402,100,2.837,101,1.402,102,1.402,103,1.402,104,1.402,105,1.402,106,0.491,107,1.383,108,1.673,109,0.468,110,1.673,111,2.474,112,1.673,113,1.116,114,2.659,115,1.673,116,1.673,117,1.223,118,1.673,119,1.655,120,1.318,121,4.783,122,2.695,123,1.97,124,3.881,125,2.695,126,1.583,127,3.881,128,2.695,129,3.881,130,2.695,131,1.673,132,1.673,133,1.089,134,1.673,135,1.673,136,1.089,137,0.818,138,1.673,139,1.673,140,1.673,141,2.695,142,1.673,143,1.673,144,1.583,145,2.81,146,2.527,147,2.081,148,0.643,149,1.673,150,1.673,151,2.695,152,1.673,153,1.673,154,2.695,155,1.673,156,1.673,157,1.673,158,1.673,159,1.673,160,1.673,161,1.673,162,1.673,163,1.673,164,1.089,165,2.695,166,1.673,167,1.673,168,3.384,169,1.673,170,2.695,171,1.673,172,1.673,173,1.673,174,1.673,175,1.673,176,1.673,177,1.673,178,1.673,179,3.881,180,1.402,181,1.223,182,0.012]],["title/classes/AbstractAhoiApiFactory.html",[0,0.24,183,2.715]],["body/classes/AbstractAhoiApiFactory.html",[0,0.277,2,0.196,3,0.167,4,0.167,6,0.139,7,0.916,8,0.916,13,0.524,16,1.142,17,1.06,22,0.563,23,0.801,26,0.514,27,0.031,35,0.492,36,1.368,44,0.725,45,0.681,46,0.488,50,1.15,51,0.456,57,0.837,60,0.823,76,1.548,78,0.017,91,0.549,93,0.837,97,0.196,107,1.288,109,0.716,120,1.252,148,1.448,182,0.017,183,3.132,184,2.559,185,2.795,186,4.857,187,4.258,188,3.793,189,3.655,190,3.738,191,3.738,192,3.738,193,1.871,194,2.978,195,3.738,196,3.228,197,2.934,198,2.559,199,2.559,200,2.559,201,3.738,202,2.559,203,1.046,204,3.738,205,1.689,206,2.853,207,2.559,208,1.429,209,2.876,210,3.738,211,2.895,212,3.301,213,4.258,214,2.559,215,2.883,216,2.733,217,1.444,218,1.368,219,1.368,220,1.871,221,2.876,222,2.144,223,1.667,224,1.667,225,1.871,226,2.559,227,2.144,228,1.871,229,2.559,230,1.871,231,2.559,232,2.559,233,2.559,234,1.368,235,1.871,236,2.559,237,0.978,238,2.559,239,1.368,240,1.368,241,2.559,242,3.738,243,2.144,244,2.559,245,2.559,246,4.416,247,2.559,248,2.559,249,2.559,250,1.429,251,1.871,252,0.716,253,2.559,254,1.871,255,2.559,256,2.559,257,2.559,258,2.559,259,3.738,260,3.738,261,3.132,262,2.559,263,2.559,264,2.559,265,2.144,266,3.7,267,2.559,268,2.559,269,2.144,270,1.252,271,2.559,272,2.559,273,2.559,274,4.857,275,2.559,276,2.559,277,2.559,278,2.559,279,2.559,280,4.857,281,1.15,282,2.559,283,2.559,284,2.559,285,1.368,286,1.871,287,2.559,288,2.559,289,2.559,290,2.559,291,2.559,292,2.733,293,1.871,294,1.871,295,2.559,296,2.559]],["title/classes/AbstractAhoiAuthenticationService.html",[0,0.24,297,2.11]],["body/classes/AbstractAhoiAuthenticationService.html",[0,0.276,2,0.195,3,0.166,4,0.166,6,0.138,7,0.633,8,1.004,9,1.185,10,1.902,13,0.618,16,1.139,22,0.561,23,0.8,26,0.514,27,0.031,28,0.963,29,0.75,35,0.549,44,0.723,45,0.723,46,0.559,50,1.979,51,0.504,60,0.82,67,0.974,68,1.659,76,1.543,78,0.017,91,0.428,92,2.354,93,0.833,97,0.195,106,0.471,107,1.447,109,1.232,113,1.055,114,1.362,119,1.246,120,1.246,137,1.822,144,1.497,145,2.588,146,2.426,147,1.246,148,1.157,181,1.863,182,0.022,185,2.42,193,1.863,194,2.59,196,2.724,203,1.042,217,1.218,220,1.863,239,1.362,240,1.362,250,0.974,251,1.863,252,1.232,281,1.979,297,2.426,298,2.548,299,3.543,300,3.543,301,3.156,302,2.724,303,2.724,304,2.724,305,2.724,306,3.726,307,2.724,308,2.548,309,2.724,310,2.548,311,2.724,312,2.056,313,2.548,314,4.169,315,2.724,316,2.548,317,2.339,318,2.724,319,2.548,320,2.724,321,3.543,322,3.543,323,2.59,324,2.879,325,2.847,326,2.426,327,2.724,328,2.724,329,1.822,330,3.543,331,2.588,332,3.156,333,2.426,334,2.724,335,2.426,336,2.724,337,2.724,338,2.724,339,2.724,340,2.548,341,2.135,342,1.863,343,2.189,344,2.354,345,1.145,346,2.548,347,3.726,348,3.726,349,2.548,350,2.548,351,2.135,352,2.548,353,2.548,354,1.659,355,1.659,356,1.659,357,1.863,358,1.659,359,1.659,360,2.548,361,1.863,362,2.135,363,2.548,364,1.863,365,1.863,366,1.863,367,2.548,368,2.135,369,2.548,370,1.659,371,2.548,372,2.548,373,2.548,374,2.135,375,2.135,376,2.135,377,2.135,378,2.548,379,2.548,380,2.548,381,2.588,382,2.548,383,2.548,384,2.135,385,2.724,386,1.497,387,2.548]],["title/classes/AbstractHttpFilter.html",[0,0.24,388,1.904]],["body/classes/AbstractHttpFilter.html",[0,0.277,2,0.195,3,0.166,4,0.166,6,0.138,13,0.756,16,1.672,22,0.561,23,0.841,26,0.535,27,0.031,29,0.798,35,0.476,39,1.043,44,0.85,45,0.872,46,0.603,49,2.191,51,0.561,60,1.377,76,1.056,78,0.022,91,0.476,93,0.834,97,0.195,106,0.681,107,0.609,109,1.356,147,1.247,164,1.661,182,0.017,185,2.914,203,1.043,205,0.834,208,1.425,211,2.635,212,2.974,215,2.356,223,1.661,224,1.661,234,1.363,237,0.975,239,1.363,240,1.363,250,0.975,252,1.233,254,1.865,270,1.247,317,1.425,345,1.146,388,2.191,389,2.551,390,1.993,391,2.191,392,2.428,393,2.428,394,2.428,395,2.191,396,2.428,397,2.428,398,2.428,399,2.428,400,2.551,401,2.551,402,1.993,403,2.988,404,2.551,405,2.428,406,2.551,407,2.428,408,2.551,409,2.428,410,2.551,411,2.428,412,2.551,413,2.428,414,2.551,415,2.428,416,2.551,417,1.993,418,2.551,419,2.428,420,2.551,421,2.428,422,2.551,423,1.247,424,1.661,425,2.551,426,2.137,427,2.551,428,3.729,429,2.551,430,4.408,431,1.661,432,2.551,433,2.551,434,2.551,435,1.865,436,4.408,437,2.551,438,4.408,439,1.865,440,4.849,441,3.124,442,1.993,443,2.551,444,2.551,445,2.551,446,2.137,447,2.137]],["title/classes/AhoiBankingTokenService.html",[0,0.24,212,1.732]],["body/classes/AhoiBankingTokenService.html",[0,0.252,1,1.469,2,0.173,3,0.147,4,0.147,6,0.122,7,0.578,8,1.042,9,1.177,10,1.932,13,0.477,16,1.508,17,1.697,22,0.496,23,0.838,26,0.522,27,0.031,28,1.06,29,0.634,35,0.557,37,1.649,44,0.75,45,0.75,46,0.538,49,1.325,50,1.842,51,0.538,57,1.112,60,1.211,78,0.016,81,1.819,90,1.325,91,0.497,93,0.737,95,1.206,96,1.325,97,0.173,106,0.577,107,1.276,109,1.441,113,0.934,114,1.206,119,1.103,123,1.649,126,1.999,137,2.004,148,0.978,164,2.669,182,0.019,185,2.051,193,2.488,194,2.44,196,1.649,203,0.631,205,1.684,206,2.682,211,2.615,212,2.191,217,1.799,220,1.649,237,0.862,252,1.703,270,1.103,281,1.013,297,3.738,299,2.996,300,2.996,301,2.669,302,2.488,303,3.337,304,2.488,305,2.488,307,1.649,309,1.649,311,1.649,312,1.945,314,3.337,315,1.649,317,1.873,318,1.649,320,1.649,321,2.996,322,1.649,323,2.44,324,2.191,325,2.682,326,1.469,327,1.649,328,1.649,329,1.103,330,2.488,331,3.234,332,2.216,333,1.469,334,1.649,335,1.469,336,1.649,337,1.649,338,1.649,339,1.649,368,3.824,439,1.649,442,2.44,448,2.255,449,1.529,450,4.565,451,4.118,452,2.973,453,3.354,454,3.403,455,3.434,456,2.255,457,2.615,458,1.89,459,1.89,460,1.89,461,3.403,462,2.255,463,2.851,464,2.488,465,2.851,466,2.216,467,2.216,468,2.488,469,2.851,470,2.488,471,2.851,472,3.403,473,2.255,474,2.255,475,1.89,476,1.89,477,1.89,478,1.89,479,2.255,480,1.89,481,1.89,482,1.89,483,1.89,484,2.255,485,2.255,486,2.255,487,2.255,488,2.488,489,1.999,490,1.89,491,2.255,492,2.255,493,2.255,494,2.255,495,2.255,496,3.403,497,1.89,498,1.89,499,2.255,500,2.255,501,2.255,502,2.255,503,2.255,504,1.89,505,4.098,506,2.255,507,2.255,508,2.255,509,2.255,510,3.403,511,2.255,512,2.255,513,2.255,514,1.469,515,2.255,516,2.255]],["title/classes/AhoiClientTokenService.html",[0,0.24,211,1.585]],["body/classes/AhoiClientTokenService.html",[0,0.311,2,0.23,3,0.196,4,0.196,6,0.163,7,0.712,8,1.028,9,1.15,10,1.86,13,0.588,16,1.421,23,0.849,26,0.526,27,0.031,28,1.084,29,0.649,35,0.534,44,0.733,45,0.733,46,0.525,50,2.169,51,0.552,57,1.708,60,1.15,78,0.019,81,2.241,91,0.426,93,0.982,97,0.23,106,0.611,109,0.841,119,1.47,137,2.361,148,1.153,164,2.73,182,0.022,185,2.347,203,0.841,211,2.361,217,1.578,237,1.149,252,1.693,281,1.35,285,2.241,297,3.992,299,3.529,300,3.529,301,3.144,302,3.065,303,3.065,304,3.065,305,3.065,307,2.197,309,2.197,311,2.197,312,2.011,314,3.819,315,2.197,317,1.997,318,2.197,320,2.197,321,3.529,322,2.197,323,2.241,324,2.581,325,3.069,326,1.957,327,2.197,328,2.197,329,1.47,330,3.065,331,3.228,332,2.73,333,1.957,334,2.197,335,1.957,336,2.197,337,2.197,338,2.197,339,2.197,449,1.884,452,3.706,457,2.856,458,2.518,459,2.518,460,2.518,463,3.513,464,3.065,465,3.513,470,3.065,471,3.513,475,2.518,476,2.518,477,2.518,478,2.518,483,2.518,488,2.197,514,3.402,517,3.005,518,3.005,519,3.005,520,3.228,521,4.192,522,3.513,523,5.691,524,3.005,525,3.005,526,2.197,527,3.005]],["title/interfaces/AhoiConfig.html",[194,1.732,528,0.838]],["body/interfaces/AhoiConfig.html",[2,0.286,3,0.244,4,0.244,6,0.203,7,0.824,17,2.364,26,0.536,27,0.029,35,0.584,36,3.163,46,0.61,57,1.763,58,2.433,75,3.942,78,0.022,80,3.13,83,3.13,97,0.286,126,3.168,137,1.827,182,0.022,194,2.595,197,1.827,205,1.221,209,3.512,217,2.102,281,2.565,285,3.163,286,4.326,293,4.434,294,4.434,323,1.997,325,2.195,332,3.854,442,1.997,467,3.512,520,2.852,528,1.255,529,3.736,530,2.882,531,3.13,532,3.549,533,4.518,534,4.854,535,2.731,536,3.736,537,3.736,538,3.13,539,3.13,540,3.161,541,3.736,542,3.161,543,3.736,544,4.067,545,4.067,546,3.736,547,3.736,548,3.736,549,3.736,550,3.13,551,3.736,552,3.736,553,3.736,554,2.731,555,3.736,556,2.195,557,3.736,558,3.736,559,3.736,560,3.736,561,1.678,562,3.736,563,3.13,564,3.13,565,3.13,566,3.13,567,3.13]],["title/classes/AhoiHelper.html",[0,0.24,187,2.369]],["body/classes/AhoiHelper.html",[0,0.353,2,0.277,3,0.236,4,0.236,6,0.197,8,0.808,13,0.667,16,1.627,17,1.97,22,0.797,23,0.822,26,0.498,27,0.031,35,0.565,36,2.543,44,0.791,45,0.791,46,0.567,51,0.549,60,1.323,76,1.97,78,0.022,91,0.498,97,0.277,106,0.814,107,0.865,109,1.013,148,1.136,182,0.022,187,3.478,189,3.533,197,2.327,205,1.555,211,2.998,212,3.276,223,2.359,224,2.359,225,2.648,252,1.013,261,3.986,395,2.795,423,1.771,439,2.648,561,2.138,568,3.622,569,3.478,570,3.986,571,5.642,572,3.035,573,3.622,574,3.986,575,3.622,576,2.648,577,3.986,578,3.622,579,4.757,580,3.622,581,3.622,582,2.128,583,3.622,584,3.986,585,3.622,586,3.035,587,3.622,588,3.622]],["title/classes/AhoiPublicKeyService.html",[0,0.24,221,2.11]],["body/classes/AhoiPublicKeyService.html",[0,0.318,2,0.238,3,0.203,4,0.203,6,0.169,7,0.729,8,1.067,9,1.266,10,2.017,13,0.69,16,1.271,22,0.684,23,0.827,25,2.024,26,0.531,27,0.031,28,1.11,29,0.664,35,0.539,39,1.201,44,0.602,45,0.602,46,0.533,51,0.491,60,0.944,67,1.188,76,1.777,78,0.02,91,0.468,92,2.627,93,1.016,97,0.238,106,0.67,107,1.328,109,1.375,113,1.287,120,1.52,133,2.024,144,1.826,145,2.888,146,2.795,147,1.52,148,1.328,181,3.137,182,0.02,188,3.452,216,3.137,217,1.016,218,1.662,219,1.662,221,2.795,227,2.605,250,1.188,281,2.209,301,3.452,317,2.383,342,2.272,343,2.522,344,1.662,345,1.397,351,2.605,355,2.024,358,2.024,359,2.024,361,2.272,362,2.605,364,2.272,365,2.272,366,2.272,374,3.596,375,3.596,376,3.596,377,3.596,384,2.605,542,2.024,582,1.826,589,3.109,590,5.301,591,4.441,592,5.301,593,3.596,594,3.109,595,4.292,596,4.292,597,3.109,598,4.292,599,3.109,600,5.033,601,3.109,602,3.109,603,4.292,604,3.109,605,3.109,606,4.916,607,3.109,608,3.109,609,2.605,610,2.272,611,2.605,612,3.109,613,3.109,614,4.916,615,2.605,616,2.605,617,3.109,618,3.109,619,3.109,620,1.662,621,1.662]],["title/classes/AhoiSessionKeyHeaderService.html",[0,0.24,213,2.369]],["body/classes/AhoiSessionKeyHeaderService.html",[0,0.331,2,0.252,3,0.215,4,0.215,6,0.179,7,0.758,8,0.994,9,1.114,10,1.655,13,0.626,16,1.513,17,1.362,22,0.724,23,0.821,26,0.501,27,0.031,28,0.851,29,0.509,35,0.575,42,3.261,44,0.761,45,0.761,46,0.546,50,1.478,51,0.538,57,1.458,60,1.195,71,3.261,75,3.261,78,0.02,90,1.933,91,0.501,95,1.758,96,1.933,97,0.252,100,2.405,106,0.757,107,1.355,109,1.248,123,2.405,182,0.02,205,1.075,213,3.261,217,1.655,218,1.758,219,1.758,221,3.81,222,2.756,455,3.738,481,2.756,482,2.756,497,2.756,498,2.756,582,1.933,591,4.242,600,5.1,615,3.738,622,3.29,623,5.428,624,4.461,625,4.461,626,5.428,627,3.261,628,3.29,629,4.461,630,3.738,631,4.461,632,5.851,633,3.29,634,4.461,635,5.063,636,3.29,637,5.674,638,3.29,639,4.461,640,3.29,641,2.405,642,3.29,643,3.29,644,3.29,645,3.29,646,3.29,647,3.29,648,3.29,649,3.29,650,3.29,651,3.29,652,3.29,653,3.29,654,3.29,655,3.29,656,3.29,657,3.29]],["title/classes/AuthHeaderFilter.html",[0,0.24,228,2.369]],["body/classes/AuthHeaderFilter.html",[0,0.286,2,0.205,3,0.174,4,0.174,6,0.145,13,0.695,16,1.671,23,0.858,26,0.545,27,0.031,29,0.597,35,0.438,39,0.748,44,0.866,45,0.873,46,0.615,51,0.55,60,1.359,78,0.025,81,1.43,91,0.4,97,0.205,106,0.714,109,1.08,114,1.43,119,1.308,133,1.742,182,0.018,185,2.884,203,0.748,208,1.022,228,3.31,234,1.43,251,2.821,252,1.694,317,1.475,331,1.571,354,1.742,386,2.268,388,3.656,391,2.268,392,3.229,393,2.513,394,2.513,395,2.268,396,2.513,397,2.513,398,2.513,399,2.513,402,1.43,403,2.997,405,2.949,407,1.742,409,1.742,411,1.742,413,1.742,415,1.742,417,2.42,419,1.742,421,1.742,423,1.308,424,1.742,442,2.65,446,2.241,447,2.241,449,1.734,452,3.229,457,2.924,464,2.821,466,2.513,468,2.821,520,2.913,540,1.742,561,2.228,658,2.675,659,2.675,660,4.154,661,3.86,662,2.675,663,1.955,664,1.955,665,1.955,666,1.955,667,1.955,668,1.955,669,1.955,670,1.955,671,1.955,672,1.955,673,2.675,674,1.955,675,2.675,676,2.675,677,4.528,678,2.241,679,1.955,680,2.675,681,2.675,682,2.675,683,2.675]],["title/classes/Base64Util.html",[0,0.24,95,1.732]],["body/classes/Base64Util.html",[0,0.368,2,0.295,3,0.252,4,0.252,6,0.209,9,1.43,13,0.695,23,0.811,25,3.984,26,0.51,27,0.031,35,0.587,43,4.472,44,0.811,45,0.811,46,0.581,51,0.562,78,0.023,95,2.649,97,0.295,106,0.731,111,2.819,147,1.886,182,0.023,684,3.857,685,4.956,686,4.956,687,4.956,688,4.956,689,4.956,690,3.857,691,4.956,692,3.857,693,4.956,694,3.857,695,4.956,696,3.857,697,3.857,698,3.857,699,3.857,700,3.857,701,3.857,702,3.857,703,5.476,704,3.857,705,3.857,706,3.857,707,3.857,708,3.857]],["title/classes/BasicCache.html",[0,0.24,709,1.732]],["body/classes/BasicCache.html",[0,0.283,2,0.202,3,0.172,4,0.172,6,0.143,7,0.648,8,1.061,9,0.58,13,0.535,22,0.58,23,0.807,26,0.496,27,0.031,29,0.991,31,2.242,35,0.533,39,0.737,44,0.764,45,0.764,46,0.548,50,1.184,51,0.533,57,1.467,67,1.997,78,0.017,91,0.397,93,0.861,94,2.04,97,0.377,106,0.689,107,1.247,113,1.09,148,0.911,182,0.017,203,1.61,208,2.2,237,1.007,239,1.408,240,1.408,270,1.288,312,1.846,329,1.867,356,1.715,370,1.715,386,1.548,390,1.408,489,2.892,528,1.161,556,1.548,561,1.715,620,1.408,621,1.408,709,2.399,710,1.926,711,3.07,712,2.638,713,3.282,714,2.79,715,2.79,716,2.207,717,3.201,718,3.077,719,3.291,720,3.447,721,3.817,722,2.486,723,2.243,724,2.634,725,2.634,726,2.243,727,2.634,728,2.195,729,2.243,730,2.634,731,2.243,732,2.634,733,2.243,734,2.634,735,1.926,736,1.926,737,1.926,738,1.715,739,1.715,740,1.926,741,1.926,742,1.926,743,1.715,744,2.79,745,1.926,746,1.926,747,1.926,748,1.926,749,1.926,750,1.926,751,1.926,752,1.926,753,1.926,754,1.926,755,2.79,756,3.599,757,2.79,758,1.715,759,1.715,760,1.926,761,1.926,762,1.926,763,2.486,764,2.79,765,1.926,766,1.926,767,1.926,768,1.926,769,2.79,770,1.926,771,1.926,772,2.79,773,1.926,774,1.926,775,1.926,776,2.79,777,1.926,778,1.926]],["title/interfaces/CacheCleaner.html",[528,0.838,718,1.732]],["body/interfaces/CacheCleaner.html",[0,0.234,2,0.241,3,0.206,4,0.206,6,0.171,7,0.841,8,0.949,9,0.694,27,0.031,29,1.005,31,1.893,35,0.471,39,0.882,51,0.51,57,1.619,67,1.656,78,0.02,91,0.437,93,1.03,94,2.316,97,0.408,106,0.548,107,1.335,113,1.305,148,1.034,182,0.02,203,1.564,208,2.137,237,1.205,239,1.685,240,1.685,270,1.542,312,1.884,329,2.119,356,2.053,370,2.053,386,1.852,390,1.685,489,3.133,528,1.379,556,1.852,620,1.685,621,1.685,709,2.316,710,2.304,711,2.909,712,1.852,717,2.546,718,2.988,719,3.162,720,3.284,722,2.053,723,1.852,726,1.852,728,2.119,729,1.852,731,1.852,733,1.852,735,2.304,736,2.304,737,2.304,738,2.053,739,2.053,740,2.304,741,2.304,742,2.304,743,2.053,744,3.168,745,2.304,746,2.304,747,2.304,748,2.304,749,2.304,750,2.304,751,2.304,752,2.304,753,2.304,754,2.304,755,3.168,756,3.898,757,3.168,758,2.053,759,2.053,760,2.304,761,2.304,762,2.304,763,2.822,764,3.168,765,2.304,766,2.304,767,2.304,768,2.304,769,3.168,770,2.304,771,2.304,772,3.168,773,2.304,774,2.304,775,2.304,776,3.168,777,2.304,778,2.304,779,2.641,780,2.641]],["title/classes/CryptUtil.html",[0,0.24,96,1.904]],["body/classes/CryptUtil.html",[0,0.377,2,0.307,3,0.262,4,0.262,6,0.218,8,0.863,9,1.36,13,0.713,16,1.443,22,1.228,23,0.783,25,2.614,26,0.449,27,0.031,28,1.315,29,0.786,31,2.133,32,4.674,44,0.713,45,0.713,46,0.511,51,0.518,60,1.119,68,2.614,78,0.023,90,3.689,91,0.355,92,2.146,94,2.717,96,2.987,97,0.307,106,0.643,145,2.987,148,0.958,180,4.674,182,0.023,431,2.614,781,4.014,782,5.084,783,5.084,784,4.014,785,5.084,786,4.014,787,4.014,788,5.084,789,4.014,790,4.014,791,4.014,792,4.014,793,5.084,794,4.014,795,4.014,796,4.014,797,4.014,798,4.014,799,4.014]],["title/classes/EncInstallationIdCache.html",[0,0.24,800,2.369]],["body/classes/EncInstallationIdCache.html",[0,0.353,2,0.278,3,0.237,4,0.237,6,0.197,7,0.809,8,1.079,9,1.17,10,1.738,13,0.668,22,1.17,23,0.883,26,0.542,27,0.031,28,0.938,29,0.822,31,2.158,35,0.542,44,0.822,45,0.822,46,0.589,51,0.531,67,2.032,78,0.022,91,0.32,97,0.278,106,0.741,182,0.022,203,1.579,208,2.032,312,1.683,449,2.14,457,2.999,561,2.14,621,2.545,709,3.395,711,3.124,712,2.798,713,3.886,714,3.481,715,3.481,717,2.798,718,2.545,719,3.017,720,2.798,723,2.131,726,2.131,728,1.774,729,2.131,731,2.131,733,2.131,800,3.481,801,3.628,802,5.645,803,4.762,804,3.039,805,3.039,806,3.039,807,3.039,808,3.039,809,3.039,810,3.039,811,3.039,812,3.628]],["title/classes/EncryptInstallationIdFilter.html",[0,0.24,230,2.369]],["body/classes/EncryptInstallationIdFilter.html",[0,0.247,2,0.255,3,0.143,4,0.143,6,0.119,7,0.566,8,0.764,13,0.631,14,2.944,16,1.649,17,2.109,22,0.482,23,0.856,26,0.543,27,0.031,29,0.515,35,0.503,39,1.259,44,0.856,45,0.862,46,0.609,49,1.288,51,0.552,60,1.333,76,1.379,78,0.023,91,0.482,92,1.78,93,0.717,97,0.168,106,0.67,107,0.795,109,0.932,113,1.379,114,1.172,119,1.072,120,1.629,144,1.957,147,1.072,148,0.962,182,0.015,185,2.866,189,2.993,197,1.629,203,0.613,205,1.089,208,0.838,211,2.589,212,2.916,217,1.317,218,1.172,219,1.172,223,1.427,224,1.427,225,1.602,230,2.435,234,1.172,237,0.838,269,1.837,292,2.435,344,1.172,354,1.427,388,3.527,391,1.957,392,2.93,393,3.151,394,2.169,395,1.957,396,2.169,397,2.169,398,2.169,399,2.169,402,1.172,403,2.971,405,2.623,407,2.623,409,1.427,411,1.427,413,1.427,415,1.427,417,2.153,419,1.427,421,1.427,424,2.169,431,1.427,435,1.602,441,3.375,449,1.496,453,2.623,457,2.787,468,2.435,504,1.837,540,2.169,550,2.79,563,3.769,569,2.435,572,1.837,576,2.435,582,1.288,584,1.837,586,1.837,663,1.602,664,1.602,665,1.602,666,1.602,667,1.602,668,1.602,669,1.602,670,1.602,671,1.602,672,1.602,674,2.435,678,1.837,679,1.602,728,1.072,800,3.537,813,2.192,814,4.499,815,3.331,816,3.331,817,2.192,818,2.192,819,2.192,820,2.192,821,3.331,822,2.79,823,2.192,824,2.192,825,2.192,826,2.192,827,2.192,828,2.192,829,4.499,830,4.028,831,2.192,832,3.331,833,2.192,834,2.192,835,1.602,836,2.192,837,4.838,838,2.192,839,2.192,840,2.192]],["title/classes/FetchHttpFactory.html",[0,0.24,188,2.11]],["body/classes/FetchHttpFactory.html",[0,0.36,2,0.169,3,0.144,4,0.144,6,0.12,7,0.569,8,0.999,13,0.633,14,1.613,16,1.372,17,1.869,22,0.89,23,0.744,26,0.451,27,0.031,28,1.046,29,0.518,35,0.504,44,0.767,45,0.633,46,0.55,49,1.297,50,1.504,51,0.504,57,1.67,58,1.437,60,1.068,66,2.805,67,0.844,76,1.386,78,0.015,91,0.429,92,2.162,93,0.721,97,0.256,106,0.646,107,1.078,109,1.485,113,1.386,114,1.789,117,2.447,119,1.637,120,1.079,126,1.967,136,2.18,137,1.079,144,1.297,145,2.376,146,2.18,147,1.079,148,1.078,182,0.015,188,3.16,197,1.637,203,0.937,205,1.735,206,3.118,209,3.456,215,3.361,216,3.997,217,1.866,218,1.18,219,1.18,234,1.18,237,0.844,250,1.726,252,0.937,265,4.447,266,5.157,270,2.792,281,1.504,292,1.613,312,0.78,317,1.546,323,1.789,324,2.413,329,1.637,341,1.849,342,1.613,343,1.967,344,3.241,345,0.992,355,2.18,358,1.437,359,2.18,361,1.613,364,1.613,365,1.613,366,1.613,390,1.789,403,2.642,423,1.079,424,1.437,426,4.28,435,1.613,452,1.437,466,2.18,488,1.613,520,3.001,530,2.162,539,2.805,540,3.98,561,1.817,609,1.849,610,1.613,611,2.805,630,1.849,660,1.849,728,1.978,738,1.437,841,2.207,842,2.18,843,4.515,844,4.515,845,4.515,846,4.515,847,3.348,848,3.348,849,3.348,850,3.348,851,3.348,852,2.207,853,3.348,854,2.207,855,3.348,856,2.207,857,3.348,858,2.207,859,2.805,860,2.805,861,3.348,862,2.207,863,4.515,864,4.853,865,4.045,866,3.348,867,3.348,868,3.348,869,2.207,870,2.447,871,2.207,872,2.207,873,4.045,874,2.207,875,2.207,876,1.849,877,2.207,878,2.207,879,3.348,880,2.207,881,2.207,882,2.207,883,4.045,884,2.207,885,2.207,886,2.207,887,2.207]],["title/interfaces/HttpContext.html",[403,1.456,528,0.838]],["body/interfaces/HttpContext.html",[2,0.319,3,0.271,4,0.271,6,0.226,7,0.883,26,0.565,27,0.031,35,0.551,39,1.587,46,0.66,60,1.144,78,0.024,91,0.459,97,0.398,182,0.024,205,1.942,206,3.491,215,2.225,250,1.591,252,1.77,312,2.004,324,3.176,343,3.491,344,3.176,345,1.87,402,2.225,403,2.67,417,2.225,423,2.036,528,1.467,530,3.176,870,4.344,888,3.487,889,4.344]],["title/interfaces/HttpFilter.html",[215,1.732,528,0.838]],["body/interfaces/HttpFilter.html",[2,0.337,3,0.287,4,0.287,6,0.239,13,0.756,23,0.756,26,0.476,27,0.03,35,0.476,39,1.233,44,0.756,45,0.756,46,0.585,51,0.476,60,1.334,78,0.028,91,0.476,97,0.412,182,0.025,205,1.44,206,2.588,215,2.879,250,1.684,252,1.628,312,1.557,324,2.355,343,3.165,344,2.355,345,1.98,391,3.165,402,2.879,403,2.927,417,2.879,423,2.155,528,1.505,530,2.355,870,3.221,888,3.691,889,3.221,890,4.406,891,4.406]],["title/classes/HttpRequestTimeoutFilter.html",[0,0.24,235,2.369]],["body/classes/HttpRequestTimeoutFilter.html",[0,0.304,2,0.222,3,0.189,4,0.189,6,0.158,13,0.722,16,1.686,23,0.871,26,0.553,27,0.031,29,0.633,35,0.455,39,0.813,44,0.878,45,0.884,46,0.625,51,0.553,60,1.367,78,0.026,91,0.362,97,0.222,106,0.732,148,0.694,182,0.019,185,2.902,203,0.813,208,1.11,217,0.95,234,1.553,235,2.993,250,1.11,317,1.11,335,1.892,354,1.892,355,1.892,358,1.892,388,3.705,391,2.405,392,3.352,393,2.666,394,2.666,395,2.405,396,2.666,397,2.666,398,2.666,399,2.666,402,1.553,403,3.007,405,3.087,407,1.892,409,1.892,411,1.892,413,1.892,415,1.892,417,2.534,419,1.892,421,1.892,442,2.534,449,1.839,457,2.977,467,2.666,530,1.553,532,2.124,561,1.305,620,1.553,663,2.124,664,2.124,665,2.124,666,2.124,667,2.124,668,2.124,669,2.124,670,2.124,671,2.124,672,2.124,679,2.124,842,1.892,859,2.434,892,2.905,893,2.905,894,2.905,895,2.993,896,2.905,897,2.905,898,2.905,899,2.905,900,2.905,901,2.905,902,2.905]],["title/classes/InstallationIdCryptService.html",[0,0.24,189,1.904]],["body/classes/InstallationIdCryptService.html",[0,0.366,1,2.495,2,0.293,3,0.25,4,0.25,6,0.208,7,0.838,8,0.927,9,1.201,10,1.784,13,0.692,16,1.411,22,0.843,23,0.837,26,0.527,27,0.031,28,0.991,29,0.593,35,0.583,36,2.637,39,1.38,44,0.809,45,0.809,46,0.579,51,0.549,60,1.086,78,0.023,91,0.338,97,0.293,106,0.804,107,0.915,109,1.072,182,0.023,189,2.899,205,1.613,480,3.209,569,3.607,570,4.134,574,4.134,576,3.607,577,4.134,582,2.251,903,3.831,904,5.764,905,4.934,906,3.831,907,4.934,908,4.934,909,3.831,910,3.831,911,4.934,912,3.831,913,3.831,914,3.831,915,4.934,916,3.831,917,3.831,918,3.831,919,3.831,920,3.831]],["title/classes/RSACrypt.html",[0,0.24,641,2.369]],["body/classes/RSACrypt.html",[0,0.386,2,0.267,3,0.227,4,0.227,6,0.189,7,0.787,8,1.047,9,1.417,10,1.944,13,0.731,22,1.147,23,0.811,26,0.491,27,0.031,28,1.347,29,0.806,31,1.992,35,0.578,43,2.546,44,0.65,45,0.65,46,0.466,51,0.491,67,2.461,76,1.442,78,0.021,84,4.654,91,0.46,94,2.478,95,2.478,97,0.267,104,2.918,105,2.918,106,0.78,107,1.107,111,2.546,148,0.831,182,0.021,323,1.861,431,2.268,641,3.388,921,3.482,922,5.555,923,5.555,924,4.635,925,4.635,926,4.635,927,4.635,928,4.635,929,3.482,930,4.635,931,3.482,932,4.635,933,4.635,934,3.482,935,4.635,936,4.635,937,3.482,938,3.482,939,3.482,940,3.482,941,3.482,942,4.635,943,3.482,944,3.482,945,3.482,946,3.482,947,3.482,948,3.482,949,3.482]],["title/interfaces/SimpleCacheCleaner.html",[528,0.838,719,1.732]],["body/interfaces/SimpleCacheCleaner.html",[0,0.221,2,0.229,3,0.195,4,0.195,6,0.162,7,0.817,8,0.964,9,0.918,27,0.031,29,1.014,31,1.839,35,0.46,39,1.167,51,0.534,57,1.703,58,1.944,67,1.595,78,0.019,91,0.425,93,0.976,94,2.23,97,0.399,106,0.528,107,1.309,113,1.728,148,1.149,182,0.019,203,1.457,208,2.171,237,1.141,239,1.596,240,1.596,270,1.46,312,1.7,329,2.548,356,2.718,370,1.944,386,1.754,390,2.23,489,3.337,528,1.347,556,1.754,620,1.596,621,1.596,709,2.23,710,2.182,711,2.452,712,2.452,717,2.452,718,2.784,719,3.23,720,3.22,722,1.944,723,1.754,726,1.754,728,2.041,729,1.754,731,1.754,733,1.754,735,3.051,736,3.051,737,3.051,738,2.718,739,1.944,740,3.051,741,3.051,742,3.051,743,1.944,744,3.051,745,2.182,746,2.182,747,2.182,748,2.182,749,2.182,750,2.182,751,2.182,752,2.182,753,2.182,754,2.182,755,3.051,756,3.808,757,3.051,758,1.944,759,1.944,760,2.182,761,2.182,762,2.182,763,2.718,764,3.051,765,2.182,766,2.182,767,2.182,768,2.182,769,3.051,770,2.182,771,2.182,772,3.051,773,2.182,774,2.182,775,2.182,776,3.051,777,2.182,778,2.182,779,2.501,780,2.501]],["title/classes/Token.html",[0,0.24,252,0.907]],["body/classes/Token.html",[0,0.298,2,0.217,3,0.184,4,0.184,6,0.154,7,0.682,8,0.996,9,1.313,10,2.087,13,0.564,22,0.622,23,0.886,26,0.507,27,0.031,28,1.315,29,0.787,31,2.281,35,0.573,39,1.423,44,0.655,45,0.655,46,0.47,51,0.569,78,0.018,91,0.25,97,0.217,106,0.835,182,0.018,252,1.124,285,2.497,317,1.786,357,2.937,385,2.937,453,3.312,514,3.498,526,3.415,528,0.731,593,3.366,627,3.718,950,2.37,951,4.261,952,4.261,953,4.261,954,4.52,955,4.017,956,4.261,957,4.261,958,4.261,959,4.261,960,4.261,961,4.261,962,3.366,963,4.017,964,2.829,965,3.914,966,3.914,967,3.914,968,3.914,969,2.829,970,3.366,971,2.829,972,2.829,973,2.829,974,2.829,975,2.829,976,2.829,977,2.829,978,2.829,979,2.829,980,2.829,981,3.366,982,2.829,983,3.366,984,3.366,985,2.829,986,2.37,987,2.068,988,2.37,989,2.37,990,2.37,991,2.37,992,2.37,993,2.37,994,2.37,995,2.37,996,2.37,997,2.37,998,2.37,999,2.37]],["title/classes/TokenCache.html",[0,0.24,451,2.369]],["body/classes/TokenCache.html",[0,0.324,2,0.244,3,0.208,4,0.208,6,0.173,7,0.741,8,1.096,9,1.349,10,1.894,13,0.612,22,0.7,23,0.878,26,0.541,27,0.031,28,1.128,29,0.828,31,2.37,35,0.524,44,0.813,45,0.813,46,0.582,51,0.541,67,1.902,78,0.02,91,0.385,97,0.244,106,0.709,182,0.02,203,1.498,208,1.902,252,1.392,312,1.541,423,1.557,449,1.96,451,3.189,457,2.901,490,2.667,561,1.96,616,2.667,620,2.332,621,2.332,709,3.314,711,2.924,712,3.404,713,3.638,714,3.189,715,3.189,716,3.655,717,2.563,718,2.332,719,3.171,720,3.404,722,2.073,723,1.87,726,1.87,728,1.557,729,1.87,731,1.87,733,1.87,743,3.241,804,2.667,805,2.667,806,2.667,807,2.667,808,2.667,809,2.667,810,2.667,811,2.667,1000,3.183,1001,5.354,1002,5.354,1003,4.362,1004,3.183,1005,4.362,1006,3.183,1007,3.183,1008,3.183,1009,3.183,1010,3.183]],["title/interfaces/TokenData.html",[528,0.838,954,2.369]],["body/interfaces/TokenData.html",[0,0.262,2,0.271,3,0.231,4,0.231,6,0.192,7,0.795,8,0.795,9,1.155,10,2.083,26,0.547,27,0.031,31,2.284,35,0.585,39,1.31,51,0.553,78,0.021,91,0.312,97,0.271,106,0.806,182,0.021,252,0.989,285,3.108,317,2.222,357,2.585,385,2.585,453,2.303,514,3.786,526,4.25,528,1.211,627,2.585,950,2.963,951,2.963,952,2.963,953,2.963,954,4.25,956,2.963,957,2.963,958,2.963,959,2.963,960,2.963,961,2.963,962,2.963,965,4.871,966,4.871,967,4.871,968,4.871,970,2.963,981,2.963,983,2.963,984,2.963,986,2.963,987,2.585,988,2.963,989,2.963,990,2.963,991,2.963,992,2.963,993,2.963,994,2.963,995,2.963,996,2.963,997,2.963,998,2.963,999,2.963]],["title/dependencies.html",[1011,2.71,1012,3.264]],["body/dependencies.html",[27,0.03,78,0.027,182,0.027,217,1.645,218,3.117,219,2.69,250,1.924,345,2.262,987,3.68,1012,4.217,1013,5.034,1014,4.217,1015,5.034,1016,5.034,1017,5.034,1018,5.034,1019,5.034]],["title/miscellaneous/enumerations.html",[1020,2.27,1021,3.264]],["body/miscellaneous/enumerations.html",[5,4.162,6,0.27,27,0.029,28,1.284,29,0.947,37,4.23,42,4.476,65,4.848,71,3.631,78,0.026,99,4.162,100,4.23,101,4.162,102,4.162,182,0.026,1020,4.162,1021,4.162,1022,4.967]],["title/index.html",[6,0.147,381,1.592,1023,1.765]],["body/index.html",[3,0.147,17,1.407,26,0.199,27,0.03,28,0.582,36,2.188,46,0.226,57,1.798,68,1.466,74,3.821,78,0.016,81,3.3,90,1.322,91,0.199,103,1.886,107,1.441,109,1.605,117,2.992,120,1.101,126,1.996,133,2.213,136,1.466,137,1.662,148,0.977,182,0.016,194,1.203,197,1.662,205,1.931,209,3.796,217,2.131,243,1.886,250,1.565,281,1.011,285,1.816,286,2.484,293,2.484,294,2.484,325,1.322,326,1.466,333,1.466,345,1.527,381,1.996,390,1.203,442,3.448,449,1.011,466,1.466,467,4.088,469,4.807,470,2.484,520,3.139,522,1.886,530,2.856,531,4.312,532,4.716,533,3.821,535,2.484,538,4.609,544,3.43,554,2.992,556,1.322,564,1.886,566,2.847,567,1.886,610,1.645,674,1.645,739,1.466,758,2.666,763,2.213,822,1.886,835,2.992,842,3.48,860,1.886,876,1.886,895,3.578,1014,1.886,1023,1.466,1024,5.63,1025,2.251,1026,2.251,1027,4.094,1028,3.398,1029,2.251,1030,4.56,1031,3.398,1032,4.094,1033,2.251,1034,2.251,1035,2.251,1036,2.251,1037,3.398,1038,3.398,1039,5.63,1040,3.578,1041,2.251,1042,2.251,1043,3.398,1044,2.251,1045,2.251,1046,2.251,1047,1.886,1048,2.251,1049,2.251,1050,2.251,1051,2.251,1052,2.251,1053,2.251,1054,2.251,1055,3.398,1056,2.251,1057,2.251,1058,2.251,1059,2.251,1060,2.251,1061,2.251,1062,2.251,1063,2.251,1064,2.251,1065,2.251,1066,2.251,1067,3.43,1068,3.398,1069,2.251,1070,2.251,1071,2.251,1072,2.251,1073,4.094,1074,3.43,1075,2.251,1076,4.094,1077,5.343,1078,5.343,1079,3.398,1080,4.895,1081,2.251,1082,2.847,1083,3.398,1084,2.251,1085,1.886,1086,3.398,1087,2.251,1088,2.251,1089,2.251,1090,3.398,1091,2.251,1092,2.251,1093,2.251,1094,2.251,1095,2.251,1096,2.251,1097,2.251,1098,2.847,1099,3.398,1100,2.251,1101,2.251,1102,2.251,1103,3.398,1104,2.251,1105,2.251,1106,4.56,1107,2.251,1108,4.094,1109,2.251,1110,2.251,1111,2.251,1112,2.251,1113,2.251,1114,2.251,1115,2.251,1116,3.398,1117,2.251,1118,2.251,1119,2.251,1120,2.251,1121,2.251,1122,2.251,1123,2.251,1124,2.251,1125,2.251,1126,2.251,1127,2.251,1128,2.251,1129,2.251,1130,2.251,1131,2.251,1132,2.251,1133,2.251,1134,2.251,1135,2.251,1136,2.251,1137,2.251,1138,2.251,1139,2.251,1140,2.251,1141,3.398,1142,2.251,1143,2.251,1144,2.251,1145,2.251,1146,2.251,1147,2.251,1148,1.886,1149,3.398,1150,4.094,1151,3.398,1152,2.251,1153,2.251,1154,2.251,1155,1.645,1156,2.251,1157,1.886]],["title/license.html",[381,1.592,1023,1.765,1155,1.981]],["body/license.html",[4,0.281,27,0.024,57,1.738,78,0.024,79,3.614,182,0.024,254,4.214,331,2.534,542,2.809,565,4.455,842,2.809,895,3.153,1047,3.614,1082,3.614,1085,4.829,1148,3.614,1155,3.153,1157,3.614,1158,5.764,1159,4.313,1160,4.313,1161,4.313,1162,5.317,1163,4.313,1164,5.317,1165,4.313,1166,4.313,1167,4.313,1168,5.317,1169,4.313,1170,6.017,1171,6.492,1172,4.313,1173,5.317,1174,4.313,1175,4.313,1176,4.313,1177,4.313,1178,4.313,1179,4.313,1180,4.313,1181,4.313,1182,4.313,1183,4.313,1184,4.313,1185,4.313,1186,5.317,1187,5.317,1188,4.313,1189,4.313,1190,5.317,1191,4.313,1192,4.313,1193,4.313,1194,4.313,1195,4.313,1196,4.313,1197,4.313,1198,4.313,1199,4.313,1200,4.313,1201,4.313,1202,4.313,1203,4.313,1204,4.313,1205,4.313,1206,4.313,1207,4.313,1208,4.313,1209,4.313,1210,4.313]],["title/modules.html",[1040,3.228]],["body/modules.html",[27,0.027,78,0.027,182,0.027,1040,3.833]],["title/overview.html",[1211,3.7]],["body/overview.html",[0,0.385,27,0.027,78,0.027,182,0.027,528,1.344,1211,4.353,1212,5.196,1213,5.196]],["title/todo.html",[381,1.592,1023,1.765,1214,2.27]],["body/todo.html",[0,0.358,27,0.028,51,0.427,77,4.046,78,0.026,81,2.581,136,3.145,182,0.026,197,2.362,237,1.846,359,3.145,489,3.672,535,3.53,542,3.145,545,4.046,554,3.53,759,3.145,835,3.53,889,3.53,1067,4.046,1074,4.046,1098,4.046,1214,4.046,1215,4.829,1216,4.829,1217,4.829,1218,4.829,1219,4.829,1220,4.829,1221,5.692,1222,4.829,1223,4.829,1224,4.829,1225,4.829,1226,4.829,1227,4.829]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["0",{"_index":385,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["1",{"_index":384,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["1.5.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":357,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["10.0.0",{"_index":1052,"title":{},"body":{"index.html":{}}}],["1000",{"_index":621,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["10000",{"_index":356,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["100000",{"_index":1005,"title":{},"body":{"classes/TokenCache.html":{}}}],["128",{"_index":69,"title":{},"body":{"classes/AESCrypt.html":{}}}],["16",{"_index":32,"title":{},"body":{"classes/AESCrypt.html":{},"classes/CryptUtil.html":{}}}],["192",{"_index":70,"title":{},"body":{"classes/AESCrypt.html":{}}}],["2",{"_index":386,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["2.0",{"_index":465,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["2.2.0",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":429,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["23",{"_index":1212,"title":{},"body":{"overview.html":{}}}],["24",{"_index":180,"title":{},"body":{"classes/AESCrypt.html":{},"classes/CryptUtil.html":{}}}],["256",{"_index":71,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["2e066yxxxlxa3zn",{"_index":1092,"title":{},"body":{"index.html":{}}}],["30",{"_index":743,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["30);configur",{"_index":1128,"title":{},"body":{"index.html":{}}}],["32",{"_index":90,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{},"index.html":{}}}],["36)).tostring(36)).join",{"_index":799,"title":{},"body":{"classes/CryptUtil.html":{}}}],["5",{"_index":610,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["5000",{"_index":609,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["6",{"_index":1213,"title":{},"body":{"overview.html":{}}}],["60",{"_index":620,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["60000",{"_index":902,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["8",{"_index":181,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["8.3.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["_').replac",{"_index":702,"title":{},"body":{"classes/Base64Util.html":{}}}],["abhängigkeit",{"_index":1064,"title":{},"body":{"index.html":{}}}],["abov",{"_index":1185,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":239,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["abstractahoiapifactori",{"_index":183,"title":{"classes/AbstractAhoiApiFactory.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["abstractahoiauthenticationservic",{"_index":297,"title":{"classes/AbstractAhoiAuthenticationService.html":{}},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:10",{"_index":459,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:11",{"_index":458,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:13",{"_index":460,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:21",{"_index":475,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:44",{"_index":478,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:52",{"_index":476,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractahoiauthenticationservice:78",{"_index":477,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstractauth",{"_index":483,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["abstracthttpfilt",{"_index":388,"title":{"classes/AbstractHttpFilter.html":{}},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:15",{"_index":670,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:19",{"_index":663,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:35",{"_index":664,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:37",{"_index":665,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:39",{"_index":672,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:46",{"_index":668,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:51",{"_index":671,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:59",{"_index":666,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:66",{"_index":667,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["abstracthttpfilter:78",{"_index":669,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["accept",{"_index":374,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["access",{"_index":467,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["access#id",{"_index":1120,"title":{},"body":{"index.html":{}}}],["accessapi",{"_index":1106,"title":{},"body":{"index.html":{}}}],["accessapi.listassets(accessid",{"_index":1126,"title":{},"body":{"index.html":{}}}],["accessapi.postaccess(access);",{"_index":1115,"title":{},"body":{"index.html":{}}}],["accessfield",{"_index":1113,"title":{},"body":{"index.html":{}}}],["accessid",{"_index":1118,"title":{},"body":{"index.html":{}}}],["accesstoken",{"_index":514,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["accesstoken.useencrypt",{"_index":515,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["account",{"_index":532,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["accountapi",{"_index":1116,"title":{},"body":{"index.html":{}}}],["accountapi.deleteaccount(allowedaccess.id",{"_index":1122,"title":{},"body":{"index.html":{}}}],["accountapi.getaccounts(allowedaccess.id",{"_index":1121,"title":{},"body":{"index.html":{}}}],["accountid",{"_index":1127,"title":{},"body":{"index.html":{}}}],["accounts[0].id);f",{"_index":1123,"title":{},"body":{"index.html":{}}}],["action",{"_index":1206,"title":{},"body":{"license.html":{}}}],["activ",{"_index":550,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["add",{"_index":133,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"index.html":{}}}],["addition",{"_index":1109,"title":{},"body":{"index.html":{}}}],["addiv",{"_index":55,"title":{},"body":{"classes/AESCrypt.html":{}}}],["addiv=fals",{"_index":118,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ae",{"_index":42,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["aes/cbc/pkcs5pad",{"_index":655,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["aes_cbc",{"_index":99,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["aes_ctr",{"_index":101,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["aescrypt",{"_index":1,"title":{"classes/AESCrypt.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/InstallationIdCryptService.html":{}}}],["aescrypt.decrypt(enctext",{"_index":149,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.decryptrandomiv(idwithoutprefix",{"_index":919,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["aescrypt.default_iv",{"_index":59,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.encrypt(text",{"_index":112,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.encrypt(xauthhead",{"_index":507,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["aescrypt.encryptrandomiv(installationid",{"_index":914,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["aescrypt.getencryptionstrength(cryptkey).tostr",{"_index":125,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.iv_length",{"_index":154,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.ivtobuffer(iv",{"_index":122,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aescrypt.keytobuffer(cryptkey",{"_index":130,"title":{},"body":{"classes/AESCrypt.html":{}}}],["aeskeyleninbyt",{"_index":124,"title":{},"body":{"classes/AESCrypt.html":{}}}],["against",{"_index":463,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["ahoi",{"_index":217,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"dependencies.html":{},"index.html":{}}}],["ahoi/api/v2",{"_index":338,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["ahoiapi",{"_index":1096,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccessapi(installationid",{"_index":1107,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccessapi(server.installation_id",{"_index":1124,"title":{},"body":{"index.html":{}}}],["ahoiapi.getaccountapi(installationid",{"_index":1117,"title":{},"body":{"index.html":{}}}],["ahoiapi.getproviderapi(installationid",{"_index":1104,"title":{},"body":{"index.html":{}}}],["ahoiapi.getregistrationapi",{"_index":1100,"title":{},"body":{"index.html":{}}}],["ahoiapifactori",{"_index":1086,"title":{},"body":{"index.html":{}}}],["ahoiapifactory(ahoiconfig);c",{"_index":1097,"title":{},"body":{"index.html":{}}}],["ahoiauthenticationservic",{"_index":380,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["ahoibankingtokenservic",{"_index":212,"title":{"classes/AhoiBankingTokenService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ahoibankingtokenservice(config",{"_index":249,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiclienttokenservic",{"_index":211,"title":{"classes/AhoiClientTokenService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ahoiclienttokenservice(config",{"_index":248,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiclienttokenservice.authent",{"_index":257,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoiconfig",{"_index":194,"title":{"interfaces/AhoiConfig.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["ahoiconfig.encryptinstallationid",{"_index":821,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["ahoiconfigur",{"_index":186,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoihelp",{"_index":187,"title":{"classes/AhoiHelper.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{}}}],["ahoihelper(this.installationidcryptservic",{"_index":264,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoipublickeyservic",{"_index":221,"title":{"classes/AhoiPublicKeyService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["ahoipublickeyservice(this.fetchhttpfactori",{"_index":245,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["ahoipublickeyservice.head",{"_index":608,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["ahoisessionkeyheaderservic",{"_index":213,"title":{"classes/AhoiSessionKeyHeaderService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["ahoisessionkeyheaderservice(ahoipublickeyservic",{"_index":247,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["al",{"_index":1063,"title":{},"body":{"index.html":{}}}],["allow",{"_index":66,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{}}}],["allowedaccess",{"_index":1114,"title":{},"body":{"index.html":{}}}],["alway",{"_index":103,"title":{},"body":{"classes/AESCrypt.html":{},"index.html":{}}}],["and/or",{"_index":1179,"title":{},"body":{"license.html":{}}}],["anwendung",{"_index":1061,"title":{},"body":{"index.html":{}}}],["api",{"_index":209,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["api(this.ahoiconfigur",{"_index":271,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["appli",{"_index":863,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applic",{"_index":544,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["application/json",{"_index":375,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["application/json;charset=utf",{"_index":377,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["applyfilt",{"_index":848,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilterandexecuterequest",{"_index":847,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilterandexecuterequest(httpcontext",{"_index":853,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["applyfilters(httpcontext",{"_index":855,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["appsecretiv",{"_index":294,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["appsecretkey",{"_index":293,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["appservic",{"_index":1049,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1210,"title":{},"body":{"license.html":{}}}],["array(length)].map(i",{"_index":797,"title":{},"body":{"classes/CryptUtil.html":{}}}],["asset",{"_index":1125,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1172,"title":{},"body":{"license.html":{}}}],["assumed_max_request_tim",{"_index":951,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["assumedrequesttim",{"_index":983,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["async",{"_index":16,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["auth",{"_index":251,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{}}}],["auth/ahoipublickey",{"_index":222,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["auth/bankingtokenauth",{"_index":223,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["auth/clienttokenauth",{"_index":224,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["auth/token",{"_index":423,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/TokenCache.html":{}}}],["auth/v1",{"_index":336,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth/v1/oauth/token",{"_index":309,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth_bankingtoken_head",{"_index":450,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["auth_credentials_paramet",{"_index":299,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["auth_uri",{"_index":300,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["authent",{"_index":452,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["authenticate(installationid",{"_index":461,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["authhead",{"_index":368,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["authheaderfilt",{"_index":228,"title":{"classes/AuthHeaderFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AuthHeaderFilter.html":{}}}],["authheaderfilter(ahoiclienttokenservic",{"_index":277,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["authheaders.set(ahoibankingtokenservice.auth_bankingtoken_head",{"_index":511,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["author",{"_index":331,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"license.html":{}}}],["authtoken",{"_index":889,"title":{},"body":{"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"todo.html":{}}}],["auto",{"_index":1226,"title":{},"body":{"todo.html":{}}}],["automat",{"_index":564,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["avail",{"_index":292,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["await",{"_index":109,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["bank",{"_index":442,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["bankaccess",{"_index":1110,"title":{},"body":{"index.html":{}}}],["bankingtoken",{"_index":206,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["base",{"_index":330,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["base64",{"_index":111,"title":{},"body":{"classes/AESCrypt.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["base64text",{"_index":703,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64tourlsafebase64",{"_index":685,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64tourlsafebase64(text",{"_index":689,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64util",{"_index":95,"title":{"classes/Base64Util.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["base64util.base64tourlsafebase64(base64text",{"_index":706,"title":{},"body":{"classes/Base64Util.html":{}}}],["base64util.base64tourlsafebase64(encxauthhead",{"_index":512,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64decode(iv",{"_index":174,"title":{},"body":{"classes/AESCrypt.html":{}}}],["base64util.urlsafebase64decode(this.config.appsecretkey",{"_index":508,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64encod",{"_index":939,"title":{},"body":{"classes/RSACrypt.html":{}}}],["base64util.urlsafebase64encode(sessionsechead",{"_index":657,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["base64util.urlsafebase64encode(xauthhead",{"_index":513,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["base64util.urlsafebase64tobase64(key",{"_index":943,"title":{},"body":{"classes/RSACrypt.html":{}}}],["basepath",{"_index":259,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["baseurl",{"_index":281,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["baseurl.search",{"_index":382,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl.substring(0",{"_index":383,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl.substring(protocol.length).match",{"_index":387,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl}${abstractahoiauthenticationservice.auth_uri}?${abstractahoiauthenticationservice.auth_credentials_paramet",{"_index":352,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["baseurl}${ahoipublickeyservice.public_key_uri",{"_index":605,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["basic",{"_index":371,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["basiccach",{"_index":709,"title":{"classes/BasicCache.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["basiccache:32",{"_index":804,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:43",{"_index":809,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:48",{"_index":807,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:61",{"_index":808,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:66",{"_index":806,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:76",{"_index":810,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["basiccache:85",{"_index":805,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["bearer",{"_index":660,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["bearertoken",{"_index":677,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["bearertoken.getaccesstoken",{"_index":682,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["befor",{"_index":533,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["begin",{"_index":928,"title":{},"body":{"classes/RSACrypt.html":{}}}],["below",{"_index":1090,"title":{},"body":{"index.html":{}}}],["beschrieben",{"_index":1058,"title":{},"body":{"index.html":{}}}],["between",{"_index":543,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["binari",{"_index":160,"title":{},"body":{"classes/AESCrypt.html":{}}}],["bit",{"_index":72,"title":{},"body":{"classes/AESCrypt.html":{}}}],["block",{"_index":255,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["bottom",{"_index":762,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["break",{"_index":770,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["buf",{"_index":793,"title":{},"body":{"classes/CryptUtil.html":{}}}],["buffer",{"_index":25,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiPublicKeyService.html":{},"classes/Base64Util.html":{},"classes/CryptUtil.html":{}}}],["buffer.alloc(0",{"_index":707,"title":{},"body":{"classes/Base64Util.html":{}}}],["buffer.alloc(aescrypt.iv_length",{"_index":30,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.alloc(aescrypt.iv_length)]).slice(0",{"_index":176,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.alloc(len",{"_index":170,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([buffer.from(cryptkey",{"_index":171,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([bufiv",{"_index":139,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([cipheriv.update(text",{"_index":142,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([cryptkey",{"_index":169,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.concat([deciv",{"_index":175,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from",{"_index":108,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(`${this.config.clientid}:${this.config.clientsecret",{"_index":372,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["buffer.from(base64util.urlsafebase64tobase64(enctext",{"_index":152,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(base64util.urlsafebase64tobase64(text",{"_index":708,"title":{},"body":{"classes/Base64Util.html":{}}}],["buffer.from(key",{"_index":178,"title":{},"body":{"classes/AESCrypt.html":{}}}],["buffer.from(text",{"_index":941,"title":{},"body":{"classes/RSACrypt.html":{}}}],["buffer.from(text).tostring('base64",{"_index":705,"title":{},"body":{"classes/Base64Util.html":{}}}],["bufiv",{"_index":121,"title":{},"body":{"classes/AESCrypt.html":{}}}],["build",{"_index":1150,"title":{},"body":{"index.html":{}}}],["byte",{"_index":123,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["c",{"_index":1159,"title":{},"body":{"license.html":{}}}],["cach",{"_index":489,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["cache/encinstallationidcach",{"_index":823,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["cache/tokencach",{"_index":479,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["cacheclean",{"_index":718,"title":{"interfaces/CacheCleaner.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cachemap",{"_index":711,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["call",{"_index":466,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["callahoioauthserv",{"_index":302,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["callahoioauthserver(headermap",{"_index":311,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["can't",{"_index":557,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["case",{"_index":83,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{}}}],["catch",{"_index":144,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["cbc",{"_index":100,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"miscellaneous/enumerations.html":{}}}],["certif",{"_index":545,"title":{},"body":{"interfaces/AhoiConfig.html":{},"todo.html":{}}}],["chang",{"_index":843,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["char",{"_index":1135,"title":{},"body":{"index.html":{}}}],["charg",{"_index":1167,"title":{},"body":{"license.html":{}}}],["checkconfig",{"_index":190,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["checkconfig(config",{"_index":201,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["choos",{"_index":1133,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":1147,"title":{},"body":{"index.html":{}}}],["cipher",{"_index":37,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"miscellaneous/enumerations.html":{}}}],["cipher.aes_cbc",{"_index":509,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["cipher.default",{"_index":48,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher.replace(/\\$\\{strength",{"_index":128,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher=aescrypt.ahoi_default_ciph",{"_index":150,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipher=cipher.aes_ctr",{"_index":115,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv",{"_index":131,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv.fin",{"_index":141,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cipheriv.update(text",{"_index":140,"title":{},"body":{"classes/AESCrypt.html":{}}}],["claim",{"_index":1202,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"overview.html":{},"todo.html":{}}}],["clean",{"_index":736,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["clean_interv",{"_index":1001,"title":{},"body":{"classes/TokenCache.html":{}}}],["cleancach",{"_index":712,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cleancache(tidyfunct",{"_index":723,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["cleaninterv",{"_index":720,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["client",{"_index":520,"title":{},"body":{"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["client.gitcr",{"_index":1071,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":285,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["clientsecret",{"_index":286,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["clienttokenauth",{"_index":484,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["code",{"_index":1083,"title":{},"body":{"index.html":{}}}],["cofigur",{"_index":562,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["come",{"_index":1119,"title":{},"body":{"index.html":{}}}],["complet",{"_index":900,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["compress",{"_index":359,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"todo.html":{}}}],["condit",{"_index":1184,"title":{},"body":{"license.html":{}}}],["config",{"_index":196,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["config.appsecretiv",{"_index":287,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.appsecretkey",{"_index":288,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.baseurl",{"_index":246,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.clientid",{"_index":282,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.clientsecret",{"_index":283,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config.cryptkey",{"_index":260,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["config/ahoiconfig",{"_index":220,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["configur",{"_index":197,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{},"todo.html":{}}}],["connect",{"_index":542,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"license.html":{},"todo.html":{}}}],["consol",{"_index":93,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["console.log(err",{"_index":794,"title":{},"body":{"classes/CryptUtil.html":{}}}],["const",{"_index":107,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["constant",{"_index":935,"title":{},"body":{"classes/RSACrypt.html":{}}}],["constants.rsa_pkcs1_oaep_pad",{"_index":932,"title":{},"body":{"classes/RSACrypt.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["constructor(accesstoken",{"_index":962,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["constructor(ahoiclienttokenservic",{"_index":400,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["constructor(ahoipublickeyservic",{"_index":628,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["constructor(config",{"_index":193,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{}}}],["constructor(cryptkey",{"_index":906,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["constructor(httpclientfactori",{"_index":594,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["constructor(installationidcryptservic",{"_index":572,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["constructor(maxentri",{"_index":716,"title":{},"body":{"classes/BasicCache.html":{},"classes/TokenCache.html":{}}}],["constructor(priv",{"_index":582,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["constructor(protect",{"_index":240,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["containsiv",{"_index":38,"title":{},"body":{"classes/AESCrypt.html":{}}}],["content",{"_index":376,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["contextid",{"_index":965,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["contract",{"_index":1207,"title":{},"body":{"license.html":{}}}],["convert",{"_index":947,"title":{},"body":{"classes/RSACrypt.html":{}}}],["cookbook",{"_index":1037,"title":{},"body":{"index.html":{}}}],["copi",{"_index":1170,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1158,"title":{},"body":{"license.html":{}}}],["corpor",{"_index":1161,"title":{},"body":{"license.html":{}}}],["cpx",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["creat",{"_index":531,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["createauthhead",{"_index":303,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["createauthheader(installationid",{"_index":472,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["createauthheaders(headermap",{"_index":315,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["createrandomkey",{"_index":782,"title":{},"body":{"classes/CryptUtil.html":{}}}],["createrandomkey(keylen",{"_index":785,"title":{},"body":{"classes/CryptUtil.html":{}}}],["createsessionkeyhead",{"_index":624,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["createsessionkeyheader(publickey",{"_index":631,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["cryptkey",{"_index":36,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["crypto",{"_index":94,"title":{},"body":{"classes/AESCrypt.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["crypto.createcipheriv(useciph",{"_index":132,"title":{},"body":{"classes/AESCrypt.html":{}}}],["crypto.createdecipheriv(useciph",{"_index":158,"title":{},"body":{"classes/AESCrypt.html":{}}}],["crypto.publicencrypt",{"_index":940,"title":{},"body":{"classes/RSACrypt.html":{}}}],["crypto.randombytes(keylen",{"_index":792,"title":{},"body":{"classes/CryptUtil.html":{}}}],["cryptservice/installationidcryptservic",{"_index":225,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["cryptservice/sessionkeyheaderservic",{"_index":226,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["cryptsupport",{"_index":296,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["cryptutil",{"_index":96,"title":{"classes/CryptUtil.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{}}}],["cryptutil.createrandomkey(32",{"_index":648,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["cryptutil.createrandomkey(aescrypt.iv_length",{"_index":110,"title":{},"body":{"classes/AESCrypt.html":{}}}],["cryptutil.generatenonce(32",{"_index":500,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["ctr",{"_index":102,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["current",{"_index":335,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["customernumb",{"_index":1108,"title":{},"body":{"index.html":{}}}],["da",{"_index":1062,"title":{},"body":{"index.html":{}}}],["damag",{"_index":1203,"title":{},"body":{"license.html":{}}}],["data",{"_index":530,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{}}}],["databas",{"_index":555,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["date().gettim",{"_index":741,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["date().toisostr",{"_index":502,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["date(key.validuntil).gettim",{"_index":619,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["deal",{"_index":565,"title":{},"body":{"interfaces/AhoiConfig.html":{},"license.html":{}}}],["debug",{"_index":237,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["debug('aft",{"_index":887,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('appli",{"_index":873,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('authhead",{"_index":492,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["debug('befor",{"_index":885,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('cli",{"_index":525,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["debug('context",{"_index":882,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug('dofilt",{"_index":425,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug('fetch",{"_index":443,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug('get",{"_index":488,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/FetchHttpFactory.html":{}}}],["debug('head",{"_index":506,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["debug('installationid",{"_index":269,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["debug('remov",{"_index":778,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["debug('return",{"_index":495,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["debug('token",{"_index":445,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["debug(await",{"_index":880,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug(httpcontext.opt",{"_index":875,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["debug(httpcontext.options.head",{"_index":683,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["debug(xauthhead",{"_index":503,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["decinstallationid",{"_index":837,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["deciph",{"_index":157,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decipher.final().tostring('utf8",{"_index":162,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decipher.update(encryptedtext",{"_index":159,"title":{},"body":{"classes/AESCrypt.html":{}}}],["deciv",{"_index":173,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decod",{"_index":955,"title":{},"body":{"classes/Token.html":{}}}],["decode(accesstoken",{"_index":972,"title":{},"body":{"classes/Token.html":{}}}],["decrypt",{"_index":14,"title":{},"body":{"classes/AESCrypt.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["decrypt(enctext",{"_index":34,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decrypted_installationid_cache_s",{"_index":802,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["decryptinstallationid",{"_index":569,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["decryptinstallationid(encinstallationid",{"_index":816,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["decryptinstallationid(encryptedinstallationid",{"_index":574,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["decryptrandomiv",{"_index":15,"title":{},"body":{"classes/AESCrypt.html":{}}}],["decryptrandomiv(enctext",{"_index":52,"title":{},"body":{"classes/AESCrypt.html":{}}}],["default",{"_index":28,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["default_iv",{"_index":11,"title":{},"body":{"classes/AESCrypt.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["delet",{"_index":763,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["deletet",{"_index":761,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["demo",{"_index":1039,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1012,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depepend",{"_index":661,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["deposit",{"_index":1031,"title":{},"body":{"index.html":{}}}],["descript",{"_index":58,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["design",{"_index":1042,"title":{},"body":{"index.html":{}}}],["determin",{"_index":1034,"title":{},"body":{"index.html":{}}}],["dgw6xxtcyrykqxeehgqptg",{"_index":1094,"title":{},"body":{"index.html":{}}}],["die",{"_index":1055,"title":{},"body":{"index.html":{}}}],["differ",{"_index":333,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["disk",{"_index":1224,"title":{},"body":{"todo.html":{}}}],["distribut",{"_index":1177,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1149,"title":{},"body":{"index.html":{}}}],["doclicens",{"_index":1154,"title":{},"body":{"index.html":{}}}],["document",{"_index":1148,"title":{},"body":{"index.html":{},"license.html":{}}}],["dofilt",{"_index":391,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["dofilter(httpcontext",{"_index":402,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["domain",{"_index":322,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["don't",{"_index":1137,"title":{},"body":{"index.html":{}}}],["done",{"_index":551,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["download",{"_index":1059,"title":{},"body":{"index.html":{}}}],["e",{"_index":829,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["e.g",{"_index":126,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["easi",{"_index":1028,"title":{},"body":{"index.html":{}}}],["ein",{"_index":1060,"title":{},"body":{"index.html":{}}}],["eingebunden",{"_index":1065,"title":{},"body":{"index.html":{}}}],["empti",{"_index":836,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["empty_token",{"_index":952,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["enc",{"_index":908,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["enc_di",{"_index":970,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["encinstallationid",{"_index":586,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encinstallationidcach",{"_index":800,"title":{"classes/EncInstallationIdCache.html":{}},"body":{"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encrypt",{"_index":17,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["encrypt(text",{"_index":54,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encrypted.tostring('base64",{"_index":143,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptedinstallationid",{"_index":576,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptedinstallationid.substring(installationidcryptservice.prefix.length",{"_index":918,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["encryptedsessionkey",{"_index":632,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptedtext",{"_index":155,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptinstallationid",{"_index":570,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptinstallationid(installationid",{"_index":577,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/InstallationIdCryptService.html":{}}}],["encryptinstallationidfilt",{"_index":230,"title":{"classes/EncryptInstallationIdFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["encryptinstallationidfilter(installationidcryptservic",{"_index":275,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptrandomiv",{"_index":18,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptrandomiv(text",{"_index":61,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encryptsessionfilt",{"_index":232,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptsessionfilter(ahoisessionkeyheaderservic",{"_index":276,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["encryptsessionkey",{"_index":625,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptsessionkey(sessionkey",{"_index":634,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["encryptwithrsapublickey",{"_index":924,"title":{},"body":{"classes/RSACrypt.html":{}}}],["encryptwithrsapublickey(text",{"_index":930,"title":{},"body":{"classes/RSACrypt.html":{}}}],["enctext",{"_index":47,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuff",{"_index":151,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuffer.slice(0",{"_index":153,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enctextbuffer.slice(aescrypt.iv_length",{"_index":156,"title":{},"body":{"classes/AESCrypt.html":{}}}],["encxauthhead",{"_index":505,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["end",{"_index":927,"title":{},"body":{"classes/RSACrypt.html":{}}}],["endpoint",{"_index":468,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["ensur",{"_index":556,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["ensurecapac",{"_index":713,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["enum",{"_index":98,"title":{},"body":{"classes/AESCrypt.html":{}}}],["enumer",{"_index":1021,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":145,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/CryptUtil.html":{},"classes/FetchHttpFactory.html":{}}}],["error",{"_index":92,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["error(",{"_index":830,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["error('credenti",{"_index":284,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["error('error",{"_index":163,"title":{},"body":{"classes/AESCrypt.html":{}}}],["error('installationid",{"_index":584,"title":{},"body":{"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["error('un",{"_index":946,"title":{},"body":{"classes/RSACrypt.html":{}}}],["error('url",{"_index":279,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["error(err",{"_index":146,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["errormsg",{"_index":364,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["event",{"_index":1199,"title":{},"body":{"license.html":{}}}],["exactli",{"_index":1140,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":738,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["exce",{"_index":760,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["except",{"_index":77,"title":{},"body":{"classes/AESCrypt.html":{},"todo.html":{}}}],["execut",{"_index":876,"title":{},"body":{"classes/FetchHttpFactory.html":{},"index.html":{}}}],["exist",{"_index":1044,"title":{},"body":{"index.html":{}}}],["expir",{"_index":526,"title":{},"body":{"classes/AhoiClientTokenService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["explor",{"_index":1038,"title":{},"body":{"index.html":{}}}],["export",{"_index":97,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["express",{"_index":1192,"title":{},"body":{"license.html":{}}}],["extend",{"_index":449,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{},"index.html":{}}}],["extract",{"_index":320,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["fail",{"_index":1220,"title":{},"body":{"todo.html":{}}}],["fals",{"_index":49,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["featur",{"_index":567,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["fetch",{"_index":250,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"dependencies.html":{},"index.html":{}}}],["fetchapi",{"_index":216,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchclient",{"_index":219,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"dependencies.html":{}}}],["fetchclient#v0.0.1",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["fetcherror",{"_index":342,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetcherror(errormsg",{"_index":366,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchhttpfactori",{"_index":188,"title":{"classes/FetchHttpFactory.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["fetchhttpfilt",{"_index":844,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["filter",{"_index":266,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/FetchHttpFactory.html":{}}}],["filter.constructor.nam",{"_index":883,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filter.dofilter(httpcontext",{"_index":886,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filter.matches(httpcontext",{"_index":884,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["filterrequest",{"_index":392,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterrequest(httpcontext",{"_index":405,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterrespons",{"_index":393,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filterresponse(httpcontext",{"_index":407,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["filters.push(new",{"_index":274,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["find",{"_index":1144,"title":{},"body":{"index.html":{}}}],["first",{"_index":764,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["fit",{"_index":1195,"title":{},"body":{"license.html":{}}}],["five",{"_index":1075,"title":{},"body":{"index.html":{}}}],["fixm",{"_index":673,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["follow",{"_index":1082,"title":{},"body":{"index.html":{},"license.html":{}}}],["forecast",{"_index":1035,"title":{},"body":{"index.html":{}}}],["found",{"_index":1129,"title":{},"body":{"index.html":{}}}],["free",{"_index":1166,"title":{},"body":{"license.html":{}}}],["friendli",{"_index":82,"title":{},"body":{"classes/AESCrypt.html":{}}}],["function",{"_index":329,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["furnish",{"_index":1182,"title":{},"body":{"license.html":{}}}],["g",{"_index":698,"title":{},"body":{"classes/Base64Util.html":{}}}],["gener",{"_index":136,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{},"index.html":{},"todo.html":{}}}],["generatenonc",{"_index":783,"title":{},"body":{"classes/CryptUtil.html":{}}}],["generatenonce(length",{"_index":788,"title":{},"body":{"classes/CryptUtil.html":{}}}],["generatesessionkey",{"_index":626,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["get",{"_index":1023,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["get(key",{"_index":726,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["getaccesstoken",{"_index":956,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getapiinst",{"_index":191,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["getapiinstance(api",{"_index":204,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["getauthtoken",{"_index":394,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getauthtoken(httpcontext",{"_index":409,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken",{"_index":395,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken(httpcontext",{"_index":411,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getbankingtoken(installationid",{"_index":579,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["getbaseurl",{"_index":304,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["getbaseurl(baseurl",{"_index":318,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["getclientauthtoken",{"_index":571,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["getclientid",{"_index":957,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getcontextid",{"_index":958,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getencryptionstrength",{"_index":19,"title":{},"body":{"classes/AESCrypt.html":{}}}],["getencryptionstrength(key",{"_index":63,"title":{},"body":{"classes/AESCrypt.html":{}}}],["getexpir",{"_index":959,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["gethead",{"_index":627,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getheader(sessionkey",{"_index":639,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["gethttpclient",{"_index":849,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["gethttpclient(installationid",{"_index":857,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["getjti",{"_index":960,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getpayload",{"_index":961,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getpublickey",{"_index":592,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["getrespons",{"_index":396,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["getresponse(httpcontext",{"_index":413,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["gettoken",{"_index":397,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["gettoken(httpcontext",{"_index":415,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["git+ssh://git@github.com:sparkassen",{"_index":1069,"title":{},"body":{"index.html":{}}}],["github",{"_index":1026,"title":{},"body":{"index.html":{}}}],["given",{"_index":323,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{}}}],["go",{"_index":1072,"title":{},"body":{"index.html":{}}}],["grant",{"_index":895,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{},"index.html":{},"license.html":{}}}],["grant_type=client_credenti",{"_index":307,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["guidelin",{"_index":552,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["hack",{"_index":560,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["hand",{"_index":80,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{}}}],["handl",{"_index":1218,"title":{},"body":{"todo.html":{}}}],["hashedkey",{"_index":748,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["hashkey",{"_index":714,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["hashkey(key",{"_index":729,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["header",{"_index":317,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["headermap",{"_index":314,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["headers(authhead",{"_index":378,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["headers.set(key",{"_index":367,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["helper",{"_index":328,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["here",{"_index":1036,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":1165,"title":{},"body":{"license.html":{}}}],["hier",{"_index":1057,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1200,"title":{},"body":{"license.html":{}}}],["http",{"_index":265,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/FetchHttpFactory.html":{}}}],["httpclient",{"_index":611,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["httpclient(this.uri",{"_index":613,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["httpclient/fetchhttpfactori",{"_index":227,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{}}}],["httpclientfactori",{"_index":596,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["httpcontext",{"_index":403,"title":{"interfaces/HttpContext.html":{}},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.authtoken",{"_index":438,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.bankingtoken",{"_index":440,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.installationid",{"_index":441,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["httpcontext.isrequest",{"_index":424,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.opt",{"_index":878,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httpcontext.options.head",{"_index":436,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.headers.set(nam",{"_index":437,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.method",{"_index":432,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.method.tolowercas",{"_index":433,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.options.timeout",{"_index":901,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.respons",{"_index":879,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httpcontext.response.json",{"_index":435,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.response.statu",{"_index":428,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["httpcontext.url",{"_index":426,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["httpcontext.url.endswith('/access",{"_index":896,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["httpcontext.url.endswith('/registr",{"_index":678,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["httpcontext.url.endswith('/registration/key",{"_index":680,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["httpfilter",{"_index":215,"title":{"interfaces/HttpFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["httpfilter/authheaderfilt",{"_index":229,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/encryptinstallationidfilt",{"_index":231,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/encryptsessionfilt",{"_index":233,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilter/httprequesttimeoutfilt",{"_index":236,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpfilters].revers",{"_index":869,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httprequestfilt",{"_index":845,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["httprequesttimeoutfilt",{"_index":235,"title":{"classes/HttpRequestTimeoutFilter.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["httprequesttimeoutfilter(ahoiclienttokenservic",{"_index":278,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["httpresponsefilt",{"_index":846,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["https://bank",{"_index":325,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"index.html":{}}}],["https://github.com/cayasso/cacheman",{"_index":1215,"title":{},"body":{"todo.html":{}}}],["https://github.com/kesla/nod",{"_index":1222,"title":{},"body":{"todo.html":{}}}],["https://github.com/sparkassen",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["hub/ahoi",{"_index":1014,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["höher",{"_index":1054,"title":{},"body":{"index.html":{}}}],["idcach",{"_index":814,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["idwithoutprefix",{"_index":917,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["implement",{"_index":390,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["impli",{"_index":1193,"title":{},"body":{"license.html":{}}}],["import",{"_index":91,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["includ",{"_index":1085,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["inform",{"_index":1032,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":457,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{}}}],["init",{"_index":242,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["inithttpfilt",{"_index":192,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["inithttpfilters(ahoiclienttokenservic",{"_index":210,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["initi",{"_index":860,"title":{},"body":{"classes/FetchHttpFactory.html":{},"index.html":{}}}],["instal",{"_index":835,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{},"index.html":{},"todo.html":{}}}],["installationid",{"_index":205,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/InstallationIdCryptService.html":{},"index.html":{}}}],["installationid'",{"_index":563,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["installationid.startswith(installationidcryptservice.prefix",{"_index":920,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["installationidcryptfilt",{"_index":826,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["installationidcryptservic",{"_index":189,"title":{"classes/InstallationIdCryptService.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["installationidcryptservice(config.cryptkey",{"_index":262,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["installationidcryptservice.prefix",{"_index":913,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["instanceof",{"_index":147,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/Base64Util.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["instanti",{"_index":104,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["interfac",{"_index":528,"title":{"interfaces/AhoiConfig.html":{},"interfaces/CacheCleaner.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"interfaces/TokenData.html":{}},"body":{"interfaces/AhoiConfig.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["intern",{"_index":1130,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":831,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["isencrypt",{"_index":905,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["isencrypted(installationid",{"_index":911,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["isexpir",{"_index":593,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/Token.html":{}}}],["isexpired(assumedrequesttim",{"_index":981,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["isexpired(key",{"_index":603,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["isrequest",{"_index":870,"title":{},"body":{"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["ist",{"_index":1056,"title":{},"body":{"index.html":{}}}],["it'",{"_index":134,"title":{},"body":{"classes/AESCrypt.html":{}}}],["item",{"_index":756,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["iv",{"_index":40,"title":{},"body":{"classes/AESCrypt.html":{}}}],["iv=aescrypt.default_iv",{"_index":116,"title":{},"body":{"classes/AESCrypt.html":{}}}],["iv_length",{"_index":12,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ivtobuff",{"_index":20,"title":{},"body":{"classes/AESCrypt.html":{}}}],["ivtobuffer(iv",{"_index":86,"title":{},"body":{"classes/AESCrypt.html":{}}}],["javascript",{"_index":1087,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":497,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["jsonwebtoken",{"_index":987,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["jti",{"_index":966,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["jwt",{"_index":986,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["jwt_prop_encryption_dis",{"_index":953,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["key",{"_index":67,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["key.length",{"_index":767,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["key.startswith(rsacrypt.pem_key_start",{"_index":937,"title":{},"body":{"classes/RSACrypt.html":{}}}],["keybuf",{"_index":177,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keybuf.length",{"_index":179,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keylen",{"_index":787,"title":{},"body":{"classes/CryptUtil.html":{}}}],["keyspecif",{"_index":654,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["keytobuff",{"_index":21,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keytobuffer(cryptkey",{"_index":88,"title":{},"body":{"classes/AESCrypt.html":{}}}],["keytopemkey",{"_index":925,"title":{},"body":{"classes/RSACrypt.html":{}}}],["keytopemkey(key",{"_index":933,"title":{},"body":{"classes/RSACrypt.html":{}}}],["kind",{"_index":1191,"title":{},"body":{"license.html":{}}}],["known",{"_index":548,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["last",{"_index":752,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["len",{"_index":165,"title":{},"body":{"classes/AESCrypt.html":{}}}],["length",{"_index":68,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/CryptUtil.html":{},"index.html":{}}}],["length.includes('256",{"_index":167,"title":{},"body":{"classes/AESCrypt.html":{}}}],["level",{"_index":1225,"title":{},"body":{"todo.html":{}}}],["liabil",{"_index":1204,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1201,"title":{},"body":{"license.html":{}}}],["lib/cache/basiccach",{"_index":811,"title":{},"body":{"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["lib/crypt/aescrypt",{"_index":480,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/InstallationIdCryptService.html":{}}}],["lib/crypt/base64util",{"_index":481,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/crypt/cryptutil",{"_index":482,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/crypt/rsacrypt",{"_index":642,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["lib/httpfilter/httpfilt",{"_index":234,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["licens",{"_index":1155,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1173,"title":{},"body":{"license.html":{}}}],["line",{"_index":350,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["line:max",{"_index":349,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["line:pref",{"_index":369,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["link",{"_index":117,"title":{},"body":{"classes/AESCrypt.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["list",{"_index":758,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["log",{"_index":1216,"title":{},"body":{"todo.html":{}}}],["lost",{"_index":558,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["manag",{"_index":1074,"title":{},"body":{"index.html":{},"todo.html":{}}}],["mangement",{"_index":1131,"title":{},"body":{"index.html":{}}}],["map",{"_index":312,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["match",{"_index":78,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["match(/.{1,64}/g",{"_index":944,"title":{},"body":{"classes/RSACrypt.html":{}}}],["matches(httpcontext",{"_index":417,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["math.random",{"_index":798,"title":{},"body":{"classes/CryptUtil.html":{}}}],["max_entri",{"_index":1002,"title":{},"body":{"classes/TokenCache.html":{}}}],["maxentri",{"_index":722,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["memberof",{"_index":119,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["merchant",{"_index":1194,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1175,"title":{},"body":{"license.html":{}}}],["mergehead",{"_index":305,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["mergeheaders(head",{"_index":339,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["method",{"_index":13,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["method.tolowercas",{"_index":434,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["microsoft",{"_index":1160,"title":{},"body":{"license.html":{}}}],["min",{"_index":616,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/TokenCache.html":{}}}],["miscellan",{"_index":1020,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":280,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["mit",{"_index":1157,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":1174,"title":{},"body":{"license.html":{}}}],["modul",{"_index":1040,"title":{"modules.html":{}},"body":{"index.html":{},"modules.html":{}}}],["more",{"_index":74,"title":{},"body":{"classes/AESCrypt.html":{},"index.html":{}}}],["move",{"_index":751,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["mp3idookxvzoqzx22iuexg",{"_index":1093,"title":{},"body":{"index.html":{}}}],["mytyp",{"_index":740,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["need",{"_index":137,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["never",{"_index":754,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["new",{"_index":148,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["newbuff",{"_index":168,"title":{},"body":{"classes/AESCrypt.html":{}}}],["newbuffer.slice(0",{"_index":172,"title":{},"body":{"classes/AESCrypt.html":{}}}],["next",{"_index":348,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["node",{"_index":345,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"dependencies.html":{},"index.html":{}}}],["node');b",{"_index":1089,"title":{},"body":{"index.html":{}}}],["node.j",{"_index":1024,"title":{},"body":{"index.html":{}}}],["nodefetch",{"_index":341,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/FetchHttpFactory.html":{}}}],["nodefetch(httpcontext.url",{"_index":877,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["nodefetch(this.uri",{"_index":360,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["nodej",{"_index":1070,"title":{},"body":{"index.html":{}}}],["nonc",{"_index":499,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["noninfring",{"_index":1198,"title":{},"body":{"license.html":{}}}],["note",{"_index":73,"title":{},"body":{"classes/AESCrypt.html":{}}}],["notic",{"_index":1186,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1067,"title":{},"body":{"index.html":{},"todo.html":{}}}],["null",{"_index":431,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/RSACrypt.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/AESCrypt.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["o",{"_index":164,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["oauth",{"_index":464,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{}}}],["obtain",{"_index":1169,"title":{},"body":{"license.html":{}}}],["oder",{"_index":1053,"title":{},"body":{"index.html":{}}}],["of(bank",{"_index":1102,"title":{},"body":{"index.html":{}}}],["on",{"_index":1079,"title":{},"body":{"index.html":{}}}],["open",{"_index":1027,"title":{},"body":{"index.html":{}}}],["option",{"_index":46,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"index.html":{}}}],["order",{"_index":864,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["otherwis",{"_index":1209,"title":{},"body":{"license.html":{}}}],["out",{"_index":1047,"title":{},"body":{"index.html":{},"license.html":{}}}],["over",{"_index":546,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["overview",{"_index":1211,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1011,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":84,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["param",{"_index":114,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["paramet",{"_index":44,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{}}}],["part",{"_index":138,"title":{},"body":{"classes/AESCrypt.html":{}}}],["particular",{"_index":1196,"title":{},"body":{"license.html":{}}}],["password",{"_index":1134,"title":{},"body":{"index.html":{}}}],["payload",{"_index":968,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["payment",{"_index":1029,"title":{},"body":{"index.html":{}}}],["pem",{"_index":948,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pem_key_end",{"_index":922,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pem_key_start",{"_index":923,"title":{},"body":{"classes/RSACrypt.html":{}}}],["pemkey",{"_index":936,"title":{},"body":{"classes/RSACrypt.html":{}}}],["permiss",{"_index":1164,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1181,"title":{},"body":{"license.html":{}}}],["person",{"_index":1168,"title":{},"body":{"license.html":{}}}],["pin",{"_index":538,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["point",{"_index":1048,"title":{},"body":{"index.html":{}}}],["portion",{"_index":1189,"title":{},"body":{"license.html":{}}}],["posit",{"_index":753,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["possibl",{"_index":105,"title":{},"body":{"classes/AESCrypt.html":{},"classes/RSACrypt.html":{}}}],["post",{"_index":354,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["prefix",{"_index":904,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["prerequisit",{"_index":1050,"title":{},"body":{"index.html":{}}}],["privat",{"_index":8,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["procedur",{"_index":1146,"title":{},"body":{"index.html":{}}}],["process",{"_index":898,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["promis",{"_index":60,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/CryptUtil.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{}}}],["promise((resolv",{"_index":790,"title":{},"body":{"classes/CryptUtil.html":{}}}],["properti",{"_index":7,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["protect",{"_index":185,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["protocol",{"_index":321,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["provid",{"_index":842,"title":{},"body":{"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"index.html":{},"license.html":{}}}],["provider[0].id",{"_index":1112,"title":{},"body":{"index.html":{}}}],["providerapi",{"_index":1103,"title":{},"body":{"index.html":{}}}],["providerapi.getproviders();",{"_index":1105,"title":{},"body":{"index.html":{}}}],["providerid",{"_index":1111,"title":{},"body":{"index.html":{}}}],["pubkey",{"_index":615,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["public",{"_index":106,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["public_key_uri",{"_index":590,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["publicahoikey",{"_index":635,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publicahoikey.publickey.valu",{"_index":649,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickey",{"_index":591,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickey.keyid",{"_index":653,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publickeyid",{"_index":652,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["publish",{"_index":1176,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":1197,"title":{},"body":{"license.html":{}}}],["put",{"_index":676,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["quickstart",{"_index":1081,"title":{},"body":{"index.html":{}}}],["random",{"_index":498,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["randomli",{"_index":135,"title":{},"body":{"classes/AESCrypt.html":{}}}],["rare",{"_index":755,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["readonli",{"_index":10,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncInstallationIdCache.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["real",{"_index":1139,"title":{},"body":{"index.html":{}}}],["recommend",{"_index":566,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{}}}],["regist",{"_index":522,"title":{},"body":{"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["registr",{"_index":674,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"index.html":{}}}],["registration/key",{"_index":598,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["registrationapi",{"_index":1099,"title":{},"body":{"index.html":{}}}],["registrationapi.register();d",{"_index":1101,"title":{},"body":{"index.html":{}}}],["registrationpublickey",{"_index":600,"title":{},"body":{"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["registrationrespons",{"_index":822,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{},"index.html":{}}}],["regpublickey",{"_index":614,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["reject",{"_index":791,"title":{},"body":{"classes/CryptUtil.html":{}}}],["reject(err",{"_index":795,"title":{},"body":{"classes/CryptUtil.html":{}}}],["remov",{"_index":737,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["replace(/\\//g",{"_index":701,"title":{},"body":{"classes/Base64Util.html":{}}}],["replace(/_/g",{"_index":699,"title":{},"body":{"classes/Base64Util.html":{}}}],["request",{"_index":540,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{}}}],["requestinit",{"_index":343,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["requir",{"_index":553,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["require('ahoi",{"_index":1088,"title":{},"body":{"index.html":{}}}],["reserv",{"_index":1163,"title":{},"body":{"license.html":{}}}],["resolve(buf.tostring('base64",{"_index":796,"title":{},"body":{"classes/CryptUtil.html":{}}}],["resourc",{"_index":334,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["respons",{"_index":344,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["response.instal",{"_index":832,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["response.json",{"_index":362,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["response.ok",{"_index":361,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["response.text",{"_index":365,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{}}}],["responsedata",{"_index":430,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["restrict",{"_index":79,"title":{},"body":{"classes/AESCrypt.html":{},"license.html":{}}}],["result",{"_index":182,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["retri",{"_index":1219,"title":{},"body":{"todo.html":{}}}],["retriev",{"_index":1030,"title":{},"body":{"index.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"todo.html":{}}}],["revers",{"_index":865,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["right",{"_index":1162,"title":{},"body":{"license.html":{}}}],["rsacrypt",{"_index":641,"title":{"classes/RSACrypt.html":{}},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/RSACrypt.html":{}}}],["rsacrypt.encryptwithrsapublickey(sessionkey",{"_index":650,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["rsacrypt.keytopemkey(key",{"_index":938,"title":{},"body":{"classes/RSACrypt.html":{}}}],["rsacrypt.pem_key_start}\\n${splitted.join('\\n')}\\n${this.pem_key_end",{"_index":945,"title":{},"body":{"classes/RSACrypt.html":{}}}],["run",{"_index":1151,"title":{},"body":{"index.html":{}}}],["s",{"_index":270,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["safe",{"_index":617,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["same",{"_index":866,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["sandbank",{"_index":1141,"title":{},"body":{"index.html":{}}}],["sandbox",{"_index":534,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["sandbox.starfinanz.d",{"_index":327,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["sandbox.starfinanz.de/ahoi/api/v2",{"_index":326,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authent",{"_index":471,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["sandbox.starfinanz.de/sandboxmanag",{"_index":536,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["save",{"_index":1068,"title":{},"body":{"index.html":{}}}],["sbm_xxqaex30t2d",{"_index":1091,"title":{},"body":{"index.html":{}}}],["scl&afpazdw6s#k3",{"_index":1095,"title":{},"body":{"index.html":{}}}],["scope",{"_index":967,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["sec",{"_index":358,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["second",{"_index":988,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["secreiv",{"_index":290,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["secret",{"_index":521,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["secur",{"_index":75,"title":{},"body":{"classes/AESCrypt.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["see",{"_index":470,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"index.html":{}}}],["select",{"_index":1077,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1180,"title":{},"body":{"license.html":{}}}],["send",{"_index":539,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/FetchHttpFactory.html":{}}}],["sensit",{"_index":537,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["separ",{"_index":1153,"title":{},"body":{"index.html":{}}}],["server",{"_index":332,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{}}}],["servic",{"_index":243,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"index.html":{}}}],["session",{"_index":630,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{},"classes/FetchHttpFactory.html":{}}}],["sessionkey",{"_index":637,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["sessionkey_header_nam",{"_index":623,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["sessionsechead",{"_index":651,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["set",{"_index":561,"title":{},"body":{"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/TokenCache.html":{}}}],["set(key",{"_index":731,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["sethead",{"_index":398,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["setheader(httpcontext",{"_index":419,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["sethttpfilt",{"_index":850,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["sethttpfilter(httpfilt",{"_index":861,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["setinterv",{"_index":772,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["sha",{"_index":656,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["shall",{"_index":1187,"title":{},"body":{"license.html":{}}}],["short",{"_index":949,"title":{},"body":{"classes/RSACrypt.html":{}}}],["shouldremov",{"_index":776,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["show",{"_index":1080,"title":{},"body":{"index.html":{}}}],["signatur",{"_index":780,"title":{},"body":{"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["simpl",{"_index":735,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["simplecacheclean",{"_index":719,"title":{"interfaces/SimpleCacheCleaner.html":{}},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["simpli",{"_index":1046,"title":{},"body":{"index.html":{}}}],["size",{"_index":759,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"todo.html":{}}}],["slow",{"_index":618,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["snappi",{"_index":1221,"title":{},"body":{"todo.html":{}}}],["snippet",{"_index":1084,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":1171,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["split",{"_index":942,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/.../aescrypt.t",{"_index":1022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.t",{"_index":184,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:20",{"_index":199,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:21",{"_index":200,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:22",{"_index":198,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:23",{"_index":195,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:54",{"_index":207,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:63",{"_index":214,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/abstractahoiapifactory.ts:81",{"_index":202,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["src/starfinanz/ahoi/ahoihelper.t",{"_index":568,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:12",{"_index":578,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:19",{"_index":575,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:26",{"_index":580,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:31",{"_index":581,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/ahoihelper.ts:6",{"_index":573,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.t",{"_index":298,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:10",{"_index":310,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:11",{"_index":308,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:13",{"_index":306,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:21",{"_index":313,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:44",{"_index":340,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:52",{"_index":316,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/abstractauth.ts:78",{"_index":319,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.t",{"_index":589,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:10",{"_index":599,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:11",{"_index":597,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:16",{"_index":601,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:17",{"_index":595,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:23",{"_index":602,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/ahoipublickey.ts:51",{"_index":604,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.t",{"_index":448,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:14",{"_index":456,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:16",{"_index":454,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:34",{"_index":462,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:50",{"_index":473,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/bankingtokenauth.ts:77",{"_index":474,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.t",{"_index":517,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.ts:18",{"_index":519,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/clienttokenauth.ts:7",{"_index":518,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["src/starfinanz/ahoi/auth/token.t",{"_index":950,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:16",{"_index":964,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:17",{"_index":971,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:19",{"_index":969,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:30",{"_index":963,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:36",{"_index":974,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:40",{"_index":975,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:44",{"_index":976,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:48",{"_index":979,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:52",{"_index":977,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:56",{"_index":980,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:60",{"_index":978,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:64",{"_index":985,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:68",{"_index":982,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/auth/token.ts:72",{"_index":973,"title":{},"body":{"classes/Token.html":{}}}],["src/starfinanz/ahoi/cache/encinstallationidcache.t",{"_index":801,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["src/starfinanz/ahoi/cache/encinstallationidcache.ts:5",{"_index":803,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.t",{"_index":1000,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:14",{"_index":1006,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:6",{"_index":1004,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/cache/tokencache.ts:7",{"_index":1003,"title":{},"body":{"classes/TokenCache.html":{}}}],["src/starfinanz/ahoi/config/ahoiconfig.t",{"_index":529,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.t",{"_index":903,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:14",{"_index":909,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:22",{"_index":912,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5",{"_index":907,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:9",{"_index":910,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.t",{"_index":622,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10",{"_index":629,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:14",{"_index":640,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:21",{"_index":638,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:26",{"_index":636,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:31",{"_index":633,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.t",{"_index":841,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:18",{"_index":852,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20",{"_index":851,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:31",{"_index":862,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:46",{"_index":858,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:67",{"_index":854,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:97",{"_index":856,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.t",{"_index":389,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:10",{"_index":401,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:15",{"_index":418,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:19",{"_index":404,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:35",{"_index":406,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:37",{"_index":408,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:39",{"_index":422,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:46",{"_index":414,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:51",{"_index":420,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:59",{"_index":410,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:66",{"_index":412,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:78",{"_index":416,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.t",{"_index":658,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:22",{"_index":659,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:7",{"_index":662,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.t",{"_index":813,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14",{"_index":815,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:33",{"_index":820,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:45",{"_index":818,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:57",{"_index":819,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:71",{"_index":817,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.t",{"_index":892,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:11",{"_index":893,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:6",{"_index":894,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.t",{"_index":710,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:32",{"_index":721,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:43",{"_index":732,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:48",{"_index":727,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:61",{"_index":730,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:66",{"_index":725,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:76",{"_index":734,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/cache/basiccache.ts:85",{"_index":724,"title":{},"body":{"classes/BasicCache.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.t",{"_index":5,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:108",{"_index":89,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:119",{"_index":87,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:136",{"_index":64,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:14",{"_index":33,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16",{"_index":24,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:21",{"_index":62,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:40",{"_index":56,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:64",{"_index":53,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/aescrypt.ts:78",{"_index":41,"title":{},"body":{"classes/AESCrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.t",{"_index":684,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:12",{"_index":694,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:22",{"_index":692,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:4",{"_index":696,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/base64util.ts:8",{"_index":690,"title":{},"body":{"classes/Base64Util.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.t",{"_index":781,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:20",{"_index":789,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:3",{"_index":784,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/cryptutil.ts:7",{"_index":786,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.t",{"_index":921,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:14",{"_index":931,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:23",{"_index":934,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:8",{"_index":929,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9",{"_index":926,"title":{},"body":{"classes/RSACrypt.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.t",{"_index":888,"title":{},"body":{"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:6",{"_index":891,"title":{},"body":{"interfaces/HttpFilter.html":{}}}],["src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:7",{"_index":890,"title":{},"body":{"interfaces/HttpFilter.html":{}}}],["ssl",{"_index":549,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["start",{"_index":381,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"index.html":{}}}],["startcleanerjob",{"_index":715,"title":{},"body":{"classes/BasicCache.html":{},"classes/EncInstallationIdCache.html":{},"classes/TokenCache.html":{}}}],["startcleanerjob(tidyfunct",{"_index":733,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["startup",{"_index":253,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["static",{"_index":9,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["step",{"_index":1073,"title":{},"body":{"index.html":{}}}],["stolen",{"_index":559,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["store",{"_index":554,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{},"todo.html":{}}}],["strength",{"_index":65,"title":{},"body":{"classes/AESCrypt.html":{},"miscellaneous/enumerations.html":{}}}],["string",{"_index":35,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["strip",{"_index":85,"title":{},"body":{"classes/AESCrypt.html":{}}}],["subject",{"_index":1183,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1178,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":1188,"title":{},"body":{"license.html":{}}}],["such",{"_index":1045,"title":{},"body":{"index.html":{}}}],["super(ahoiclienttokenservic",{"_index":824,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["super(config",{"_index":485,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["super(encinstallationidcache.decrypted_installationid_cache_s",{"_index":812,"title":{},"body":{"classes/EncInstallationIdCache.html":{}}}],["super(maxentri",{"_index":1009,"title":{},"body":{"classes/TokenCache.html":{}}}],["support",{"_index":291,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["sure",{"_index":1136,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":218,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"dependencies.html":{}}}],["synchron",{"_index":897,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["system",{"_index":1098,"title":{},"body":{"index.html":{},"todo.html":{}}}],["t",{"_index":208,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["take",{"_index":859,"title":{},"body":{"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["technic",{"_index":1076,"title":{},"body":{"index.html":{}}}],["templat",{"_index":370,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["test",{"_index":535,"title":{},"body":{"interfaces/AhoiConfig.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":43,"title":{},"body":{"classes/AESCrypt.html":{},"classes/Base64Util.html":{},"classes/RSACrypt.html":{}}}],["text.replac",{"_index":697,"title":{},"body":{"classes/Base64Util.html":{}}}],["text.replace(/\\+/g",{"_index":700,"title":{},"body":{"classes/Base64Util.html":{}}}],["text.tostring('base64",{"_index":704,"title":{},"body":{"classes/Base64Util.html":{}}}],["therefor",{"_index":1145,"title":{},"body":{"index.html":{}}}],["this.accesstoken",{"_index":523,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.accesstoken.isexpir",{"_index":524,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.ahoibankingtokenservice.authenticate(encinstallationid",{"_index":588,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.ahoibankingtokenservice.authenticate(httpcontext.installationid",{"_index":444,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["this.ahoiclienttokenservice.authent",{"_index":439,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiHelper.html":{}}}],["this.ahoiconfigur",{"_index":258,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoiconfiguration.basepath",{"_index":272,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoihelp",{"_index":263,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.ahoipublickeyservice.getpublickey",{"_index":643,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.applyfilt",{"_index":881,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.applyfilterandexecuterequest(httpcontext",{"_index":872,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.applyfilters(httpcontext",{"_index":874,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.cachemap",{"_index":744,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.delete(hashedkey",{"_index":765,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.delete(key",{"_index":769,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.entri",{"_index":775,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.get(hashedkey",{"_index":750,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.set(hashedkey",{"_index":766,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.cachemap.set(this.hashkey(key",{"_index":746,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.callahoioauthserv",{"_index":527,"title":{},"body":{"classes/AhoiClientTokenService.html":{}}}],["this.callahoioauthserver(authhead",{"_index":493,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.checkconfig(config",{"_index":241,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.cleancache(tidyfunct",{"_index":774,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.config.appsecretiv",{"_index":510,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.config.appsecretkey",{"_index":516,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.createauthheader(installationid",{"_index":491,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.createauthheaders(headermap",{"_index":353,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.createsessionkeyheader(publickey",{"_index":647,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.cryptkey",{"_index":915,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["this.decode(accesstoken",{"_index":990,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.decryptinstallationid(httpcontext.installationid",{"_index":828,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.encryptinstallationid(installationid",{"_index":587,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.encryptsessionkey(usesessionkey",{"_index":646,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.ensurecapac",{"_index":747,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.fetchhttpfactori",{"_index":244,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.fetchhttpfactory.gethttpclient(installationid",{"_index":273,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.fetchhttpfactory.sethttpfilter(httpfilt",{"_index":268,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.filterrequest(httpcontext",{"_index":427,"title":{},"body":{"classes/AbstractHttpFilter.html":{}}}],["this.generatesessionkey",{"_index":645,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["this.getauthtoken(httpcontext",{"_index":447,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{}}}],["this.getbankingtoken(httpcontext",{"_index":446,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{}}}],["this.getbaseurl(config.baseurl",{"_index":346,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.getexpir",{"_index":999,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.hashkey(key",{"_index":749,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.httpclientfactory.gethttpcli",{"_index":612,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.httprequestfilt",{"_index":867,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.httpresponsefilt",{"_index":868,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["this.idcach",{"_index":825,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.get(encinstallationid",{"_index":838,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.set(encinstallationid",{"_index":840,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.idcache.set(encryptedinstallationid",{"_index":834,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.inithttpfilters(ahoiclienttokenservic",{"_index":267,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["this.installationidcryptservic",{"_index":261,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.decryptinstallationid(encinstallationid",{"_index":839,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.installationidcryptservice.decryptinstallationid(encryptedinstallationid",{"_index":585,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.encryptinstallationid(installationid",{"_index":583,"title":{},"body":{"classes/AhoiHelper.html":{}}}],["this.installationidcryptservice.encryptinstallationid(response.instal",{"_index":833,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.installationidcryptservice.isencrypted(httpcontext.installationid",{"_index":827,"title":{},"body":{"classes/EncryptInstallationIdFilter.html":{}}}],["this.isencrypted(encryptedinstallationid",{"_index":916,"title":{},"body":{"classes/InstallationIdCryptService.html":{}}}],["this.isexpired(this.publickey",{"_index":607,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.maxentri",{"_index":768,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.mergeheaders(head",{"_index":379,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["this.publickey",{"_index":606,"title":{},"body":{"classes/AhoiPublicKeyService.html":{}}}],["this.setheader(httpcontext",{"_index":681,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["this.startcleanerjob(tidyfunct",{"_index":745,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["this.tokencach",{"_index":486,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokencache.get(installationid",{"_index":487,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokencache.set(installationid",{"_index":494,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["this.tokendata",{"_index":989,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.accesstoken",{"_index":991,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.clientid",{"_index":992,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.contextid",{"_index":993,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.expir",{"_index":995,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.head",{"_index":997,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.jti",{"_index":994,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload",{"_index":996,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.scope.includes(token.jwt_prop_encryption_dis",{"_index":998,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.uri",{"_index":351,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["this.useencrypt",{"_index":504,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{}}}],["this.usesmethod(httpcontext",{"_index":679,"title":{},"body":{"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["thread",{"_index":256,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["throw",{"_index":76,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/RSACrypt.html":{}}}],["tidyfunct",{"_index":717,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["tidyfunction.apply(nul",{"_index":777,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tidyfunction.call(this.cachemap",{"_index":773,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tidyfunction.length",{"_index":771,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["time",{"_index":899,"title":{},"body":{"classes/HttpRequestTimeoutFilter.html":{}}}],["timeout",{"_index":355,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["timestamp",{"_index":501,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["todo",{"_index":1214,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":252,"title":{"classes/Token.html":{}},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiHelper.html":{},"classes/AuthHeaderFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{}}}],["token(bankingtoken",{"_index":871,"title":{},"body":{"classes/FetchHttpFactory.html":{}}}],["token(token.access_token",{"_index":363,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["token.assumed_max_request_tim",{"_index":984,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["token.isexpir",{"_index":490,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/TokenCache.html":{}}}],["tokencach",{"_index":451,"title":{"classes/TokenCache.html":{}},"body":{"classes/AhoiBankingTokenService.html":{},"classes/TokenCache.html":{}}}],["tokencache.clean_interv",{"_index":1008,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokencache.cleancach",{"_index":1010,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokencache.max_entri",{"_index":1007,"title":{},"body":{"classes/TokenCache.html":{}}}],["tokendata",{"_index":954,"title":{"interfaces/TokenData.html":{}},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["top",{"_index":757,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["tort",{"_index":1208,"title":{},"body":{"license.html":{}}}],["tostring('base64",{"_index":373,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["transact",{"_index":469,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"index.html":{}}}],["transfer",{"_index":1033,"title":{},"body":{"index.html":{}}}],["tri",{"_index":120,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"index.html":{}}}],["true",{"_index":113,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["ts",{"_index":1152,"title":{},"body":{"index.html":{}}}],["tsdoc",{"_index":1217,"title":{},"body":{"todo.html":{}}}],["tslint:dis",{"_index":347,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{}}}],["two",{"_index":1142,"title":{},"body":{"index.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiHelper.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/Base64Util.html":{},"classes/BasicCache.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"interfaces/TokenData.html":{},"index.html":{}}}],["typeof",{"_index":166,"title":{},"body":{"classes/AESCrypt.html":{}}}],["typescript",{"_index":739,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{}}}],["unam",{"_index":779,"title":{},"body":{"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["undefin",{"_index":728,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["under",{"_index":1156,"title":{},"body":{"index.html":{}}}],["updat",{"_index":675,"title":{},"body":{"classes/AuthHeaderFilter.html":{}}}],["uri",{"_index":301,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{}}}],["url",{"_index":324,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/FetchHttpFactory.html":{},"interfaces/HttpContext.html":{},"interfaces/HttpFilter.html":{}}}],["urlsafebase64decod",{"_index":686,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64decode(text",{"_index":691,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64encod",{"_index":687,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64encode(text",{"_index":693,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64tobase64",{"_index":688,"title":{},"body":{"classes/Base64Util.html":{}}}],["urlsafebase64tobase64(text",{"_index":695,"title":{},"body":{"classes/Base64Util.html":{}}}],["us",{"_index":57,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"interfaces/AhoiConfig.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/FetchHttpFactory.html":{},"interfaces/SimpleCacheCleaner.html":{},"index.html":{},"license.html":{}}}],["useciph",{"_index":127,"title":{},"body":{"classes/AESCrypt.html":{}}}],["usecryptkey",{"_index":129,"title":{},"body":{"classes/AESCrypt.html":{}}}],["useencrypt",{"_index":453,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["user",{"_index":81,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"index.html":{},"todo.html":{}}}],["usernam",{"_index":1078,"title":{},"body":{"index.html":{}}}],["usesessionkey",{"_index":644,"title":{},"body":{"classes/AhoiSessionKeyHeaderService.html":{}}}],["usesmethod",{"_index":399,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["usesmethod(httpcontext",{"_index":421,"title":{},"body":{"classes/AbstractHttpFilter.html":{},"classes/AuthHeaderFilter.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/HttpRequestTimeoutFilter.html":{}}}],["usual",{"_index":541,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["utf8",{"_index":161,"title":{},"body":{"classes/AESCrypt.html":{}}}],["valu",{"_index":29,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiPublicKeyService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/CryptUtil.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"classes/InstallationIdCryptService.html":{},"classes/RSACrypt.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/Token.html":{},"classes/TokenCache.html":{},"miscellaneous/enumerations.html":{}}}],["value.ag",{"_index":742,"title":{},"body":{"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"interfaces/SimpleCacheCleaner.html":{}}}],["verifi",{"_index":547,"title":{},"body":{"interfaces/AhoiConfig.html":{}}}],["version",{"_index":1051,"title":{},"body":{"index.html":{}}}],["via",{"_index":1041,"title":{},"body":{"index.html":{}}}],["void",{"_index":203,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AbstractHttpFilter.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AuthHeaderFilter.html":{},"classes/BasicCache.html":{},"interfaces/CacheCleaner.html":{},"classes/EncInstallationIdCache.html":{},"classes/EncryptInstallationIdFilter.html":{},"classes/FetchHttpFactory.html":{},"classes/HttpRequestTimeoutFilter.html":{},"interfaces/SimpleCacheCleaner.html":{},"classes/TokenCache.html":{}}}],["vs",{"_index":337,"title":{},"body":{"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{}}}],["want",{"_index":1138,"title":{},"body":{"index.html":{}}}],["warn",{"_index":238,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warn('cryptkey",{"_index":295,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warn('secret",{"_index":289,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{}}}],["warranti",{"_index":1190,"title":{},"body":{"license.html":{}}}],["way",{"_index":1132,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1205,"title":{},"body":{"license.html":{}}}],["wird",{"_index":1066,"title":{},"body":{"index.html":{}}}],["within",{"_index":1043,"title":{},"body":{"index.html":{}}}],["without",{"_index":254,"title":{},"body":{"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractHttpFilter.html":{},"license.html":{}}}],["wrapper",{"_index":1227,"title":{},"body":{"todo.html":{}}}],["write",{"_index":1223,"title":{},"body":{"todo.html":{}}}],["x",{"_index":455,"title":{},"body":{"classes/AhoiBankingTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{}}}],["xauthhead",{"_index":496,"title":{},"body":{"classes/AhoiBankingTokenService.html":{}}}],["ye",{"_index":50,"title":{},"body":{"classes/AESCrypt.html":{},"classes/AbstractAhoiApiFactory.html":{},"classes/AbstractAhoiAuthenticationService.html":{},"classes/AhoiBankingTokenService.html":{},"classes/AhoiClientTokenService.html":{},"classes/AhoiSessionKeyHeaderService.html":{},"classes/BasicCache.html":{},"classes/FetchHttpFactory.html":{}}}],["you'll",{"_index":1143,"title":{},"body":{"index.html":{}}}],["zu",{"_index":1025,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AESCrypt.html":{"url":"classes/AESCrypt.html","title":"class - AESCrypt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AESCrypt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/aescrypt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                DEFAULT_IV\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                IV_LENGTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decrypt\n                            \n                            \n                                    Static\n                                decryptRandomIV\n                            \n                            \n                                    Static\n                                    Async\n                                encrypt\n                            \n                            \n                                    Static\n                                    Async\n                                encryptRandomIV\n                            \n                            \n                                    Private\n                                    Static\n                                getEncryptionStrength\n                            \n                            \n                                    Private\n                                    Static\n                                iVToBuffer\n                            \n                            \n                                    Private\n                                    Static\n                                keyToBuffer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            DEFAULT_IV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_IV:     Buffer\n\n                    \n                \n                    \n                        \n                            Type :     Buffer\n\n                        \n                    \n                    \n                        \n                            Default value : Buffer.alloc(AESCrypt.IV_LENGTH)\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            IV_LENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IV_LENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decrypt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decrypt(enctext: string, cryptkey: string | Buffer, cipher: Cipher, containsIV: boolean, iv?: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:78\n                            \n                        \n\n\n                \n                    \n                            Decrypts an AES encrypted text\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        enctext\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                                \n                                                        containsIV\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decryptRandomIV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptRandomIV(enctext: string, cryptkey: string | Buffer, cipher: Cipher)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        enctext\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            encrypt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encrypt(text: string, cryptkey: string | Buffer, cipher: Cipher, iv: string | Buffer, addIV: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:40\n                            \n                        \n\n\n                \n                    \n                            Encrypts a string using AES.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AESCrypt.DEFAULT_IV\n                                                        \n\n                                                        \n                                                                A {\n\n                                                        \n                                                \n                                                \n                                                        addIV\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            encryptRandomIV\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptRandomIV(text: string, cryptkey: string | Buffer, cipher: Cipher)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cryptkey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cipher\n                                                        \n                                                                    Cipher\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cipher.DEFAULT\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getEncryptionStrength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEncryptionStrength(key: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:136\n                            \n                        \n\n\n                \n                    \n                            Get the AES encryption strength. For AES encryption allowed are only key with length 128, 192\nor 256 bit.\nNote: it would be more secure to throw an exception if key length does not match these\nrestrictions. On the other hand it is more user friendly to allow keys too, that do not match.\nIn this case other keys are allowed and padded or stripped to 256 bit.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            iVToBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        iVToBuffer(iv: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iv\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            keyToBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyToBuffer(cryptKey: string | Buffer, length: number | string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/aescrypt.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        cryptKey\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        length\n                                                        \n                                                                    number | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\nimport * as crypto from 'crypto';\n\nimport { Base64Util } from './base64util';\nimport { CryptUtil } from './cryptutil';\n\nexport enum Cipher {\n  AES_CBC = 'aes-${strength}-cbc',\n  AES_CTR = 'aes-${strength}-ctr',\n  DEFAULT = 'aes-256-cbc',\n}\nexport class AESCrypt {\n\n  private static readonly IV_LENGTH = 16; // For AES, this is always 16\n\n  private static readonly DEFAULT_IV: Buffer = Buffer.alloc(AESCrypt.IV_LENGTH);\n\n  // Class has only static methods, instantiation should not be possible\n  private constructor() { }\n\n  public static async encryptRandomIV(text: string,\n                                      cryptkey: string | Buffer,\n                                      cipher: Cipher = Cipher.DEFAULT): Promise {\n    const iv: Buffer = Buffer.from(\n      await CryptUtil.createRandomKey(AESCrypt.IV_LENGTH), 'base64');\n    return AESCrypt.encrypt(text, cryptkey, cipher, iv, true);\n  }\n\n  /**\n   * Encrypts a string using AES.\n   *\n   * @param {string} text\n   * @param {(string | Buffer)} cryptkey\n   * @param {string} [cipher=Cipher.AES_CTR]\n   * @param {(string | Buffer)} [iv=AESCrypt.DEFAULT_IV]  A {@link Buffer} or an base64 encrypted string\n   * @param {boolean} [addIV=false]\n   * @returns {Promise}\n   * @memberof AESCrypt\n   */\n  public static async encrypt(text: string,\n                              cryptkey: string | Buffer,\n                              cipher: Cipher = Cipher.DEFAULT,\n                              iv: string | Buffer = AESCrypt.DEFAULT_IV,\n                              addIV: boolean = false): Promise {\n    try {\n      const bufIV = AESCrypt.iVToBuffer(iv);\n      // 128, 192 or 256 bytes\n      const aesKeyLenInBytes = AESCrypt.getEncryptionStrength(cryptkey).toString();\n      // e.g. aes-256-cbc\n      const useCipher = cipher.replace(/\\$\\{strength\\}/, aesKeyLenInBytes);\n      const useCryptKey = AESCrypt.keyToBuffer(cryptkey, useCipher);\n      const cipheriv = crypto.createCipheriv(useCipher, useCryptKey, bufIV);\n      // Add IV only, if it's randomly generated. IV is needed for decryption and must be part of the\n      // encrypted text if no default is used.\n      const encrypted = addIV ? Buffer.concat([bufIV, cipheriv.update(text), cipheriv.final()])\n        : Buffer.concat([cipheriv.update(text), cipheriv.final()]);\n      return encrypted.toString('base64');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  public static decryptRandomIV(enctext: string,\n                                cryptkey: string | Buffer,\n                                cipher: Cipher = Cipher.DEFAULT): string {\n    return AESCrypt.decrypt(enctext, cryptkey, cipher, true);\n  }\n\n  /**\n   * Decrypts an AES encrypted text\n   *\n   * @param {string} enctext\n   * @param {string} [cipher=AESCrypt.AHOI_DEFAULT_CIPHER]\n   * @returns {Promise}\n   * @memberof AESCrypt\n   */\n  public static decrypt(enctext: string,\n                        cryptkey: string | Buffer,\n                        cipher: Cipher = Cipher.DEFAULT,\n                        containsIV: boolean = false,\n                        iv?: string | Buffer): string {\n    try {\n      const encTextBuffer = Buffer.from(Base64Util.urlSafeBase64ToBase64(enctext), 'base64');\n      let bufIV: Buffer;\n      if (containsIV) {\n        bufIV = encTextBuffer.slice(0, AESCrypt.IV_LENGTH);\n      } else if (iv) {\n        bufIV = AESCrypt.iVToBuffer(iv);\n      } else {\n        bufIV = AESCrypt.DEFAULT_IV;\n      }\n      const encryptedText: Buffer = containsIV ? encTextBuffer.slice(AESCrypt.IV_LENGTH) : encTextBuffer;\n      // 128, 192 or 256 bytes\n      const aesKeyLenInBytes = AESCrypt.getEncryptionStrength(cryptkey).toString();\n      // e.g. aes-256-cbc\n      const useCipher = cipher.replace(/\\$\\{strength\\}/, aesKeyLenInBytes);\n      const useCryptKey = AESCrypt.keyToBuffer(cryptkey, useCipher);\n      const decipher = crypto.createDecipheriv(useCipher, useCryptKey, bufIV);\n      return decipher.update(encryptedText, 'binary', 'utf8') + decipher.final().toString('utf8');\n    } catch (err) {\n      error(err);\n      error('Error: %o', err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private static keyToBuffer(cryptKey: string | Buffer, length: number | string = 32): Buffer {\n    const len = typeof length === 'string' ? length.includes('256') ? 32 : 16 : length;\n    let newBuffer: Buffer;\n    if (cryptKey instanceof Buffer) {\n      newBuffer = Buffer.concat([cryptKey, Buffer.alloc(len)]);\n    } else {\n      newBuffer = Buffer.concat([Buffer.from(cryptKey as string), Buffer.alloc(len)]);\n    }\n    return newBuffer.slice(0, len);\n  }\n\n  private static iVToBuffer(iv: string | Buffer): Buffer {\n    const decIV: Buffer = iv instanceof Buffer ? iv : Base64Util.urlSafeBase64Decode(iv);\n    return Buffer.concat([decIV, Buffer.alloc(AESCrypt.IV_LENGTH)]).slice(0, AESCrypt.IV_LENGTH);\n  }\n\n  /**\n   * Get the AES encryption strength. For AES encryption allowed are only key with length 128, 192\n   * or 256 bit.\n   * Note: it would be more secure to throw an exception if key length does not match these\n   * restrictions. On the other hand it is more user friendly to allow keys too, that do not match.\n   * In this case other keys are allowed and padded or stripped to 256 bit.\n   *\n   * @private\n   * @param {(string | Buffer)} key\n   * @returns {number}\n   * @memberof AESCrypt\n   */\n  private static getEncryptionStrength(key: string | Buffer): number {\n    const keyBuf: Buffer = key instanceof Buffer ? key : Buffer.from(key);\n    if (keyBuf.length === 16 || keyBuf.length === 24 || keyBuf.length === 32) {\n      return keyBuf.length * 8;\n    }\n    return 256;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractAhoiApiFactory.html":{"url":"classes/AbstractAhoiApiFactory.html","title":"class - AbstractAhoiApiFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractAhoiApiFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/abstractahoiapifactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ahoiConfiguration\n                            \n                            \n                                    Protected\n                                ahoiHelper\n                            \n                            \n                                    Protected\n                                fetchHttpFactory\n                            \n                            \n                                    Protected\n                                installationIdCryptService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkConfig\n                            \n                            \n                                    Protected\n                                    Async\n                                getApiInstance\n                            \n                            \n                                    Private\n                                initHttpFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ahoiConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ahoiConfiguration:     Configuration\n\n                    \n                \n                    \n                        \n                            Type :     Configuration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ahoiHelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ahoiHelper:     AhoiHelper\n\n                    \n                \n                    \n                        \n                            Type :     AhoiHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fetchHttpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fetchHttpFactory:     FetchHttpFactory\n\n                    \n                \n                    \n                        \n                            Type :     FetchHttpFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            installationIdCryptService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        installationIdCryptService:     InstallationIdCryptService\n\n                    \n                \n                    \n                        \n                            Type :     InstallationIdCryptService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkConfig(config: AhoiConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getApiInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getApiInstance(api, installationId: string, bankingToken?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:54\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bankingToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initHttpFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initHttpFilters(ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService, ahoiSessionKeyHeaderService: AhoiSessionKeyHeaderService, installationIdCryptService: InstallationIdCryptService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/abstractahoiapifactory.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiClientTokenService\n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ahoiSessionKeyHeaderService\n                                                        \n                                                                    AhoiSessionKeyHeaderService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        installationIdCryptService\n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpFilter[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration, FetchAPI } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiConfig } from './config/ahoiconfig';\nimport { AhoiHelper } from './ahoihelper';\nimport { AhoiPublicKeyService } from './auth/ahoipublickey';\nimport { AhoiBankingTokenService } from './auth/bankingtokenauth';\nimport { AhoiClientTokenService } from './auth/clienttokenauth';\nimport { InstallationIdCryptService } from './cryptservice/installationidcryptservice';\nimport { AhoiSessionKeyHeaderService } from './cryptservice/sessionkeyheaderservice';\nimport { FetchHttpFactory } from './httpclient/fetchhttpfactory';\nimport { AuthHeaderFilter } from './httpfilter/authheaderfilter';\nimport { EncryptInstallationIdFilter } from './httpfilter/encryptinstallationidfilter';\nimport { EncryptSessionFilter } from './httpfilter/encryptsessionfilter';\nimport { HttpFilter } from './lib/httpfilter/httpfilter';\nimport { HttpRequestTimeoutFilter } from './httpfilter/httprequesttimeoutfilter';\nimport { debug, warn } from 'console';\n\nexport abstract class AbstractAhoiApiFactory {\n\n  protected fetchHttpFactory: FetchHttpFactory;\n  protected installationIdCryptService!: InstallationIdCryptService;\n  protected ahoiHelper: AhoiHelper;\n  protected ahoiConfiguration: Configuration;\n\n  constructor(protected config: AhoiConfig) {\n\n    this.checkConfig(config);\n\n    /* init services */\n    this.fetchHttpFactory = new FetchHttpFactory();\n    const ahoiPublicKeyService: AhoiPublicKeyService = new AhoiPublicKeyService(this.fetchHttpFactory, config.baseurl);\n    const ahoiSessionKeyHeaderService = new AhoiSessionKeyHeaderService(ahoiPublicKeyService);\n    const ahoiClientTokenService = new AhoiClientTokenService(config);\n    const ahoiBankingTokenService = new AhoiBankingTokenService(config, ahoiClientTokenService);\n\n    // Try to fetch auth token on startup without blocking the thread by using await\n    ahoiClientTokenService.authenticate();\n\n    this.ahoiConfiguration = new Configuration({ basePath: config.baseurl });\n    if (config.cryptKey) {\n      this.installationIdCryptService = new InstallationIdCryptService(config.cryptKey);\n    }\n    this.ahoiHelper = new AhoiHelper(this.installationIdCryptService, ahoiClientTokenService, ahoiBankingTokenService);\n\n    /* init http filters */\n    const httpfilter: HttpFilter[] =\n      this.initHttpFilters(ahoiClientTokenService,\n                           ahoiBankingTokenService,\n                           ahoiSessionKeyHeaderService,\n                           this.installationIdCryptService);\n    this.fetchHttpFactory.setHttpFilter(httpfilter);\n  }\n\n  protected async getApiInstance(api: (new (configuration: Configuration,\n                                               basePath: string, fetch: FetchAPI) => T),\n                                    installationId: string,\n                                    bankingToken?: string): Promise {\n    debug('InstallationId %s', installationId);\n    return new api(this.ahoiConfiguration, this.ahoiConfiguration.basePath || '',\n                   this.fetchHttpFactory.getHttpClient(installationId, bankingToken));\n  }\n\n  private initHttpFilters(ahoiClientTokenService: AhoiClientTokenService,\n                          ahoiBankingTokenService: AhoiBankingTokenService,\n                          ahoiSessionKeyHeaderService: AhoiSessionKeyHeaderService,\n                          installationIdCryptService: InstallationIdCryptService): HttpFilter[] {\n    const filters: HttpFilter[] = [];\n    if (installationIdCryptService) {\n      filters.push(new EncryptInstallationIdFilter(installationIdCryptService,\n                                                   ahoiClientTokenService,\n                                                   ahoiBankingTokenService));\n    }\n    filters.push(new EncryptSessionFilter(ahoiSessionKeyHeaderService,\n                                          ahoiClientTokenService,\n                                          ahoiBankingTokenService));\n    filters.push(new AuthHeaderFilter(ahoiClientTokenService, ahoiBankingTokenService));\n    filters.push(new HttpRequestTimeoutFilter(ahoiClientTokenService, ahoiBankingTokenService));\n    return filters;\n  }\n\n  private checkConfig(config: AhoiConfig): void {\n    if (!config.baseurl) {\n      throw new Error('URL to AHOI API is missing in configuration (property: baseurl');\n    }\n    if (!config.clientId || !config.clientSecret) {\n      throw new Error('Credentials for the AHOI API are missing in configuration (properties: clientId, clientSecret)');\n    }\n    if (!config.appSecretIv || !config.appSecretKey) {\n      warn('Secret or SecreIV are missing in configuration. \\\n      Encryption support is not available (properties appSecretKey, appSecretIv)');\n    }\n    if (!config.cryptKey) {\n      warn('CryptKey is missing in configuration. CryptSupport for InstallationId is not \\\n      available (property: cryptKey)');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractAhoiAuthenticationService.html":{"url":"classes/AbstractAhoiAuthenticationService.html","title":"class - AbstractAhoiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractAhoiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/abstractauth.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/abstractauth.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/abstractauth.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\n\nimport nodeFetch, { FetchError, Headers, RequestInit, Response } from 'node-fetch';\n\nimport { AhoiConfig } from '../config/ahoiconfig';\nimport { Token } from './token';\n\nexport abstract class AbstractAhoiAuthenticationService {\n\n  public static readonly AUTH_URI: string = '/auth/v1/oauth/token';\n  public static readonly AUTH_CREDENTIALS_PARAMETER = 'grant_type=client_credentials';\n\n  protected readonly uri: string;\n\n  constructor(protected config: AhoiConfig) {\n    const baseUrl = this.getBaseUrl(config.baseurl);\n    // tslint:disable-next-line:max-line-length\n    this.uri = `${baseUrl}${AbstractAhoiAuthenticationService.AUTH_URI}?${AbstractAhoiAuthenticationService.AUTH_CREDENTIALS_PARAMETER}`;\n  }\n\n  protected async callAhoiOAuthServer(headerMap?: Map): Promise {\n    const headers: Headers = this.createAuthHeaders(headerMap);\n    const options: RequestInit = {\n      headers,\n      method: 'POST',\n      timeout: 10000, // 10 sec,\n      compress: true,\n    };\n\n    try {\n      const response: Response = await nodeFetch(this.uri, options);\n      if (response.ok) {\n        const token: any = await response.json();\n        return new Token(token.access_token);\n      }\n      const errorMsg = await response.text();\n      throw new FetchError(errorMsg, 'auth-error', '');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private mergeHeaders(headers: Headers, headerMap?: Map): void {\n    if (headerMap) {\n      for (const [key, value] of headerMap) {\n        headers.set(key, value);\n      }\n    }\n  }\n\n  private createAuthHeaders(headerMap?: Map): Headers {\n    const authHeaders: any = {\n      // tslint:disable-next-line:prefer-template\n      Authorization: 'Basic ' + Buffer.from(`${this.config.clientId}:${this.config.clientSecret}`)\n        .toString('base64'),\n      accept: 'application/json',\n      'content-type': 'application/json;charset=UTF-8',\n    };\n\n    const headers: Headers = new Headers(authHeaders);\n    this.mergeHeaders(headers, headerMap);\n    return headers;\n  }\n\n  /**\n   * Extracts protocol and domain from given url\n   * Given 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n   * 'https://banking-sandbox.starfinanz.de'\n   * This helper function is needed as the base url for the AHOI authorization server may have a\n   * different base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n   *\n   * @private\n   * @param {string} baseUrl\n   * @returns {string}\n   * @memberof AhoiAuthenticationService\n   */\n  private getBaseUrl(baseUrl: string): string {\n    const start = baseUrl.search(/\\/\\//);\n    const protocol = baseUrl.substring(0, start === -1 ? 0 : start + 2);\n    const domain = (baseUrl.substring(protocol.length).match(/[^\\/]+/) || [''])[0];\n    return protocol + domain;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpFilter.html":{"url":"classes/AbstractHttpFilter.html","title":"class - AbstractHttpFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/abstracthttpfilter.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { Headers } from 'node-fetch';\n\nimport { AhoiBankingTokenService } from '../auth/bankingtokenauth';\nimport { AhoiClientTokenService } from '../auth/clienttokenauth';\nimport { Token } from '../auth/token';\nimport { HttpContext, HttpFilter } from '../lib/httpfilter/httpfilter';\n\nexport abstract class AbstractHttpFilter implements HttpFilter {\n\n  constructor(protected ahoiClientTokenService: AhoiClientTokenService,\n              protected ahoiBankingTokenService: AhoiBankingTokenService) { }\n\n  public async matches(httpContext: HttpContext): Promise {\n    return false;\n  }\n\n  public async doFilter(httpContext: HttpContext): Promise {\n    if (httpContext.isrequest) {\n      debug('doFilter %s', httpContext.url);\n      await this.filterRequest(httpContext);\n    } else {\n      if (httpContext.response.status >= 200 && httpContext.response.status  {\n            return responseData;\n          };\n        }\n      }\n    }\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise { }\n\n  protected async filterResponse(httpContext: HttpContext): Promise { return null; }\n\n  protected usesMethod(httpContext: HttpContext, method: string): boolean {\n    if (httpContext.options.method && method) {\n      return httpContext.options.method.toLowerCase() === method.toLowerCase();\n    }\n    return false;\n  }\n\n  protected async getResponse(httpContext: HttpContext): Promise {\n    const responseData = await httpContext.response.json();\n    return responseData as T;\n  }\n\n  protected setHeader(httpContext: HttpContext, name: string, value: any): void {\n    if (httpContext.options.headers instanceof Headers) {\n      httpContext.options.headers.set(name, value);\n    } else {\n      httpContext.options.headers = { ...httpContext.options.headers, [name]: value };\n    }\n  }\n\n  protected async getAuthToken(httpContext: HttpContext): Promise {\n    if (!httpContext.authToken) {\n      httpContext.authToken = await this.ahoiClientTokenService.authenticate();\n    }\n    return httpContext.authToken;\n  }\n\n  protected async getBankingToken(httpContext: HttpContext): Promise {\n    if (!httpContext.bankingToken) {\n      if (!httpContext.installationid) {\n        throw ('Can not get banking token without installationId.');\n      }\n      debug('fetch banking token');\n      httpContext.bankingToken = await this.ahoiBankingTokenService.authenticate(httpContext.installationid);\n      debug('token is %o', httpContext.bankingToken);\n    }\n    return httpContext.bankingToken;\n  }\n\n  protected async getToken(httpContext: HttpContext): Promise {\n    return httpContext.installationid ? this.getBankingToken(httpContext) : this.getAuthToken(httpContext);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiBankingTokenService.html":{"url":"classes/AhoiBankingTokenService.html","title":"class - AhoiBankingTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiBankingTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/bankingtokenauth.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractAhoiAuthenticationService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AUTH_BANKINGTOKEN_HEADER\n                            \n                            \n                                    Private\n                                    Readonly\n                                tokencache\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Private\n                                    Async\n                                createAuthHeader\n                            \n                            \n                                    Private\n                                    Async\n                                useEncryption\n                            \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AhoiConfig, ahoiClientTokenService: AhoiClientTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AhoiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_BANKINGTOKEN_HEADER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_BANKINGTOKEN_HEADER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Authorization-Ahoi'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tokencache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokencache:     TokenCache\n\n                    \n                \n                    \n                        \n                            Type :     TokenCache\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:34\n                            \n                        \n\n\n                \n                    \n                            Authenticate and authorize the user with the given installationId against AHOI using OAuth 2.0\nprotocol. The returned authorization token called 'banking token' is needed to access the AHOI\nendpoints e.g. to get transactions.\nsee: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            createAuthHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeader(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            useEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        useEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/bankingtokenauth.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { AhoiConfig } from '../config/ahoiconfig';\nimport { TokenCache } from '../cache/tokencache';\nimport { AESCrypt, Cipher } from '../lib/crypt/aescrypt';\nimport { Base64Util } from '../lib/crypt/base64util';\nimport { CryptUtil } from '../lib/crypt/cryptutil';\nimport { AbstractAhoiAuthenticationService } from './abstractauth';\nimport { AhoiClientTokenService } from './clienttokenauth';\nimport { Token } from './token';\n\nexport class AhoiBankingTokenService extends AbstractAhoiAuthenticationService {\n\n  public static readonly AUTH_BANKINGTOKEN_HEADER = 'X-Authorization-Ahoi';\n\n  private readonly tokencache: TokenCache;\n\n  constructor(config: AhoiConfig,\n              private ahoiClientTokenService: AhoiClientTokenService) {\n    super(config);\n    this.tokencache = new TokenCache();\n  }\n\n  /**\n   * Authenticate and authorize the user with the given installationId against AHOI using OAuth 2.0\n   * protocol. The returned authorization token called 'banking token' is needed to access the AHOI\n   * endpoints e.g. to get transactions.\n   * see: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n   *\n   * @param {string} installationid\n   * @returns {Promise}\n   * @memberof AhoiBankingTokenService\n   */\n  public async authenticate(installationId: string): Promise {\n    const token = this.tokencache.get(installationId);\n    debug('Get token from cache %s', token);\n    if (token && !token.isExpired()) {\n      debug('Get banking token from cache %o', token);\n      return token;\n    }\n\n    const authHeader: Map = await this.createAuthHeader(installationId);\n    debug('AuthHeader %o', authHeader);\n    const bankingtoken = await this.callAhoiOAuthServer(authHeader);\n    this.tokencache.set(installationId, bankingtoken);\n    debug('Return banking token %o', bankingtoken);\n    return bankingtoken;\n  }\n\n  private async createAuthHeader(installationId: string): Promise> {\n    const authHeaders = new Map();\n    const xAuthHeader: string = JSON.stringify({\n      installationId,\n      // 32 byte random string\n      nonce: await CryptUtil.generateNonce(32),\n      timestamp: new Date().toISOString(),\n    });\n    debug(xAuthHeader);\n\n    const useEncryption = await this.useEncryption();\n    let encXAuthHeader: string = '';\n    if (useEncryption) {\n      debug('Header must be encrypted, encrypt header...');\n      // encrypt xAuthHeader (X-Authorization - Ahoi)\n      encXAuthHeader = await AESCrypt.encrypt(xAuthHeader,\n                                              Base64Util.urlSafeBase64Decode(this.config.appSecretKey!),\n                                              Cipher.AES_CBC,\n                                              this.config.appSecretIv!);\n    }\n\n    authHeaders.set(AhoiBankingTokenService.AUTH_BANKINGTOKEN_HEADER,\n                    encXAuthHeader ? Base64Util.base64ToUrlSafeBase64(encXAuthHeader)\n        : Base64Util.urlSafeBase64Encode(xAuthHeader));\n    return authHeaders;\n  }\n\n  private async useEncryption(): Promise {\n    const accessToken: Token = await this.ahoiClientTokenService.authenticate();\n    if (accessToken.useEncryption() && this.config.appSecretKey && this.config.appSecretIv) {\n      return true;\n    }\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiClientTokenService.html":{"url":"classes/AhoiClientTokenService.html","title":"class - AhoiClientTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiClientTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/clienttokenauth.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractAhoiAuthenticationService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accesstoken\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                                    Static\n                                    Readonly\n                                AUTH_URI\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Protected\n                                    Async\n                                callAhoiOAuthServer\n                            \n                            \n                                    Private\n                                createAuthHeaders\n                            \n                            \n                                    Private\n                                getBaseUrl\n                            \n                            \n                                    Private\n                                mergeHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            accesstoken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accesstoken:     Token\n\n                    \n                \n                    \n                        \n                            Type :     Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/clienttokenauth.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_CREDENTIALS_PARAMETER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CREDENTIALS_PARAMETER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'grant_type=client_credentials'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            AUTH_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/auth/v1/oauth/token'\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/clienttokenauth.ts:18\n                            \n                        \n\n\n                \n                    \n                            Authenticate and authorize the client using clientId and client-Secret against AHOI using the\nOAuth 2.0 protocol.\nThe returned authorization token is needed to register new users.\nsee: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            callAhoiOAuthServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callAhoiOAuthServer(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createAuthHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAuthHeaders(headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Headers\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl(baseUrl: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:78\n                            \n                        \n\n\n                \n                    \n                            Extracts protocol and domain from given url\nGiven 'https://banking-sandbox.starfinanz.de/ahoi/api/v2' the result is\n'https://banking-sandbox.starfinanz.de'\nThis helper function is needed as the base url for the AHOI authorization server may have a\ndifferent base url than the resource server (currently: /auth/v1 vs. /ahoi/api/v2)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mergeHeaders(headers: Headers, headerMap?: Map)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractAhoiAuthenticationService\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractAhoiAuthenticationService:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headerMap\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractAhoiAuthenticationService } from './abstractauth';\nimport { Token } from './token';\nimport { debug } from 'console';\n\nexport class AhoiClientTokenService extends AbstractAhoiAuthenticationService {\n\n  private accesstoken!: Token;\n\n  /**\n   * Authenticate and authorize the client using clientId and client-Secret against AHOI using the\n   * OAuth 2.0 protocol.\n   * The returned authorization token is needed to register new users.\n   * see: https://banking-sandbox.starfinanz.de/ahoi/docs/cookbook/index.html#authentication\n   *\n   * @returns {Promise}\n   * @memberof AhoiClientTokenService\n   */\n  public async authenticate(): Promise {\n    if (this.accesstoken && !this.accesstoken.isExpired()) {\n      debug('Client token is not expired, return %o', this.accesstoken);\n      return this.accesstoken;\n    }\n\n    this.accesstoken = await this.callAhoiOAuthServer();\n    debug('Get new client token, return %o', this.accesstoken);\n    return this.accesstoken;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AhoiConfig.html":{"url":"interfaces/AhoiConfig.html","title":"interface - AhoiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AhoiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/config/ahoiconfig.ts\n        \n\n            \n                Description\n            \n            \n                Configuration data that is needed to access the AHOI API. To get the access data for the AHOI API\n(clientId, clientSecret, appSecretIv, appSecretKey) you have to create an account before, e.g. at\nAHOI sandbox to test the API (https://banking-sandbox.starfinanz.de/sandboxmanager/).\nappSecretIv and appSecretKey must only be given, if sensitive data like bank access PIN must be\nencrypted before sending a request to AHOI. Usually connections between application server and\nAHOI are secured using client certificate (handed over to AHOI before so AHOI can verify the\nrequest is from a known server) and SSL secured connection to AHOI server. If AHOI does not have\na client certificate from your application server, encryption must be activated. This can be done\nin your AHOI (sandbox) account.\nThe security guidelines from AHOI require that every installationid must be stored e.g. in a\ndatabase encrypted to ensure, they can't be used in case they are lost or stolen (e.g. your\nserver have been hacked). If you set an cryptKey in cofiguration, all installationid's will be\nautomatically encrypt so you do not have to deal with that. It is recommended, to use this\nfeature.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        appSecretIv\n                                \n                                \n                                            Optional\n                                        appSecretKey\n                                \n                                \n                                        baseurl\n                                \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                            Optional\n                                        cryptKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appSecretIv\n                                    \n                                \n                                \n                                    \n                                        appSecretIv:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appSecretKey\n                                    \n                                \n                                \n                                    \n                                        appSecretKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseurl\n                                    \n                                \n                                \n                                    \n                                        baseurl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cryptKey\n                                    \n                                \n                                \n                                    \n                                        cryptKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AhoiConfig {\n  clientId: string;\n  clientSecret: string;\n  appSecretIv?: string;\n  appSecretKey?: string;\n  baseurl: string;\n  cryptKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiHelper.html":{"url":"classes/AhoiHelper.html","title":"class - AhoiHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/ahoihelper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                encryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Public\n                                    Async\n                                getClientAuthToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(installationIdCryptService: InstallationIdCryptService, ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/ahoihelper.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationIdCryptService\n                                                  \n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encryptedInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encryptedInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            encryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptInstallationId(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getClientAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getClientAuthToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/ahoihelper.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AhoiBankingTokenService } from './auth/bankingtokenauth';\nimport { AhoiClientTokenService } from './auth/clienttokenauth';\nimport { Token } from './auth/token';\nimport { InstallationIdCryptService } from './cryptservice/installationidcryptservice';\n\nexport class AhoiHelper {\n\n  constructor(private installationIdCryptService: InstallationIdCryptService,\n              private ahoiClientTokenService: AhoiClientTokenService,\n              private ahoiBankingTokenService: AhoiBankingTokenService) { }\n\n  public async encryptInstallationId(installationId: string): Promise {\n    if (this.installationIdCryptService) {\n      return this.installationIdCryptService.encryptInstallationId(installationId);\n    }\n    throw new Error('InstallationId can not be encrypted. No cryptKey is set in configuration');\n  }\n\n  public decryptInstallationId(encryptedInstallationId: string): string {\n    if (this.installationIdCryptService) {\n      return this.installationIdCryptService.decryptInstallationId(encryptedInstallationId);\n    }\n    throw new Error('InstallationId can not be encrypted. No cryptKey is set in configuration');\n  }\n\n  public async getBankingToken(installationId: string): Promise {\n    const encInstallationId = await this.encryptInstallationId(installationId);\n    return this.ahoiBankingTokenService.authenticate(encInstallationId);\n  }\n\n  public async getClientAuthToken(): Promise {\n    return this.ahoiClientTokenService.authenticate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiPublicKeyService.html":{"url":"classes/AhoiPublicKeyService.html","title":"class - AhoiPublicKeyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiPublicKeyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/ahoipublickey.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                headers\n                            \n                            \n                                    Static\n                                    Readonly\n                                PUBLIC_KEY_URI\n                            \n                            \n                                    Private\n                                publicKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getPublicKey\n                            \n                            \n                                    Private\n                                isExpired\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientFactory: FetchHttpFactory, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientFactory\n                                                  \n                                                        \n                                                                    FetchHttpFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     Headers\n\n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n                    \n                        \n                            Default value : new Headers({\n    accept: 'application/json',\n    'content-type': 'application/json;charset=UTF-8',\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PUBLIC_KEY_URI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PUBLIC_KEY_URI:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/registration/keys'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            publicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        publicKey:     RegistrationPublicKey\n\n                    \n                \n                    \n                        \n                            Type :     RegistrationPublicKey\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getPublicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPublicKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExpired(key: RegistrationPublicKey)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/ahoipublickey.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error } from 'console';\n\nimport { FetchAPI, RegistrationPublicKey } from 'ahoi-swagger-fetchclient';\nimport { FetchError, Headers, RequestInit } from 'node-fetch';\n\nimport { FetchHttpFactory } from '../httpclient/fetchhttpfactory';\n\nexport class AhoiPublicKeyService {\n\n  public static readonly PUBLIC_KEY_URI: string = '/registration/keys';\n  private static readonly headers: Headers = new Headers({\n    accept: 'application/json',\n    'content-type': 'application/json;charset=UTF-8',\n  });\n\n  private publicKey!: RegistrationPublicKey;\n  private readonly uri: string;\n\n  constructor(private readonly httpClientFactory: FetchHttpFactory, baseUrl: string) {\n    this.uri = `${baseUrl}${AhoiPublicKeyService.PUBLIC_KEY_URI}`;\n  }\n\n  public async getPublicKey(): Promise {\n    if (this.publicKey && !this.isExpired(this.publicKey)) {\n      return this.publicKey;\n    }\n\n    const options: RequestInit = {\n      headers: AhoiPublicKeyService.headers,\n      method: 'GET',\n      timeout: 5000, // 5 sec,\n      compress: true,\n    };\n\n    try {\n      const httpClient: FetchAPI = this.httpClientFactory.getHttpClient();\n      const response = await httpClient(this.uri, options);\n      if (response.ok) {\n        const regPublicKey: RegistrationPublicKey = await response.json();\n        this.publicKey = regPublicKey;\n        return regPublicKey;\n      }\n      const errorMsg = await response.text();\n      throw new FetchError(errorMsg, 'pubkey-error', '');\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n  }\n\n  private isExpired(key: RegistrationPublicKey): boolean {\n    // add 1 min. as buffer to be safe if connection is slow\n    return new Date(key.validUntil).getTime() + 60 * 1000 \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AhoiSessionKeyHeaderService.html":{"url":"classes/AhoiSessionKeyHeaderService.html","title":"class - AhoiSessionKeyHeaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AhoiSessionKeyHeaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                SESSIONKEY_HEADER_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSessionKeyHeader\n                            \n                            \n                                    Private\n                                encryptSessionKey\n                            \n                            \n                                    Public\n                                    Async\n                                generateSessionKey\n                            \n                            \n                                    Public\n                                    Async\n                                getHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ahoiPublicKeyService: AhoiPublicKeyService)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ahoiPublicKeyService\n                                                  \n                                                        \n                                                                    AhoiPublicKeyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SESSIONKEY_HEADER_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SESSIONKEY_HEADER_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'X-Ahoi-Session-Security'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createSessionKeyHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createSessionKeyHeader(publicKey: RegistrationPublicKey, encryptedSessionKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publicKey\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        encryptedSessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            encryptSessionKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptSessionKey(sessionKey: string, publicAhoiKey: RegistrationPublicKey)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        publicAhoiKey\n                                                        \n                                                                    RegistrationPublicKey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            generateSessionKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateSessionKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader(sessionKey?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/sessionkeyheaderservice.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegistrationPublicKey } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiPublicKeyService } from '../auth/ahoipublickey';\nimport { Base64Util } from '../lib/crypt/base64util';\nimport { CryptUtil } from '../lib/crypt/cryptutil';\nimport { RSACrypt } from '../lib/crypt/rsacrypt';\n\nexport class AhoiSessionKeyHeaderService {\n\n  public static readonly SESSIONKEY_HEADER_NAME = 'X-Ahoi-Session-Security';\n\n  constructor(private ahoiPublicKeyService: AhoiPublicKeyService) { }\n\n  public async getHeader(sessionKey?: string): Promise {\n    const publicKey: RegistrationPublicKey = await this.ahoiPublicKeyService.getPublicKey();\n    const useSessionKey = sessionKey ? sessionKey : await this.generateSessionKey();\n    const encryptedSessionKey: string = this.encryptSessionKey(useSessionKey, publicKey);\n    return this.createSessionKeyHeader(publicKey, encryptedSessionKey);\n  }\n\n  public async generateSessionKey(): Promise {\n    // 32 byte random string that is used to encrypt the installationid using AES 256 CBC\n    return CryptUtil.createRandomKey(32);\n  }\n\n  private encryptSessionKey(sessionKey: string, publicAhoiKey: RegistrationPublicKey): string {\n    const pubKey = publicAhoiKey.publicKey.value;\n    return RSACrypt.encryptWithRsaPublicKey(sessionKey, pubKey);\n  }\n\n  private createSessionKeyHeader(publicKey: RegistrationPublicKey,\n                                 encryptedSessionKey: string): string {\n    const sessionSecHeader = JSON.stringify({\n      publicKeyId: publicKey.keyId,\n      sessionKey: encryptedSessionKey,\n      keySpecification: 'AES', // AES/CBC/PKCS5Padding, SHA-256\n    });\n    return Base64Util.urlSafeBase64Encode(sessionSecHeader);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthHeaderFilter.html":{"url":"classes/AuthHeaderFilter.html","title":"class - AuthHeaderFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthHeaderFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/authheaderfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:22\n                            \n                        \n\n\n                \n                    \n                            Set the OAuth 2 authentication header (Bearer token). Depepending on called endpoint, the\nclient auth token or the banking token will be set.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/authheaderfilter.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from '../auth/token';\nimport { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class AuthHeaderFilter extends AbstractHttpFilter {\n\n  public async matches(httpContext: HttpContext): Promise {\n    // add bearer token from client authentication or user authentication (banking token) to all\n    // requests\n    return httpContext.isrequest;\n  }\n\n  /**\n   * Set the OAuth 2 authentication header (Bearer token). Depepending on called endpoint, the\n   * client auth token or the banking token will be set.\n   *\n   * @protected\n   * @param {HttpContext} httpContext\n   * @returns {Promise}\n   * @memberof AuthHeaderFilter\n   */\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    // FIXME: registration update (PUT) -> client or banking token?\n    let bearerToken: Token;\n    if (httpContext.url.endsWith('/registration') && this.usesMethod(httpContext, 'POST')\n      || httpContext.url.endsWith('/registration/keys')) {\n      bearerToken = await this.getAuthToken(httpContext);\n    } else {\n      bearerToken = await this.getBankingToken(httpContext);\n    }\n    this.setHeader(httpContext, 'Authorization', `Bearer ${bearerToken.getAccessToken()}`);\n    // debug(httpContext.options.headers);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base64Util.html":{"url":"classes/Base64Util.html","title":"class - Base64Util","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base64Util\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/base64util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                base64ToUrlSafeBase64\n                            \n                            \n                                    Static\n                                urlSafeBase64Decode\n                            \n                            \n                                    Static\n                                urlSafeBase64Encode\n                            \n                            \n                                    Static\n                                urlSafeBase64ToBase64\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            base64ToUrlSafeBase64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        base64ToUrlSafeBase64(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64Decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64Decode(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Buffer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64Encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64Encode(text: string | Buffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string | Buffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            urlSafeBase64ToBase64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        urlSafeBase64ToBase64(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/base64util.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Base64Util {\n\n  public static urlSafeBase64ToBase64(text: string): string {\n    return text.replace(/-/g, '+').replace(/_/g, '/');\n  }\n\n  public static base64ToUrlSafeBase64(text: string): string {\n    return text.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n\n  public static urlSafeBase64Encode(text: string | Buffer): string {\n    let base64Text: string;\n    if (text instanceof Buffer) {\n      base64Text = text.toString('base64');\n    } else {\n      base64Text = Buffer.from(text).toString('base64');\n    }\n    return Base64Util.base64ToUrlSafeBase64(base64Text);\n  }\n\n  public static urlSafeBase64Decode(text: string): Buffer {\n    if (!text) {\n      return Buffer.alloc(0);\n    }\n    return Buffer.from(Base64Util.urlSafeBase64ToBase64(text), 'base64');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicCache.html":{"url":"classes/BasicCache.html","title":"class - BasicCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxEntries: number, tidyFunction?: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxEntries\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tidyFunction\n                                                  \n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cleanInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/cache/basiccache.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheCleaner.html":{"url":"interfaces/CacheCleaner.html","title":"interface - CacheCleaner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheCleaner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [cacheMap: Map]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     void\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptUtil.html":{"url":"classes/CryptUtil.html","title":"class - CryptUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/cryptutil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                createRandomKey\n                            \n                            \n                                    Static\n                                generateNonce\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            createRandomKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRandomKey(keyLen: \"16\" | \"24\" | \"32\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        keyLen\n                                                        \n                                                                    \"16\" | \"24\" | \"32\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateNonce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateNonce(length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/cryptutil.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                32\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\n\nexport class CryptUtil {\n\n  private constructor() { }\n\n  public static async createRandomKey(keyLen: 16 | 24 | 32 = 32): Promise {\n    return new Promise((resolve, reject) => {\n      crypto.randomBytes(keyLen, (err: Error | null, buf: Buffer) => {\n        if (err || !buf) {\n          console.log(err);\n          reject(err);\n        } else {\n          resolve(buf.toString('base64'));\n        }\n      });\n    });\n  }\n\n  public static generateNonce(length: number = 32) {\n    return [...Array(length)].map(i => (~~(Math.random() * 36)).toString(36)).join('');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncInstallationIdCache.html":{"url":"classes/EncInstallationIdCache.html","title":"class - EncInstallationIdCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncInstallationIdCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cache/encinstallationidcache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DECRYPTED_INSTALLATIONID_CACHE_SIZE\n                            \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cache/encinstallationidcache.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DECRYPTED_INSTALLATIONID_CACHE_SIZE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DECRYPTED_INSTALLATIONID_CACHE_SIZE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/encinstallationidcache.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BasicCache } from '../lib/cache/basiccache';\n\nexport class EncInstallationIdCache extends BasicCache {\n\n  public static readonly DECRYPTED_INSTALLATIONID_CACHE_SIZE = 1000;\n\n  constructor() {\n    super(EncInstallationIdCache.DECRYPTED_INSTALLATIONID_CACHE_SIZE);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptInstallationIdFilter.html":{"url":"classes/EncryptInstallationIdFilter.html","title":"class - EncryptInstallationIdFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptInstallationIdFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                idCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                decryptInstallationId\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(installationIdCryptService: InstallationIdCryptService, ahoiClientTokenService: AhoiClientTokenService, ahoiBankingTokenService: AhoiBankingTokenService, useEncryption: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationIdCryptService\n                                                  \n                                                        \n                                                                    InstallationIdCryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiClientTokenService\n                                                  \n                                                        \n                                                                    AhoiClientTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ahoiBankingTokenService\n                                                  \n                                                        \n                                                                    AhoiBankingTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        useEncryption\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            idCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        idCache:     EncInstallationIdCache\n\n                    \n                \n                    \n                        \n                            Type :     EncInstallationIdCache\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/encryptinstallationidfilter.ts:33\n                            \n                        \n\n\n                \n                    \n                            Decrypts installationid if it is available and encrypted. Encrypts installationid's that are\nrequested from AHOI Registration endpoint if encryption of installationid's is activated in\nconfiguration ({AhoiConfig.encryptInstallationId).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error, info } from 'console';\n\nimport { RegistrationResponse } from 'ahoi-swagger-fetchclient';\n\nimport { AhoiBankingTokenService } from '../auth/bankingtokenauth';\nimport { AhoiClientTokenService } from '../auth/clienttokenauth';\nimport { EncInstallationIdCache } from '../cache/encinstallationidcache';\nimport { InstallationIdCryptService } from '../cryptservice/installationidcryptservice';\nimport { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class EncryptInstallationIdFilter extends AbstractHttpFilter {\n\n  private idCache: EncInstallationIdCache;\n\n  constructor(private installationIdCryptService: InstallationIdCryptService,\n              ahoiClientTokenService: AhoiClientTokenService,\n              ahoiBankingTokenService: AhoiBankingTokenService,\n              private useEncryption: boolean = true) {\n    super(ahoiClientTokenService, ahoiBankingTokenService);\n    this.idCache = new EncInstallationIdCache();\n  }\n\n  /**\n   * Decrypts installationid if it is available and encrypted. Encrypts installationid's that are\n   * requested from AHOI Registration endpoint if encryption of installationid's is activated in\n   * configuration ({AhoiConfig.encryptInstallationId).\n   *\n   * @param {HttpContext} httpContext\n   * @returns {Promise}\n   * @memberof InstallationIdCryptFilter\n   */\n  public async matches(httpContext: HttpContext): Promise {\n    if (httpContext.installationid\n      && httpContext.isrequest\n      || !httpContext.isrequest\n      && this.useEncryption\n      && httpContext.url.endsWith('/registration')\n      && this.usesMethod(httpContext, 'POST')) {\n      return true;\n    }\n    return false;\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    if (httpContext.installationid\n      && this.installationIdCryptService.isEncrypted(httpContext.installationid)) {\n      try {\n        httpContext.installationid = this.decryptInstallationId(httpContext.installationid);\n      } catch (e) {\n        error(e);\n        throw new Error('InstallationId is invalid and can not be decrypted');\n      }\n    }\n  }\n\n  protected async filterResponse(httpContext: HttpContext): Promise {\n    const response: RegistrationResponse = await httpContext.response.json();\n    if (response.installation) {\n      const encryptedInstallationId =\n        await this.installationIdCryptService.encryptInstallationId(response.installation);\n      this.idCache.set(encryptedInstallationId, response.installation);\n      return {\n        installation: encryptedInstallationId,\n      };\n    }\n    debug('Installationid is empty in filterResponse');\n    return null;\n  }\n\n  protected decryptInstallationId(encInstallationId: string): string {\n    let decInstallationId: string | undefined = this.idCache.get(encInstallationId);\n    if (!decInstallationId) {\n      try {\n        decInstallationId = this.installationIdCryptService.decryptInstallationId(encInstallationId);\n      } catch (e) {\n        error(e);\n        throw e instanceof Error ? e : new Error(e);\n      }\n      this.idCache.set(encInstallationId, decInstallationId);\n    }\n    return decInstallationId;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchHttpFactory.html":{"url":"classes/FetchHttpFactory.html","title":"class - FetchHttpFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchHttpFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts\n        \n\n            \n                Description\n            \n            \n                This class provides an fetch http client to send requests the AHOI API. Request parameter, header\nand data and the response from AHOI can be changed using filters FetchHttpFilter.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpRequestFilters\n                            \n                            \n                                    Private\n                                httpResponseFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                applyFilterAndExecuteRequest\n                            \n                            \n                                    Private\n                                    Async\n                                applyFilters\n                            \n                            \n                                    Public\n                                getHttpClient\n                            \n                            \n                                    Public\n                                setHttpFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpRequestFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpRequestFilters:     HttpFilter[]\n\n                    \n                \n                    \n                        \n                            Type :     HttpFilter[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpResponseFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpResponseFilters:     HttpFilter[]\n\n                    \n                \n                    \n                        \n                            Type :     HttpFilter[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            applyFilterAndExecuteRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilterAndExecuteRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            applyFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilters(httpContext: HttpContext, httpFilters: HttpFilter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpFilters\n                                                        \n                                                                    HttpFilter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHttpClient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHttpClient(installationId?: string, bankingToken?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:46\n                            \n                        \n\n\n                \n                    \n                            The generated AHOI API client takes as initialization parameters a configuration, a baseurl and\nan httpclient {FetchAPI}. This method returns a function as an implementation of the FetchAPI\nthat allows to change request to the AHOI API and the response using filters\nFetchHttpFilter.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bankingToken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FetchAPI\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setHttpFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHttpFilter(httpFilters: HttpFilter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpclient/fetchhttpfactory.ts:31\n                            \n                        \n\n\n                \n                    \n                            Set http filters that will be applied to every request and response. The filters will be called\nin given order for requests and in reverse order for responses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpFilters\n                                                        \n                                                                    HttpFilter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error } from 'console';\n\nimport { FetchAPI } from 'ahoi-swagger-fetchclient';\nimport nodeFetch, { FetchError, RequestInit, Response } from 'node-fetch';\n\nimport { Token } from '../auth/token';\nimport { HttpContext, HttpFilter } from '../lib/httpfilter/httpfilter';\n\n/**\n * This class provides an fetch http client to send requests the AHOI API. Request parameter, header\n * and data and the response from AHOI can be changed using filters {@link FetchHttpFilter}.\n *\n * @export\n * @class FetchHttpFactory\n */\nexport class FetchHttpFactory {\n\n  private httpRequestFilters: HttpFilter[] = [];\n  // same as request filters but in reverse order\n  private httpResponseFilters: HttpFilter[] = [];\n\n  constructor() { }\n\n  /**\n   * Set http filters that will be applied to every request and response. The filters will be called\n   * in given order for requests and in reverse order for responses.\n   *\n   * @param {HttpFilter[]} httpFilters\n   * @memberof FetchHttpFactory\n   */\n  public setHttpFilter(httpFilters: HttpFilter[]): void {\n    this.httpRequestFilters = [...httpFilters];\n    this.httpResponseFilters = [...httpFilters].reverse();\n  }\n\n  /**\n   * The generated AHOI API client takes as initialization parameters a configuration, a baseurl and\n   * an httpclient {FetchAPI}. This method returns a function as an implementation of the FetchAPI\n   * that allows to change request to the AHOI API and the response using filters\n   * {@link FetchHttpFilter}.\n   *\n   * @param {string} [installationId='']\n   * @returns {FetchAPI}\n   * @memberof FetchHttpFactory\n   */\n  public getHttpClient(installationId?: string, bankingToken?: string): FetchAPI {\n    return async (url: string,\n                  options: RequestInit,\n                  installationid: string | undefined = installationId,\n                  bankingtoken: string | undefined = bankingToken): Promise => {\n\n      const httpContext: HttpContext = {\n        url,\n        installationid,\n        // default http options: timeout 5 sec and use compression if available\n        options: { compress: true, timeout: 5000, ...options },\n        data: new Map(),\n        isrequest: true,\n        bankingToken: bankingtoken ? new Token(bankingtoken) : undefined,\n      };\n\n      debug('get http client for %s', httpContext.url);\n      return this.applyFilterAndExecuteRequest(httpContext);\n    };\n  }\n\n  private async applyFilterAndExecuteRequest(httpContext: HttpContext): Promise {\n    // apply request filters, e.g. to set authentication header (Bearer token) or encrypted\n    // session key and encrypted installationid if encryption is needed\n    debug('apply filters request for %s', httpContext.url);\n\n    await this.applyFilters(httpContext, this.httpRequestFilters);\n\n    debug(httpContext.options);\n    try {\n      // execute request using fetch http client\n      const response: Response = await nodeFetch(httpContext.url, httpContext.options);\n      if (response.ok) {\n        httpContext.response = response;\n      } else {\n        const errorMsg = await response.text();\n        throw new FetchError(errorMsg, 'ahoi-api-error', '');\n      }\n    } catch (err) {\n      error(err);\n      throw err instanceof Error ? err : new Error(err);\n    }\n\n    // debug(await httpContext.response.json());\n\n    // apply response filters (same as for request) e.g. to decrypt encrypted installationid\n    debug('Apply filters response for %s', httpContext.url);\n    await this.applyFilters({ ...httpContext, isrequest: false }, this.httpResponseFilters);\n    return httpContext.response;\n  }\n\n  private async applyFilters(httpContext: HttpContext, httpFilters: HttpFilter[]): Promise {\n    debug('Context is %s', httpContext.isrequest ? 'request' : 'response');\n    for await (const filter of httpFilters) {\n      debug('Apply filter %s for %s', filter.constructor.name, httpContext.url);\n      if (await filter.matches(httpContext)) {\n        debug('Before do filter %s for url %s', filter.constructor.name, httpContext.url);\n        await filter.doFilter(httpContext);\n        debug('After do filter %s for url %s', filter.constructor.name, httpContext.url);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpContext.html":{"url":"interfaces/HttpContext.html","title":"interface - HttpContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        authToken\n                                \n                                \n                                            Optional\n                                        bankingToken\n                                \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        installationid\n                                \n                                \n                                        isrequest\n                                \n                                \n                                        options\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authToken\n                                    \n                                \n                                \n                                    \n                                        authToken:     Token\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Token\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bankingToken\n                                    \n                                \n                                \n                                    \n                                        bankingToken:     Token\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Token\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        installationid\n                                    \n                                \n                                \n                                    \n                                        installationid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isrequest\n                                    \n                                \n                                \n                                    \n                                        isrequest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     RequestInit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestInit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestInit } from 'node-fetch';\n\nimport { Token } from '../../auth/token';\n\nexport interface HttpFilter {\n  matches(httpContext: HttpContext): Promise;\n  doFilter(httpContext: HttpContext): Promise;\n}\n\nexport interface HttpContext {\n  url: string;\n  options: RequestInit;\n  isrequest: boolean;\n  data: Map;\n  installationid?: string;\n  response?: any;\n  authToken?: Token;\n  bankingToken?: Token;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpFilter.html":{"url":"interfaces/HttpFilter.html","title":"interface - HttpFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    doFilter\n                                \n                                \n                                    matches\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoFilter(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/httpfilter/httpfilter.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { RequestInit } from 'node-fetch';\n\nimport { Token } from '../../auth/token';\n\nexport interface HttpFilter {\n  matches(httpContext: HttpContext): Promise;\n  doFilter(httpContext: HttpContext): Promise;\n}\n\nexport interface HttpContext {\n  url: string;\n  options: RequestInit;\n  isrequest: boolean;\n  data: Map;\n  installationid?: string;\n  response?: any;\n  authToken?: Token;\n  bankingToken?: Token;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpRequestTimeoutFilter.html":{"url":"classes/HttpRequestTimeoutFilter.html","title":"class - HttpRequestTimeoutFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpRequestTimeoutFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractHttpFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Public\n                                    Async\n                                doFilter\n                            \n                            \n                                    Protected\n                                    Async\n                                filterRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                filterResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getBankingToken\n                            \n                            \n                                    Protected\n                                    Async\n                                getResponse\n                            \n                            \n                                    Protected\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                matches\n                            \n                            \n                                    Protected\n                                setHeader\n                            \n                            \n                                    Protected\n                                usesMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/httpfilter/httprequesttimeoutfilter.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            doFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doFilter(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterRequest(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            filterResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getBankingToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBankingToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponse(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matches(httpContext: HttpContext)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setHeader(httpContext: HttpContext, name: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            usesMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usesMethod(httpContext: HttpContext, method: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractHttpFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractHttpFilter:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpContext\n                                                        \n                                                                    HttpContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpContext } from '../lib/httpfilter/httpfilter';\nimport { AbstractHttpFilter } from './abstracthttpfilter';\n\nexport class HttpRequestTimeoutFilter extends AbstractHttpFilter {\n\n  public async matches(httpContext: HttpContext): Promise {\n    // set timeout header if granting new bank access\n    return httpContext.url.endsWith('/accesses') && this.usesMethod(httpContext, 'POST');\n  }\n\n  protected async filterRequest(httpContext: HttpContext): Promise {\n    // currently granting bank access in AHOI is an synchronous process that can take some time\n    // to complete as all account data will be fetched from the banking provider\n    httpContext.options.timeout = 60000; // 60 sec\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InstallationIdCryptService.html":{"url":"classes/InstallationIdCryptService.html","title":"class - InstallationIdCryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InstallationIdCryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decryptInstallationId\n                            \n                            \n                                    Public\n                                    Async\n                                encryptInstallationId\n                            \n                            \n                                    Public\n                                isEncrypted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptKey: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptKey\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PREFIX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PREFIX:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'enc-'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decryptInstallationId(encryptedInstallationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encryptedInstallationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            encryptInstallationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptInstallationId(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEncrypted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEncrypted(installationId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cryptservice/installationidcryptservice.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        installationId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AESCrypt } from '../lib/crypt/aescrypt';\n\nexport class InstallationIdCryptService {\n\n  private static readonly PREFIX = 'enc-';\n\n  constructor(private cryptKey: string) { }\n\n  public async encryptInstallationId(installationId: string): Promise {\n    return InstallationIdCryptService.PREFIX +\n      await AESCrypt.encryptRandomIV(installationId, this.cryptKey);\n  }\n\n  public decryptInstallationId(encryptedInstallationId: string): string {\n    if (this.isEncrypted(encryptedInstallationId)) {\n      const idWithoutPrefix = encryptedInstallationId.substring(InstallationIdCryptService.PREFIX.length);\n      return AESCrypt.decryptRandomIV(idWithoutPrefix, this.cryptKey);\n    }\n    return encryptedInstallationId;\n  }\n\n  public isEncrypted(installationId: string): boolean {\n    return installationId.startsWith(InstallationIdCryptService.PREFIX);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RSACrypt.html":{"url":"classes/RSACrypt.html","title":"class - RSACrypt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RSACrypt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/crypt/rsacrypt.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PEM_KEY_END\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                PEM_KEY_START\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                encryptWithRsaPublicKey\n                            \n                            \n                                    Static\n                                keyToPEMKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PEM_KEY_END\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PEM_KEY_END:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-----END PUBLIC KEY-----'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            PEM_KEY_START\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PEM_KEY_START:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-----BEGIN PUBLIC KEY-----'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encryptWithRsaPublicKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encryptWithRsaPublicKey(text: string, key: string, padding: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        padding\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                constants.RSA_PKCS1_OAEP_PADDING\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            keyToPEMKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyToPEMKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/lib/crypt/rsacrypt.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as constants from 'constants';\nimport * as crypto from 'crypto';\n\nimport { Base64Util } from './base64util';\n\nexport class RSACrypt {\n\n  private static readonly PEM_KEY_START = '-----BEGIN PUBLIC KEY-----';\n  private static readonly PEM_KEY_END = '-----END PUBLIC KEY-----';\n\n  // Class has only static methods, instantiation should not be possible\n  private constructor() {}\n\n  public static encryptWithRsaPublicKey(text: string,\n                                        key: string,\n                                        padding: number = constants.RSA_PKCS1_OAEP_PADDING): string {\n    const pemKey = key.startsWith(RSACrypt.PEM_KEY_START) ? key : RSACrypt.keyToPEMKey(key);\n    return Base64Util.urlSafeBase64Encode(\n      crypto.publicEncrypt({ padding, key: pemKey }, Buffer.from(text, 'base64')),\n    );\n  }\n\n  public static keyToPEMKey(key: string): string {\n    const splitted = (Base64Util.urlSafeBase64ToBase64(key || '').match(/.{1,64}/g));\n    if (splitted) {\n      return `${RSACrypt.PEM_KEY_START}\\n${splitted.join('\\n')}\\n${this.PEM_KEY_END}`;\n    }\n    throw new Error('Unable to convert public key into PEM key. \\\n                        Given public key is null or too short.');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleCacheCleaner.html":{"url":"interfaces/SimpleCacheCleaner.html","title":"interface - SimpleCacheCleaner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleCacheCleaner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/lib/cache/basiccache.ts\n        \n\n            \n                Description\n            \n            \n                Simple function used to clean cache value for value. Function should return true, if value should\nremoved from cache.\nExample implementation:\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n *\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [value: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     boolean\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { debug } from 'console';\nimport * as crypto from 'crypto';\n\nimport { CacheCleaner } from './basiccache';\n\nexport interface CacheCleaner {\n  (cacheMap: Map): void;\n}\n\n/**\n * Simple function used to clean cache value for value. Function should return true, if value should\n * removed from cache.\n * Example implementation:\n * ```typescript\n * private static cleanCache(): SimpleCacheCleaner {\n *   return (value: Mytype) => {\n *     return new Date().getTime() - value.age > 10000;\n *   };\n * }\n * ```\n *\n * @export\n * @interface SimpleCacheCleaner\n * @template T\n */\nexport interface SimpleCacheCleaner {\n  (value: T): boolean;\n}\n\nexport abstract class BasicCache {\n\n  private cacheMap: Map;\n\n  constructor(protected maxEntries: number,\n              tidyFunction?: CacheCleaner | SimpleCacheCleaner,\n              cleanInterval: number = 1000 * 60 * 30) {\n    this.cacheMap = new Map();\n    if (tidyFunction) {\n      this.startCleanerJob(tidyFunction, cleanInterval);\n    }\n  }\n\n  public set(key: string, value: T) : void {\n    this.cacheMap.set(this.hashKey(key), value);\n    this.ensureCapacity();\n  }\n\n  public get(key: string) : T | undefined {\n    const hashedKey = this.hashKey(key);\n    const value: T | undefined = this.cacheMap.get(hashedKey);\n    // Move value to last position to ensure, never or rarely used items are at the top of the list.\n    // If cache size exceeds, values are deletet from top to bottom. So rarely used items will be\n    // deleted first.\n    if (value) {\n      this.cacheMap.delete(hashedKey);\n      this.cacheMap.set(hashedKey, value);\n    }\n    return value;\n  }\n\n  private hashKey(key: string): string {\n    return key.length  this.maxEntries) {\n      // delete first item\n      for (const [key, value] of this.cacheMap) {\n        this.cacheMap.delete(key);\n        break;\n      }\n    }\n  }\n\n  private startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner,\n                          cleanInterval: number): void {\n    if (tidyFunction.length === 2) {\n      setInterval(() => { tidyFunction.call(this.cacheMap); }, cleanInterval);\n    } else {\n      setInterval(() => { this.cleanCache(tidyFunction as SimpleCacheCleaner); }, cleanInterval);\n    }\n  }\n\n  private cleanCache(tidyFunction: SimpleCacheCleaner): void {\n    for (const [key, value] of this.cacheMap.entries()) {\n      if (value) {\n        const shouldRemoved = tidyFunction.apply(null, [value]);\n        if (shouldRemoved) {\n          debug('Remove item %s from cache', value);\n          this.cacheMap.delete(key);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/token.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                EMPTY_TOKEN\n                            \n                            \n                                    Static\n                                    Readonly\n                                JWT_PROP_ENCRYPTION_DISABLED\n                            \n                            \n                                    Private\n                                tokendata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                    Public\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getClientId\n                            \n                            \n                                    Public\n                                getContextId\n                            \n                            \n                                    Public\n                                getExpiration\n                            \n                            \n                                    Public\n                                getHeader\n                            \n                            \n                                    Public\n                                getJti\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                isExpired\n                            \n                            \n                                    Public\n                                useEncryption\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accesstoken: string)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/auth/token.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accesstoken\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ASSUMED_MAX_REQUEST_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            EMPTY_TOKEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EMPTY_TOKEN:     TokenData\n\n                    \n                \n                    \n                        \n                            Type :     TokenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            JWT_PROP_ENCRYPTION_DISABLED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        JWT_PROP_ENCRYPTION_DISABLED:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ENC_DIS'\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokendata\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokendata:     TokenData\n\n                    \n                \n                    \n                        \n                            Type :     TokenData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decode(accesstoken: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accesstoken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TokenData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccessToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getClientId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getClientId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getContextId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getContextId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getExpiration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getExpiration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getJti\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getJti()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExpired(assumedRequestTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        assumedRequestTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Token.ASSUMED_MAX_REQUEST_TIME\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        useEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/auth/token.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\n\ninterface TokenData {\n  readonly accesstoken: string;\n  readonly clientid: string;\n  readonly contextid: string;\n  readonly jti: string;\n  readonly scope: string[];\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  public static readonly ASSUMED_MAX_REQUEST_TIME: number = 10; // seconds\n  public static readonly JWT_PROP_ENCRYPTION_DISABLED: string = 'ENC_DIS';\n\n  private static readonly EMPTY_TOKEN: TokenData = {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  };\n\n  private tokendata: TokenData;\n\n  constructor(accesstoken: string) {\n    this.tokendata = this.decode(accesstoken);\n  }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getClientId(): string {\n    return this.tokendata.clientid;\n  }\n\n  public getContextId(): string {\n    return this.tokendata.contextid;\n  }\n\n  public getJti(): string {\n    return this.tokendata.jti;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public useEncryption(): boolean {\n    return !this.tokendata.scope.includes(Token.JWT_PROP_ENCRYPTION_DISABLED);\n  }\n\n  public isExpired(assumedRequestTime: number = Token.ASSUMED_MAX_REQUEST_TIME): boolean {\n    return this.getExpiration() - assumedRequestTime \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenCache.html":{"url":"classes/TokenCache.html","title":"class - TokenCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/cache/tokencache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CLEAN_INTERVAL\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_ENTRIES\n                            \n                            \n                                    Private\n                                cacheMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                cleanCache\n                            \n                            \n                                    Private\n                                cleanCache\n                            \n                            \n                                    Private\n                                ensureCapacity\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                hashKey\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Private\n                                startCleanerJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxEntries, cleanInterval: number)\n                    \n                \n                        \n                            \n                                Defined in src/starfinanz/ahoi/cache/tokencache.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxEntries\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cleanInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CLEAN_INTERVAL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CLEAN_INTERVAL:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000 * 60 * 30\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MAX_ENTRIES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAX_ENTRIES:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100000\n                        \n                    \n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cacheMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/starfinanz/ahoi/cache/tokencache.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SimpleCacheCleaner\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanCache(tidyFunction: SimpleCacheCleaner)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ensureCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ensureCapacity()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hashKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashKey(key: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, value: T)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startCleanerJob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startCleanerJob(tidyFunction: CacheCleaner | SimpleCacheCleaner, cleanInterval: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BasicCache\n\n                                \n                            \n                        \n                            \n                                    Defined in BasicCache:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tidyFunction\n                                                        \n                                                                    CacheCleaner | SimpleCacheCleaner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        cleanInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from '../auth/token';\nimport { BasicCache, SimpleCacheCleaner } from '../lib/cache/basiccache';\n\nexport class TokenCache extends BasicCache {\n\n  private static readonly CLEAN_INTERVAL: number = 1000 * 60 * 30; // 30 min.\n  public static readonly MAX_ENTRIES = 100000;\n\n  constructor(maxEntries = TokenCache.MAX_ENTRIES,\n              cleanInterval: number = TokenCache.CLEAN_INTERVAL) {\n    super(maxEntries, TokenCache.cleanCache(), cleanInterval);\n  }\n\n  private static cleanCache(): SimpleCacheCleaner {\n    return (token: Token) => {\n      return token.isExpired();\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/starfinanz/ahoi/auth/token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accesstoken\n                                \n                                \n                                        clientid\n                                \n                                \n                                        contextid\n                                \n                                \n                                        expires\n                                \n                                \n                                        header\n                                \n                                \n                                        jti\n                                \n                                \n                                        payload\n                                \n                                \n                                        scope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesstoken\n                                    \n                                \n                                \n                                    \n                                        accesstoken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientid\n                                    \n                                \n                                \n                                    \n                                        clientid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contextid\n                                    \n                                \n                                \n                                    \n                                        contextid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as jwt from 'jsonwebtoken';\n\ninterface TokenData {\n  readonly accesstoken: string;\n  readonly clientid: string;\n  readonly contextid: string;\n  readonly jti: string;\n  readonly scope: string[];\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  public static readonly ASSUMED_MAX_REQUEST_TIME: number = 10; // seconds\n  public static readonly JWT_PROP_ENCRYPTION_DISABLED: string = 'ENC_DIS';\n\n  private static readonly EMPTY_TOKEN: TokenData = {\n    accesstoken: '',\n    clientid: '',\n    contextid: '',\n    jti: '',\n    scope: [],\n    expires: 0,\n    payload: {},\n    header: {},\n  };\n\n  private tokendata: TokenData;\n\n  constructor(accesstoken: string) {\n    this.tokendata = this.decode(accesstoken);\n  }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getClientId(): string {\n    return this.tokendata.clientid;\n  }\n\n  public getContextId(): string {\n    return this.tokendata.contextid;\n  }\n\n  public getJti(): string {\n    return this.tokendata.jti;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public useEncryption(): boolean {\n    return !this.tokendata.scope.includes(Token.JWT_PROP_ENCRYPTION_DISABLED);\n  }\n\n  public isExpired(assumedRequestTime: number = Token.ASSUMED_MAX_REQUEST_TIME): boolean {\n    return this.getExpiration() - assumedRequestTime \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ahoi-swagger-fetchclient : https://github.com/sparkassen-hub/ahoi-swagger-fetchclient#v0.0.1\n        \n            cpx : ^1.5.0\n        \n            jsonwebtoken : ^8.3.0\n        \n            node-fetch : ^2.2.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Cipher   (src/.../aescrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/starfinanz/ahoi/lib/crypt/aescrypt.ts\n    \n        \n            \n                \n                    \n                        \n                        Cipher\n                    \n                \n                        \n                            \n                                 AES_CBC\n                            \n                        \n                        \n                            \n                                Value : aes-${strength}-cbc\n                            \n                        \n                        \n                            \n                                 AES_CTR\n                            \n                        \n                        \n                            \n                                Value : aes-${strength}-ctr\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : aes-256-cbc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAHOI API Node.js Client\n\n→ Zu GitHub\nAHOI - Open Banking API\nThe AHOI Open Banking API provides easy access to banks and payment service providers.\nThe API can be used to retrieve account and deposit account information, execute transfers,\ndetermine forecasts, and more.\nGet more information about the AHOI API here:\n\nAHOI Cookbook\nAHOI Explorer\nAHOI Demo-Account\n\nAHOI Node.js Client\nThis Node.js module provides easy access to banks via the AHOI Open Banking API. The client module is designed to be used within an existing Node.js application. It extends it with the feature  to get accesses to bank data such as account transactions or deposit data.\nTo simply try out the client or as a starting point for your own application, we recommend\nour demo application which uses this client: AHOI Node.js Appservice\nGetting Started\nPrerequisites\n\nNode.js in Version 10.0.0 oder höher. Die Installation ist hier beschrieben : Node.js download.\nEine Node.js-Anwendung, in die das Modul als Abhängigkeit eingebunden wird.\n\nInstall the node module\nnpm install --save git+ssh://git@github.com:sparkassen-hub/ahoi-nodejs-client.gitCreate an AHOI demo account\nGo to AHOI Demo-Account and register for a\ndemo account.\nGet bank account transactions in 5 steps\nTo get account transactions for an user you have to manage five steps:\n\nCreate a new user in AHOI (technically: retrieve an installationId)\nLet the user select a bank\nCreate bank access with PIN and username\n(Optional) Select one or more accounts (default is all)\nShow the transactions for the selected accounts\n\nQuickstart\nThe following code snippets show how to technical implement the steps from creating a user in AHOI\nto retrieving account transactions.\nA) Include the module in your code\n// Typescript\nimport { AhoiApiFactory } from 'ahoi-api-node';\n\n// JavaScript\nconst { AhoiApiFactory } = require('ahoi-api-node');B) Add the configuration to access the AHOI API\n// Configuration: see information below\nconst ahoiConfig = {\n  clientId: 'SBM_XXqaeX30T2D',\n  clientSecret: '2e066yXXXLxa3zn',\n  appSecretIv: 'mP3IdoOKxVzOQzX22IueXg',\n  appSecretKey: 'dGw6XXtcyryKqXeeHgqPTg',\n  cryptKey: 'ScL&aFPazDw6S#k3',\n  baseurl: 'https://banking-sandbox.starfinanz.de/ahoi/api/v2',\n};\n\nconst ahoiApi = new AhoiApiFactory(ahoiConfig);C) Create a new user in AHOI\n// Get an installationid (and store it in your user management system)\nconst registrationApi: RegistrationApi = await ahoiApi.getRegistrationApi();\nconst installationId: RegistrationResponse = await registrationApi.register();D) Let the use select a bank, get a list of banks before\n// Get a list of(banking) providers\nconst providerApi: ProviderApi = await ahoiApi.getProviderApi(installationId);\nconst providers: Provider[] = await providerApi.getProviders();E) Create bank access with PIN and username\nThe bank access is linked with the installationId\n// Grant banking access by a user\nconst accessApi: AccessApi = await ahoiApi.getAccessApi(installationId);\n// To grant banking access the user must provide the pin and username or customernumber. It differs\n// from bank to to bank which data additionally to the pin are needed.\nconst access: Access = {  \n                          type: 'BankAccess',\n                          providerId: provider[0].id,\n                          accessFields: {\n                                          USERNAME: username,\n                                          CUSTOMERNUMBER: customernumber,\n                                          PIN: pin,\n                                        },\n                        };\nconst allowedAccess: Access = await accessApi.postAccess(access);E) Select accounts.\nAs AHOI initially fetches all accounts from a bank access, the accounts not\nselected by user must be deleted from AHOI.\n// Delete banking accounts from AHOI or show as list\nconst accountApi: AccountApi = await ahoiApi.getAccountApi(installationId);\n// accessid comes from banking access granted before: Access#id\nconst accounts: Account[] = await accountApi.getAccounts(allowedAccess.id);\nawait accountApi.deleteAccount(allowedAccess.id, accounts[0].id);F) Show account transactions\n// Show transactions for a bank account\nconst accessApi: AccessApi = await ahoiApi.getAccessApi(Server.INSTALLATION_ID);\n        const transactions: Asset[] = accessApi.listAssets(accessId, accountId, 30);Configuration\nThe AHOI access data (clientId, clientSecret, appSecretIv, appSecretKey) can be found in your AHOI\n(demo) account.\n\nThe cryptKey is used to encrypt the installationId internally before it is stored e.g. in a user\nmangement system. This way it is ensured, that the installationId for an user is always stored\nencrypted.\nYou can choose any password as cryptKey, but the recommended length is 32 chars.\nTest it with your demo account\nTo get transactions for a bank account, you have to grant access before. But for sure you don't want\nto use your real bank access data.\nExactly for this AHOI has (technically) created a demo bank called Sandbank. After registration at\nAHOI you have automatically two demo accounts at this bank. You'll find your access\ndata (PIN and username) in your AHOI account.\nWhen testing the client you should select as bank the 'Sandbank'. To grant access to the bank use\nthe PIN and username from your AHOI account (see below).\n\nInstallationId\nAn installationId is needed to fetch account data for an user. In AHOI it is not linked with a user\nbut only with one or more accounts. Therefore the following procedure should be chosen:\n\nFetch installationId from AHOI\nSave installationId for an user e.g. within your user management\nAdd bank accesses to this installationId\nRetrieve transactions for an user using the installationId linked to the user\n\nAHOI API Documentation\n\nAHOI API Docs\nAHOI Cookbook\nAHOI Explorer\nAHOI Node.js Client\n\nBuild from source\n# Build\nnpm run build\n\n# Generate TS doc separate\nnpm run docLicense\nLicensed under MIT.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODO\n\n Certificate?\n Tests\n Cache: https://github.com/cayasso/cacheman?\n Debug Logging\n TSDoc\n Exception-Handling\n Retry if connection failed?\n configure cache size?\n return authtoken so it may be stored in user management system?\n Compress cache with Snappy (https://github.com/kesla/node-snappy) ?\n Write cache to disk: npm install level\n Auto generation of wrapper class?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
